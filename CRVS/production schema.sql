DROP USER CRVSPROD_NEW cascade;
DROP TABLESPACE CRVSDATA INCLUDING CONTENTS AND DATAFILES ;

CREATE USER CRVSPROD_NEW;
CREATE TABLESPACE CRVSDATA
  DATAFILE 'CRVSDATA_NEW.dbf' SIZE 100M
  AUTOEXTEND ON
  NEXT 100M
  MAXSIZE UNLIMITED
  LOGGING
  DEFAULT STORAGE ( INITIAL 64K NEXT 1M );

GRANT UNLIMITED TABLESPACE TO CRVSPROD_NEW;

CREATE TABLE "CRVSPROD_NEW"."AC_GROUPS"
   (	"GROUP_ID" NUMBER(19,0) NOT NULL ENABLE,
	"GROUP_NAME" VARCHAR2(100),
	"EDUCATION_LEVEL_ID" NUMBER(19,0),
	"GROUP_CODE" VARCHAR2(20),
	"INSTITUTE_TYPE" NUMBER(10,0),
	"ENTERED_BY" VARCHAR2(20),
	"LAST_UPDATED_BY" VARCHAR2(20),
	"ENTRY_TIMESTAMP" TIMESTAMP (6),
	"LAST_UPDATED_TIMESTAMP" TIMESTAMP (6),
	 CONSTRAINT "AC_GROUPS_GROUP_ID_PK" PRIMARY KEY ("GROUP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."AC_GROUPS_GROUP_ID_TRG"
            before insert on AC_GROUPS
            for each row
                begin
            if :new.GROUP_ID is null then
                select ac_groups_GROUP_ID_seq.nextval into :new.GROUP_ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."AC_GROUPS_GROUP_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."AC_GROUPS_GROUP_ID_PK" ON "CRVSPROD_NEW"."AC_GROUPS" ("GROUP_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."API_CREDENTIALS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"USERNAME" VARCHAR2(255) NOT NULL ENABLE,
	"PASSWORD" VARCHAR2(255) NOT NULL ENABLE,
	"ORGANIZATION" VARCHAR2(255) NOT NULL ENABLE,
	"ACCESS_TOKEN" CLOB,
	"REFRESH_TOKEN" CLOB,
	"EXPIRED_TIME" VARCHAR2(255),
	"STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "API_CREDENTIALS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE,
	 CONSTRAINT "AP_CREDENTIAL_ORGANIZATIO_UK" UNIQUE ("ORGANIZATION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
 LOB ("ACCESS_TOKEN") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT))
 LOB ("REFRESH_TOKEN") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."API_CREDENTIALS_ID_TRG"
            before insert on API_CREDENTIALS
            for each row
                begin
            if :new.ID is null then
                select api_credentials_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."API_CREDENTIALS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."API_CREDENTIALS_ID_PK" ON "CRVSPROD_NEW"."API_CREDENTIALS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000143364C00006$$" ON "CRVSPROD_NEW"."API_CREDENTIALS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000143364C00005$$" ON "CRVSPROD_NEW"."API_CREDENTIALS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."AP_CREDENTIAL_ORGANIZATIO_UK" ON "CRVSPROD_NEW"."API_CREDENTIALS" ("ORGANIZATION")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."API_EXPOSE_USERS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"ORGANIZATION" VARCHAR2(255) NOT NULL ENABLE,
	"USERNAME" VARCHAR2(255) NOT NULL ENABLE,
	"IP_ADDRESS" VARCHAR2(255),
	"PASSWORD" VARCHAR2(255) NOT NULL ENABLE,
	"PERMISSION" CLOB,
	"STATUS" CHAR(1) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "API_EXPOSE_USERS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
 LOB ("PERMISSION") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."API_EXPOSE_USERS_ID_TRG"
            before insert on API_EXPOSE_USERS
            for each row
                begin
            if :new.ID is null then
                select api_expose_users_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."API_EXPOSE_USERS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."API_EXPOSE_USERS_ID_PK" ON "CRVSPROD_NEW"."API_EXPOSE_USERS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000143421C00006$$" ON "CRVSPROD_NEW"."API_EXPOSE_USERS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."AP_EXPOS_USER_ORGANIZATIO_UK" ON "CRVSPROD_NEW"."API_EXPOSE_USERS" (LOWER("ORGANIZATION"))
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"HTTP_CODE" VARCHAR2(3),
	"REQ_DOB" DATE,
	"REQ_NID10_DIGIT" VARCHAR2(10),
	"REQ_NID17_DIGIT" VARCHAR2(17),
	"RESP_STATUS" VARCHAR2(255),
	"RESP_STATUS_CODE" VARCHAR2(255),
	"RESP_MESSAGE" VARCHAR2(255),
	"REQ_ID" VARCHAR2(255),
	"RESP_NAME" VARCHAR2(255),
	"RESP_NAME_EN" VARCHAR2(255),
	"RESP_DOB" DATE,
	"RESP_BIRTH_PLACE" VARCHAR2(255),
	"RESP_NATIONAL_ID" VARCHAR2(255),
	"RESP_DIVISION" VARCHAR2(255),
	"RESP_DISTRICT" VARCHAR2(255),
	"RESP_RMO" VARCHAR2(255),
	"RESP_UPOZILA" VARCHAR2(255),
	"RESP_POST_OFFICE" VARCHAR2(255),
	"RESP_POSTAL_CODE" VARCHAR2(255),
	"RESP_ADDITIONAL_MOUZA" VARCHAR2(255),
	"RESP_ADDITIONAL_VILLAGE" VARCHAR2(255),
	"RESP_HOLDING_NO" VARCHAR2(255),
	"RESP_REGION" VARCHAR2(255),
	"ROW_RESPONSE" CLOB,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"REQ_EIIN" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 0 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
 LOB ("ROW_RESPONSE") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS_ID_PK_2" ON "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
ALTER TABLE "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS" ADD CONSTRAINT "ARC_NID_VERIFICATIONS_ID_PK_2" PRIMARY KEY ("ID")
  USING INDEX "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS_ID_PK_2"  ENABLE;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS_ID_TRG_2"
            before insert ON CRVSPROD_NEW.ARC_NID_VERIFICATIONS
            for each row
begin
            if :new.ID is null then
                select arc_nid_verifications_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS_ID_TRG_2" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000326963C00025$$" ON "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS_ID_PK_2" ON "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS_01032024"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"HTTP_CODE" VARCHAR2(3),
	"REQ_DOB" DATE,
	"REQ_NID10_DIGIT" VARCHAR2(10),
	"REQ_NID17_DIGIT" VARCHAR2(17),
	"RESP_STATUS" VARCHAR2(255),
	"RESP_STATUS_CODE" VARCHAR2(255),
	"RESP_MESSAGE" VARCHAR2(255),
	"REQ_ID" VARCHAR2(255),
	"RESP_NAME" VARCHAR2(255),
	"RESP_NAME_EN" VARCHAR2(255),
	"RESP_DOB" DATE,
	"RESP_BIRTH_PLACE" VARCHAR2(255),
	"RESP_NATIONAL_ID" VARCHAR2(255),
	"RESP_DIVISION" VARCHAR2(255),
	"RESP_DISTRICT" VARCHAR2(255),
	"RESP_RMO" VARCHAR2(255),
	"RESP_UPOZILA" VARCHAR2(255),
	"RESP_POST_OFFICE" VARCHAR2(255),
	"RESP_POSTAL_CODE" VARCHAR2(255),
	"RESP_ADDITIONAL_MOUZA" VARCHAR2(255),
	"RESP_ADDITIONAL_VILLAGE" VARCHAR2(255),
	"RESP_HOLDING_NO" VARCHAR2(255),
	"RESP_REGION" VARCHAR2(255),
	"ROW_RESPONSE" CLOB,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"REQ_EIIN" NUMBER(10,0),
	 CONSTRAINT "ARC_NID_VERIFICATIONS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
 LOB ("ROW_RESPONSE") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS_ID_TRG"
            before insert on "ARC_NID_VERIFICATIONS_01032024"
            for each row
                begin
            if :new.ID is null then
                select arc_nid_verifications_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS_ID_PK" ON "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS_01032024" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000143359C00025$$" ON "CRVSPROD_NEW"."ARC_NID_VERIFICATIONS_01032024" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
;

CREATE TABLE "CRVSPROD_NEW"."ARC_ORG_STUDENT_RESPONSES"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"BRN" VARCHAR2(255) NOT NULL ENABLE,
	"DOB" VARCHAR2(255) NOT NULL ENABLE,
	"FATHER_NAME_BN" VARCHAR2(255),
	"FATHER_NAME_EN" VARCHAR2(255),
	"MOTHER_NAME_BN" VARCHAR2(255),
	"MOTHER_NAME_EN" VARCHAR2(255),
	"RESPONSE_STATUS" VARCHAR2(255) NOT NULL ENABLE,
	"REQUEST_RESPONSE" CLOB NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"ORIGINAL_REQUEST_RESPONSE" CLOB,
	"UID" VARCHAR2(20),
	"REQ_EIIN" NUMBER(10,0),
	 CONSTRAINT "AR_OR_STUDEN_RESPONSE_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
 LOB ("REQUEST_RESPONSE") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT))
 LOB ("ORIGINAL_REQUEST_RESPONSE") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."ARC_ORG_STUDENT_RESPONSES_ID_T"
            before insert on ARC_ORG_STUDENT_RESPONSES
            for each row
                begin
            if :new.ID is null then
                select arc_org_student_responses_id_s.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."ARC_ORG_STUDENT_RESPONSES_ID_T" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000143375C00012$$" ON "CRVSPROD_NEW"."ARC_ORG_STUDENT_RESPONSES" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."AR_OR_STUDEN_RESPONSE_ID_PK" ON "CRVSPROD_NEW"."ARC_ORG_STUDENT_RESPONSES" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000143375C00009$$" ON "CRVSPROD_NEW"."ARC_ORG_STUDENT_RESPONSES" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
;

CREATE TABLE "CRVSPROD_NEW"."ARC_ORG_VERIFICATIONS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"RES_CODE" VARCHAR2(3),
	"RES_UID" VARCHAR2(30),
	"RES_UBRN" VARCHAR2(50),
	"EIIN" VARCHAR2(10),
	"STD_CRVS_ID" VARCHAR2(30),
	"PARAM_STD_BRN" VARCHAR2(50),
	"PARAM_STD_DOB" VARCHAR2(30),
	"PARAM_FATHER_NID" VARCHAR2(17),
	"PARAM_MOTHER_NID" VARCHAR2(17),
	"RES_FATHER_NAME" VARCHAR2(255),
	"RES_MOTHER_NAME" VARCHAR2(255),
	"PARAM_STD_NAME_BN" VARCHAR2(255),
	"PARAM_STD_NAME_EN" VARCHAR2(255),
	"RES_STD_NAME_BN" VARCHAR2(255),
	"RES_STD_NAME_EN" VARCHAR2(255),
	"ROW_RESPONSE" CLOB,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"MESSAGE" VARCHAR2(255),
	 CONSTRAINT "ARC_ORG_VERIFICATIONS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
 LOB ("ROW_RESPONSE") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."ARC_ORG_VERIFICATIONS_ID_TRG"
            before insert on ARC_ORG_VERIFICATIONS
            for each row
                begin
            if :new.ID is null then
                select arc_org_verifications_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."ARC_ORG_VERIFICATIONS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."ARC_ORG_VERIFICATIONS_ID_PK" ON "CRVSPROD_NEW"."ARC_ORG_VERIFICATIONS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000152666C00017$$" ON "CRVSPROD_NEW"."ARC_ORG_VERIFICATIONS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
;

CREATE TABLE "CRVSPROD_NEW"."ARC_STD_AVE_ATT_DATA"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"EIIN" VARCHAR2(6),
	"SRI_ID" NUMBER(19,0) NOT NULL ENABLE,
	"SCAI_ID" NUMBER(19,0) NOT NULL ENABLE,
	"ATT_YEAR" VARCHAR2(10) NOT NULL ENABLE,
	"MONTH_ID" NUMBER(10,0),
	"WORKING_DAY" NUMBER(10,0),
	"ATTENDANCE_DAY" NUMBER(10,0),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "ARC_STD_AVE_ATT_DATA_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION DEFERRED
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."ARC_STD_AVE_ATT_DATA_ID_TRG"
            before insert on ARC_STD_AVE_ATT_DATA
            for each row
                begin
            if :new.ID is null then
                select arc_std_ave_att_data_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."ARC_STD_AVE_ATT_DATA_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."ARC_STD_AVE_ATT_DATA_ID_PK" ON "CRVSPROD_NEW"."ARC_STD_AVE_ATT_DATA" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."ARC_STD_CURRENT_ACADEMIC_INFO"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"SRI_ID" NUMBER(19,0) NOT NULL ENABLE,
	"STD_CLASS_ID" NUMBER(10,0) NOT NULL ENABLE,
	"ACADEMIC_YEAR" VARCHAR2(4) NOT NULL ENABLE,
	"EIIN" VARCHAR2(6) NOT NULL ENABLE,
	"UID" VARCHAR2(10),
	"SHIFT_ID" NUMBER(10,0),
	"STD_SECTION" VARCHAR2(10),
	"CLASS_GROUP_ID" NUMBER(3,0),
	"ADMISSION_CLASS" NUMBER(3,0),
	"REG_NO" VARCHAR2(20),
	"ACADEMIC_ROLL_NO" VARCHAR2(10),
	"ADMISSION_DATE" DATE,
	"VERSIONS_ID" NUMBER(3,0),
	"SCHOLARSHIPS" NUMBER(3,0),
	"MERIT_STIPEND" NUMBER(3,0),
	"OTHER_SCHOLARSHIPS" NUMBER(3,0),
	"TRANSFER_IN" NUMBER(3,0),
	"REPEATER_ID" NUMBER(3,0),
	"OPTIONAL_SUBJECT_1" NUMBER(3,0),
	"OPTIONAL_SUBJECT_2" NUMBER(3,0),
	"OPTIONAL_SUBJECT_3" NUMBER(3,0),
	"OPTIONAL_SUBJECT_4" NUMBER(3,0),
	"HOBBY_ID_1" NUMBER(3,0),
	"HOBBY_ID_2" NUMBER(3,0),
	"HOBBY_ID_3" NUMBER(3,0),
	"HOBBY_ID_4" NUMBER(3,0),
	"HOBBY_ID_5" NUMBER(3,0),
	"HOBBY_ID_6" NUMBER(3,0),
	"HOBBY_ID_7" NUMBER(3,0),
	"HOBBY_ID_8" NUMBER(3,0),
	"HOBBY_ID_9" NUMBER(3,0),
	"HOBBY_ID_10" NUMBER(3,0),
	"HOBBY_ID_11" NUMBER(3,0),
	"HOBBY_ID_12" NUMBER(3,0),
	"HOBBY_ID_13" NUMBER(3,0),
	"HOBBY_ID_14" NUMBER(3,0),
	"HOBBY_ID_15" NUMBER(3,0),
	"COCURRICULAR_ID_1" NUMBER(3,0),
	"COCURRICULAR_ID_2" NUMBER(3,0),
	"COCURRICULAR_ID_3" NUMBER(3,0),
	"COCURRICULAR_ID_4" NUMBER(3,0),
	"COCURRICULAR_ID_5" NUMBER(3,0),
	"COCURRICULAR_ID_6" NUMBER(3,0),
	"COCURRICULAR_ID_7" NUMBER(3,0),
	"COCURRICULAR_ID_8" NUMBER(3,0),
	"COCURRICULAR_ID_9" NUMBER(3,0),
	"COCURRICULAR_ID_10" NUMBER(3,0),
	"COCURRICULAR_ID_11" NUMBER(3,0),
	"COCURRICULAR_ID_12" NUMBER(3,0),
	"COCURRICULAR_ID_13" NUMBER(3,0),
	"COCURRICULAR_ID_14" NUMBER(3,0),
	"COCURRICULAR_ID_15" NUMBER(3,0),
	"COCURRICULAR_ID_16" NUMBER(3,0),
	"COCURRICULAR_ID_17" NUMBER(3,0),
	"COCURRICULAR_ID_18" NUMBER(3,0),
	"COCURRICULAR_ID_19" NUMBER(3,0),
	"COCURRICULAR_ID_20" NUMBER(3,0),
	"COCURRICULAR_ID_21" NUMBER(3,0),
	"COCURRICULAR_ID_22" NUMBER(3,0),
	"COCURRICULAR_ID_23" NUMBER(3,0),
	"COCURRICULAR_ID_24" NUMBER(3,0),
	"COCURRICULAR_ID_25" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_1" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_2" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_3" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_4" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_5" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_6" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_7" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_1" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_2" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_3" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_4" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_5" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_6" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_7" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_1" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_2" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_3" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_4" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_5" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_6" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_7" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_1" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_2" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_3" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_4" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_5" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_6" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_7" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_1" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_2" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_3" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_4" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_5" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_6" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_7" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_1" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_2" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_3" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_4" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_5" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_6" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_7" NUMBER(3,0),
	"STD_CATEGORY_1" NUMBER(3,0),
	"STD_CATEGORY_2" NUMBER(3,0),
	"STD_CATEGORY_3" NUMBER(3,0),
	"STD_CATEGORY_4" NUMBER(3,0),
	"SUBJECT_RESULT_TOTAL_GPA" VARCHAR2(5),
	"STUDENT_SIG_DATE" DATE,
	"CLASS_TEACHER_SIG_DATE" DATE,
	"CLASS_TEACHER_NAME" VARCHAR2(150),
	"CLASS_TEACHER_MOBILE_NO" VARCHAR2(11),
	"CLASS_TEACHER_NID" NUMBER(19,0),
	"HEAD_TEACHER_SIG_DATE" DATE,
	"HEAD_TEACHER_NAME" VARCHAR2(150),
	"HEAD_TEACHER_MOBILE_NO" VARCHAR2(11),
	"HEAD_TEACHER_NID_NO" NUMBER(19,0),
	"HEAD_TEC_CET_STATUS" NUMBER(3,0),
	"MIGRATION_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"ACTIVE_STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"PROMOTION_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "AR_ST_CURREN_ACADEMI_INF_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION DEFERRED
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."ARC_STD_CURRENT_ACADEMIC_INFO_"
            before insert on ARC_STD_CURRENT_ACADEMIC_INFO
            for each row
                begin
            if :new.ID is null then
                select arc_std_current_academic_info_.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."ARC_STD_CURRENT_ACADEMIC_INFO_" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."AR_ST_CURREN_ACADEMI_INF_ID_PK" ON "CRVSPROD_NEW"."ARC_STD_CURRENT_ACADEMIC_INFO" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA" ;

COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_CURRENT_ACADEMIC_INFO.SRI_ID IS 'student table column id';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_CURRENT_ACADEMIC_INFO.SCHOLARSHIPS IS '1=yes,2=no';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_CURRENT_ACADEMIC_INFO.MERIT_STIPEND IS '1=yes,2=no';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_CURRENT_ACADEMIC_INFO.OTHER_SCHOLARSHIPS IS '1=yes,2=no';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_CURRENT_ACADEMIC_INFO.TRANSFER_IN IS '1=yes,2=no';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_CURRENT_ACADEMIC_INFO.REPEATER_ID IS '1=yes,2=no';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_CURRENT_ACADEMIC_INFO.HEAD_TEC_CET_STATUS IS '1=no,2=yes';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_CURRENT_ACADEMIC_INFO.MIGRATION_STATUS IS '0=no,1=yes';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_CURRENT_ACADEMIC_INFO.ACTIVE_STATUS IS '1=active,0=dropout';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_CURRENT_ACADEMIC_INFO.PROMOTION_STATUS IS '1=yes,0=no';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_CURRENT_ACADEMIC_INFO.STATUS IS '1=active,0=inactive';

CREATE TABLE "CRVSPROD_NEW"."ARC_STD_PREVIOUS_EXAM_RESULTS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"SRI_ID" NUMBER(19,0) NOT NULL ENABLE,
	"PREVIOUS_EXAM_ID" NUMBER(10,0) NOT NULL ENABLE,
	"PREVIOUS_EXAM_ROLL" VARCHAR2(20),
	"PREVIOUS_INS_EIIN" VARCHAR2(6),
	"PREVIOUS_INS_NAME" VARCHAR2(150),
	"PREVIOUS_EXAM_BORD_ID" NUMBER(10,0),
	"PREVIOUS_EXAM_GPA" VARCHAR2(6),
	"PREVIOUS_EXAM_YEAR" VARCHAR2(4),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "AR_ST_PREVIOU_EXA_RESULT_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION DEFERRED
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."ARC_STD_PREVIOUS_EXAM_RESULTS_"
            before insert on ARC_STD_PREVIOUS_EXAM_RESULTS
            for each row
                begin
            if :new.ID is null then
                select arc_std_previous_exam_results_.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."ARC_STD_PREVIOUS_EXAM_RESULTS_" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."AR_ST_PREVIOU_EXA_RESULT_ID_PK" ON "CRVSPROD_NEW"."ARC_STD_PREVIOUS_EXAM_RESULTS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."ARC_STD_REGISTRATION_INFO"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"EIIN" VARCHAR2(6) NOT NULL ENABLE,
	"REGISTRATION_YEAR" VARCHAR2(4),
	"STD_CRVS_ID" VARCHAR2(15),
	"UID" VARCHAR2(10),
	"FULLNAME_BANGLA" VARCHAR2(150),
	"FULLNAME_ENGLISH" VARCHAR2(150),
	"BIN_BRN" VARCHAR2(17),
	"DOB" DATE,
	"GENDER" NUMBER(10,0),
	"NATIONALITY" NUMBER(3,0),
	"OTHER_NATIONALITY" VARCHAR2(20),
	"RELIGION" VARCHAR2(2),
	"REGISTER_CLASS" NUMBER(3,0),
	"ACADEMIC_ROLL_NO" VARCHAR2(10),
	"MARITAL_STATUS" VARCHAR2(1),
	"IS_DISABILITY" VARCHAR2(2),
	"DISABILITYTYPE" VARCHAR2(2),
	"BLOOD_GROUP" VARCHAR2(1),
	"SMALL_ETHNIC_GROUP" VARCHAR2(2),
	"SMALL_ETHNIC_GROUP_NAME" NUMBER(10,0),
	"BIRTHPLACE" VARCHAR2(15),
	"MOTHER_NID" VARCHAR2(17),
	"MOTHER_UBRN" VARCHAR2(17),
	"MOTHER_DATE_OF_BIRTH" DATE,
	"MOTHERNAME_BANGLA" VARCHAR2(150),
	"MOTHERNAME_ENGLISH" VARCHAR2(150),
	"MOTHER_MOBILE_NO" VARCHAR2(11),
	"MOTHER_PROFESSION" VARCHAR2(30),
	"MOTHER_DEATH_DATE" VARCHAR2(4),
	"FATHER_NID" VARCHAR2(17),
	"FATHER_UBRN" VARCHAR2(17),
	"FATHER_DATE_OF_BIRTH" DATE,
	"FATHERNAME_BANGLA" VARCHAR2(150),
	"FATHERNAME_ENGLISH" VARCHAR2(150),
	"FATHER_MOBILE_NO" VARCHAR2(11),
	"FATHER_PROFESSION" VARCHAR2(30),
	"FATHER_DEATH_DATE" VARCHAR2(4),
	"PRESENTDIVISIONID" VARCHAR2(35),
	"PRESENTDISTRICTID" VARCHAR2(35),
	"PRESENTTHANAID" VARCHAR2(35),
	"PRESENT_CITY_CORPORATION" VARCHAR2(100),
	"PRESENTUNIONID" VARCHAR2(35),
	"PRESENTAREAID" VARCHAR2(35),
	"PRESENT_ADDRESS" VARCHAR2(150),
	"PRESENTHOUSEHOLDNO" VARCHAR2(100),
	"PRESENT_POST_OFFICE" VARCHAR2(100),
	"PRESENTPOSTCODE" VARCHAR2(50),
	"PERMANENETDIVISIONID" VARCHAR2(35),
	"PERMANENTDISTTICTID" VARCHAR2(35),
	"PERMANENTTHANAID" VARCHAR2(35),
	"PERMANENT_CITY_CORPORATION" VARCHAR2(100),
	"PERMANENTUNIONID" VARCHAR2(35),
	"PERMANENTAREAID" VARCHAR2(35),
	"PERMANENT_ADDRESS" VARCHAR2(35),
	"PERMANENTHOUSEHOLDNO" VARCHAR2(150),
	"PERMANENT_POST_OFFICE" VARCHAR2(100),
	"PERMANENTPOSTCODE" VARCHAR2(30),
	"GUARDIAN_NID" VARCHAR2(17),
	"GUARDIAN_NAME" VARCHAR2(150),
	"GUARDIAN_PROFESSION" VARCHAR2(30),
	"RELATIONSHIP_WITH_GUARDIAN" NUMBER(10,0),
	"GUARDIAN_MOBILE" VARCHAR2(11),
	"GUARDIAN_EMAIL" VARCHAR2(30),
	"CERTIFICATION_STATUS" NUMBER(3,0),
	"GUARDIAN_SIG_DAY" VARCHAR2(100) NOT NULL ENABLE,
	"ID_CARD_GENERATE_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"IMAGE_FOLDER_PATH" VARCHAR2(255) NOT NULL ENABLE,
	"STD_PROFILE_IMAGE" VARCHAR2(100),
	"STD_BIRTH_REG_NO_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"MOTHER_NID_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"FATHER_NID_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "AR_ST_REGISTRATIO_INF_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION DEFERRED
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."ARC_STD_REGISTRATION_INFO_ID_T"
            before insert on ARC_STD_REGISTRATION_INFO
            for each row
                begin
            if :new.ID is null then
                select arc_std_registration_info_id_s.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."ARC_STD_REGISTRATION_INFO_ID_T" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."AR_ST_REGISTRATIO_INF_ID_PK" ON "CRVSPROD_NEW"."ARC_STD_REGISTRATION_INFO" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA" ;

COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.NATIONALITY IS '1=বাংলাদেশি,2=অন্যান্য';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.RELIGION IS '1=ইসলাম,2=হিন্দু,3=বৌদ্ধ,4=খ্রিষ্টান,5=Not a believer,6=Refuse to disclose,7=অন্যান্য';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.REGISTER_CLASS IS '6=৬ষ্ঠ,7=৭ম,8=৮ম,9=৯ম,5=10ম ,11=১১শ,12=১২শ';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.MARITAL_STATUS IS '1=অবিবাহিত ,2=বিবাহিত ,3=বিধবা / বিপত্নীক,4=স্বামী-স্ত্রী পৃথক বসবাস ,5=তালাকপ্রাপ্ত / বিবাহ বিচ্ছেদ';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.IS_DISABILITY IS '1=yes,0=no';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.DISABILITYTYPE IS '1= বাক প্রতিবন্ধী ,2= দৃষ্টি প্রতিবন্ধী ,3= শ্রবন প্রতিবন্ধী,4= শারীরিক প্রতিবন্ধী,5= মানসিক প্রতিবন্ধী,6= সমস্যা নেই ';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.BLOOD_GROUP IS '1=A+ ,2=A-,3=B+,4=B-,5=AB+,6=AB-,7=O+ ,8=O-';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.SMALL_ETHNIC_GROUP IS '1=yes,0=no';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.SMALL_ETHNIC_GROUP_NAME IS '1=সাওতাল,2=চাকমা,3=গারো,4=হাজং,5=চাক,6=কুকি,7=খেয়া,8=বম,9=মারমা,10=ত্রিপুরা,11=খাসিয়া,12=মনিপুরী,13=অন্যান্য,';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.RELATIONSHIP_WITH_GUARDIAN IS '1=দাদা ,2=দাদি,3=ভাই ,4=বোন ,5= চাচা ,6=নানা ,7=নানী ,8=মামা,9=ফুফু ,10=খালা ,11=চাচাতো ভাই,12=মামাতো ভাই,13=চাচাতো বোন,14=মামাতো বোন,15=আইনগত';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.CERTIFICATION_STATUS IS 'yes=2,no=1';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.ID_CARD_GENERATE_STATUS IS '0=not generate id card,1=generated id card';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.STD_BIRTH_REG_NO_STATUS IS '0=pending,1=Verified,2=invalid';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.MOTHER_NID_STATUS IS '0=pending,1=Verified,2=invalid';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.FATHER_NID_STATUS IS '0=pending,1=Verified,2=invalid';
COMMENT ON COLUMN CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO.STATUS IS '0=pending,1=Verified,2=invalid';

CREATE TABLE "CRVSPROD_NEW"."ARC_STD_SUBJECT_WISE_RESULTS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"SCAI_ID" NUMBER(19,0) NOT NULL ENABLE,
	"CLASS_ID" NUMBER(10,0) NOT NULL ENABLE,
	"TOTAL_NUMBER" VARCHAR2(3),
	"GRADE_POINTS" VARCHAR2(5),
	"EXAM_YEAR" VARCHAR2(4),
	"SUBJECT_ID" NUMBER(10,0),
	"OPTIONAL_SUBJECT_STATUS" NUMBER(3,0),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "AR_ST_SUBJEC_WIS_RESULT_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION DEFERRED
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."ARC_STD_SUBJECT_WISE_RESULTS_I"
            before insert on ARC_STD_SUBJECT_WISE_RESULTS
            for each row
                begin
            if :new.ID is null then
                select arc_std_subject_wise_results_i.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."ARC_STD_SUBJECT_WISE_RESULTS_I" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."AR_ST_SUBJEC_WIS_RESULT_ID_PK" ON "CRVSPROD_NEW"."ARC_STD_SUBJECT_WISE_RESULTS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."BOARDS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"BOARD_NAME" VARCHAR2(255) NOT NULL ENABLE,
	"BOARD_CODE" VARCHAR2(255),
	"BOARD_NAME_BN" VARCHAR2(255),
	"STATUS" CHAR(1) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "BOARDS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."BOARDS_ID_TRG"
            before insert on BOARDS
            for each row
                begin
            if :new.ID is null then
                select boards_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."BOARDS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."BOARDS_ID_PK" ON "CRVSPROD_NEW"."BOARDS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

COMMENT ON COLUMN CRVSPROD_NEW.BOARDS.STATUS IS '0 => inactive, 1 => active';

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."BY_GEO_AND_DATE_WISE_TOTAL_FMG_INFO" ("ENTRY_DATE", "DIVISION_ID", "DIVISION_NAME", "DISTRICT_ID", "DISTRICT_NAME", "THANA_ID", "THANA_NAME", "TOTAL_SUBMITTED", "FATHER_MOTHER_NID", "FATHER_NID", "MOTHER_NID", "GUARDIAN_NID", "FATHER_MOTHER_BRN", "FATHER_BRN", "MOTHER_BRN") AS
  SELECT
                main_table.ENTRY_DATE,
                main_table.DIVISION_ID,
                main_table.DIVISION_NAME,
                main_table.DISTRICT_ID,
                main_table.DISTRICT_NAME,
                main_table.THANA_ID,
                main_table.THANA_NAME,
                (
                    SELECT
                        COUNT(DDTEE.EIIN)
                    FROM by_geo_wise_students DDTEE
                    WHERE DDTEE.ENTRY_DATE = main_table.ENTRY_DATE
                    AND DDTEE.DIVISION_ID = main_table.DIVISION_ID
                    AND DDTEE.DISTRICT_ID = main_table.DISTRICT_ID
                    AND DDTEE.THANA_ID = main_table.THANA_ID
                ) TOTAL_SUBMITTED,
                (
                    SELECT
                        COUNT(DDTEE.EIIN)
                    FROM by_geo_wise_students DDTEE
                    WHERE DDTEE.FATHER_NID IS NOT NULL
                    AND DDTEE.MOTHER_NID IS NOT NULL
                    AND DDTEE.ENTRY_DATE = main_table.ENTRY_DATE
                    AND DDTEE.DIVISION_ID = main_table.DIVISION_ID
                    AND DDTEE.DISTRICT_ID = main_table.DISTRICT_ID
                    AND DDTEE.THANA_ID = main_table.THANA_ID
                ) FATHER_MOTHER_NID,
                (
                    SELECT
                        COUNT(DDTEE.EIIN)
                    FROM by_geo_wise_students DDTEE
                    WHERE DDTEE.FATHER_NID IS NOT NULL
                    AND DDTEE.ENTRY_DATE = main_table.ENTRY_DATE
                    AND DDTEE.DIVISION_ID = main_table.DIVISION_ID
                    AND DDTEE.DISTRICT_ID = main_table.DISTRICT_ID
                    AND DDTEE.THANA_ID = main_table.THANA_ID
                ) FATHER_NID,
                (
                    SELECT
                        COUNT(DDTEE.EIIN)
                    FROM by_geo_wise_students DDTEE
                    WHERE DDTEE.MOTHER_NID IS NOT NULL
                    AND DDTEE.ENTRY_DATE = main_table.ENTRY_DATE
                    AND DDTEE.DIVISION_ID = main_table.DIVISION_ID
                    AND DDTEE.DISTRICT_ID = main_table.DISTRICT_ID
                    AND DDTEE.THANA_ID = main_table.THANA_ID
                ) MOTHER_NID,
                (
                    SELECT
                        COUNT(DDTEE.EIIN)
                    FROM by_geo_wise_students DDTEE
                    WHERE DDTEE.GUARDIAN_NID IS NOT NULL
                    AND DDTEE.ENTRY_DATE = main_table.ENTRY_DATE
                    AND DDTEE.DIVISION_ID = main_table.DIVISION_ID
                    AND DDTEE.DISTRICT_ID = main_table.DISTRICT_ID
                    AND DDTEE.THANA_ID = main_table.THANA_ID
                ) GUARDIAN_NID,

                (
                    SELECT
                        COUNT(DDTEE.EIIN)
                    FROM by_geo_wise_students DDTEE
                    WHERE DDTEE.FATHER_UBRN IS NOT NULL
                    AND DDTEE.MOTHER_UBRN IS NOT NULL
                    AND DDTEE.ENTRY_DATE = main_table.ENTRY_DATE
                    AND DDTEE.DIVISION_ID = main_table.DIVISION_ID
                    AND DDTEE.DISTRICT_ID = main_table.DISTRICT_ID
                    AND DDTEE.THANA_ID = main_table.THANA_ID
                ) FATHER_MOTHER_BRN,
                (
                    SELECT
                        COUNT(DDTEE.EIIN)
                    FROM by_geo_wise_students DDTEE
                    WHERE DDTEE.FATHER_UBRN IS NOT NULL
                    AND DDTEE.ENTRY_DATE = main_table.ENTRY_DATE
                    AND DDTEE.DIVISION_ID = main_table.DIVISION_ID
                    AND DDTEE.DISTRICT_ID = main_table.DISTRICT_ID
                    AND DDTEE.THANA_ID = main_table.THANA_ID
                ) FATHER_BRN,
                (
                    SELECT
                        COUNT(DDTEE.EIIN)
                    FROM by_geo_wise_students DDTEE
                    WHERE DDTEE.MOTHER_UBRN IS NOT NULL
                    AND DDTEE.ENTRY_DATE = main_table.ENTRY_DATE
                    AND DDTEE.DIVISION_ID = main_table.DIVISION_ID
                    AND DDTEE.DISTRICT_ID = main_table.DISTRICT_ID
                    AND DDTEE.THANA_ID = main_table.THANA_ID
                ) MOTHER_BRN

            FROM by_geo_wise_students main_table
            GROUP BY main_table.DIVISION_ID,
            main_table.DIVISION_NAME,
            main_table.DISTRICT_ID,
            main_table.DISTRICT_NAME,
            main_table.THANA_ID,
            main_table.THANA_NAME,
            main_table.ENTRY_DATE;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."BY_GEO_WISE_STUDENTS" ("DIVISION_ID", "DIVISION_NAME", "DISTRICT_ID", "DISTRICT_NAME", "THANA_ID", "THANA_NAME", "EIIN", "FATHER_NID", "MOTHER_NID", "GUARDIAN_NID", "FATHER_UBRN", "MOTHER_UBRN", "FM_NID_FOUND_STATUS", "TEMP_STATUS", "STATUS", "ENTRY_DATE") AS
  SELECT
		inst.DIVISION_ID,
		div.DIVISION_NAME,
		inst.DISTRICT_ID,
		dist.DISTRICT_NAME,
		inst.THANA_ID,
		tha.THANA_NAME,
		sri.EIIN,
		sri.FATHER_NID,
		sri.MOTHER_NID,
		sri.GUARDIAN_NID,
		sri.FATHER_UBRN,
		sri.MOTHER_UBRN,
		sri.FM_NID_FOUND_STATUS,
		sri.TEMP_STATUS,
		sri.STATUS,
		TO_CHAR(sri.CREATED_AT, 'YYYY-MM-DD') entry_date


FROM STD_REGISTRATION_INFO sri
JOIN INSTITUTES inst on inst.EIIN = sri.EIIN
JOIN DIVISIONS div ON div.DIVISION_ID = inst.DIVISION_ID
JOIN DISTRICTS dist ON dist.DISTRICT_ID = inst.DISTRICT_ID
JOIN THANAS tha ON tha.THANA_ID = inst.THANA_ID;
;

CREATE TABLE "CRVSPROD_NEW"."CRVS_IDS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"CRVS_ID" VARCHAR2(255) NOT NULL ENABLE,
	"BOARD_CODE" NUMBER(10,0) NOT NULL ENABLE,
	"STATUS" VARCHAR2(255) DEFAULT '0' NOT NULL ENABLE,
	"CLASS_ID" NUMBER(10,0),
	"STUDENT_ID" NUMBER(10,0),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"YEAR" VARCHAR2(10),
	 CONSTRAINT "CRVS_IDS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE,
	 CONSTRAINT "CRVS_IDS_CRVS_ID_UK" UNIQUE ("CRVS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."CRVS_IDS_ID_TRG"
            before insert on CRVS_IDS
            for each row
                begin
            if :new.ID is null then
                select crvs_ids_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."CRVS_IDS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."CRVS_IDS_ID_PK" ON "CRVSPROD_NEW"."CRVS_IDS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."CRVS_IDS_CRVS_ID_UK" ON "CRVSPROD_NEW"."CRVS_IDS" ("CRVS_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

COMMENT ON COLUMN CRVSPROD_NEW.CRVS_IDS.STATUS IS '0 => not allocate; 1 => allocated';

CREATE TABLE "CRVSPROD_NEW"."DISTRICTS"
   (	"DISTRICT_ID" VARCHAR2(6) NOT NULL ENABLE,
	"DIVISION_ID" VARCHAR2(6) NOT NULL ENABLE,
	"DISTRICT_CODE" VARCHAR2(50),
	"DISTRICT_NAME" VARCHAR2(100),
	"DISTRICT_NAME_BN" VARCHAR2(150),
	"BOARD" VARCHAR2(50),
	"BOARD_CODE" VARCHAR2(50),
	"MAD_BOARD_CODE" VARCHAR2(50),
	"ENTERED_BY" VARCHAR2(50),
	"ENTRY_TIMESTAMP" DATE,
	"LAST_UPDATED_BY" VARCHAR2(50),
	"LAST_UPDATED_TIMESTAMP" DATE,
	"DISTRICT_ID_OLD" VARCHAR2(50),
	"STATUS" NUMBER(1,0) DEFAULT '1' NOT NULL ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE INDEX "CRVSPROD_NEW"."IDX_DIS_DIVISION_DISTRICT_ID" ON "CRVSPROD_NEW"."DISTRICTS" ("DIVISION_ID", "DISTRICT_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;
;

CREATE TABLE "CRVSPROD_NEW"."DISTRICT_WISE_BOARDS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"DIVISION_ID" NUMBER(10,0) NOT NULL ENABLE,
	"DISTRICT_ID" NUMBER(10,0) NOT NULL ENABLE,
	"BOARD_CODE" NUMBER(10,0) NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "DISTRICT_WISE_BOARDS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."DISTRICT_WISE_BOARDS_ID_TRG"
            before insert on DISTRICT_WISE_BOARDS
            for each row
                begin
            if :new.ID is null then
                select district_wise_boards_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."DISTRICT_WISE_BOARDS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."DISTRICT_WISE_BOARDS_ID_PK" ON "CRVSPROD_NEW"."DISTRICT_WISE_BOARDS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."DIVISIONS"
   (	"DIVISION_ID" VARCHAR2(6) NOT NULL ENABLE,
	"DIVISION_CODE" VARCHAR2(50),
	"DIVISION_NAME" VARCHAR2(100),
	"DIVISION_NAME_BN" VARCHAR2(150),
	"ENTERED_BY" VARCHAR2(50),
	"ENTRY_TIMESTAMP" DATE,
	"LAST_UPDATED_BY" VARCHAR2(50),
	"LAST_UPDATED_TIMESTAMP" DATE,
	"DIVISION_ID_OLD" VARCHAR2(50),
	"STATUS" NUMBER(1,0) DEFAULT '1' NOT NULL ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE INDEX "CRVSPROD_NEW"."IDX_DIV_DIVISION_ID" ON "CRVSPROD_NEW"."DIVISIONS" ("DIVISION_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;
;

CREATE TABLE "CRVSPROD_NEW"."EDUCATIONS_LEVELS"
   (	"EDUCATION_LEVEL_ID" NUMBER(19,0) NOT NULL ENABLE,
	"EDUCATION_LEVEL_NAME" VARCHAR2(100),
	"EDUCATION_LEVEL_CODE" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"ENTERED_BY" VARCHAR2(20),
	"LAST_UPDATED_BY" VARCHAR2(20),
	"ENTRY_TIMESTAMP" TIMESTAMP (6) NOT NULL ENABLE,
	"LAST_UPDATED_TIMESTAMP" TIMESTAMP (6) NOT NULL ENABLE,
	"STATUS" NUMBER(1,0) DEFAULT '1' NOT NULL ENABLE,
	 CONSTRAINT "EDUCATI_LEV_EDUCAT_LE_ID_PK" PRIMARY KEY ("EDUCATION_LEVEL_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."EDUCATIONS_LEVELS_EDUCATION_LE"
            before insert on EDUCATIONS_LEVELS
            for each row
                begin
            if :new.EDUCATION_LEVEL_ID is null then
                select educations_levels_EDUCATION_LE.nextval into :new.EDUCATION_LEVEL_ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."EDUCATIONS_LEVELS_EDUCATION_LE" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."EDUCATI_LEV_EDUCAT_LE_ID_PK" ON "CRVSPROD_NEW"."EDUCATIONS_LEVELS" ("EDUCATION_LEVEL_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."EDUCATION_BOARD_RESPONSES"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"STUDENT_REGISTRATION_ID" NUMBER(10,0),
	"NAME" VARCHAR2(255),
	"DOB" VARCHAR2(255),
	"REGNO" VARCHAR2(255),
	"EXAM_NAME" VARCHAR2(255),
	"BOARD_CODE" VARCHAR2(255),
	"PASS_YEAR" VARCHAR2(255),
	"FATHER" VARCHAR2(255),
	"MOTHER" VARCHAR2(255),
	"STATUS" VARCHAR2(255),
	"REQUEST_RESPONSE" CLOB NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"REQ_EIIN" VARCHAR2(10),
	 CONSTRAINT "EDUCATIO_BOAR_RESPONSE_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
 LOB ("REQUEST_RESPONSE") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."EDUCATION_BOARD_RESPONSES_ID_T"
            before insert on EDUCATION_BOARD_RESPONSES
            for each row
                begin
            if :new.ID is null then
                select education_board_responses_id_s.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."EDUCATION_BOARD_RESPONSES_ID_T" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."EDUCATIO_BOAR_RESPONSE_ID_PK" ON "CRVSPROD_NEW"."EDUCATION_BOARD_RESPONSES" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000143394C00012$$" ON "CRVSPROD_NEW"."EDUCATION_BOARD_RESPONSES" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
;

CREATE TABLE "CRVSPROD_NEW"."EDUCATION_DEGREES"
   (	"EDUCATION_DEGREE_ID" NUMBER(19,0) NOT NULL ENABLE,
	"EDUCATION_DEGREE_NAME" VARCHAR2(200),
	"EDUCATION_DEGREE_CODE" VARCHAR2(20),
	"ENTERED_BY" VARCHAR2(20),
	"LAST_UPDATED_BY" VARCHAR2(20),
	"ENTRY_TIMESTAMP" TIMESTAMP (6),
	"LAST_UPDATED_TIMESTAMP" TIMESTAMP (6),
	 CONSTRAINT "EDUCAT_DEGR_EDUCAT_DEG_ID_PK" PRIMARY KEY ("EDUCATION_DEGREE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."EDUCATION_DEGREES_EDUCATION_DE"
            before insert on EDUCATION_DEGREES
            for each row
                begin
            if :new.EDUCATION_DEGREE_ID is null then
                select education_degrees_EDUCATION_DE.nextval into :new.EDUCATION_DEGREE_ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."EDUCATION_DEGREES_EDUCATION_DE" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."EDUCAT_DEGR_EDUCAT_DEG_ID_PK" ON "CRVSPROD_NEW"."EDUCATION_DEGREES" ("EDUCATION_DEGREE_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."ENTERED_STUDENT" ("EIIN", "INSTITUTE_NAME_NEW", "STUDENT21") AS
  SELECT e.eiin,e.institute_name_new,
                 cOUNT (a.BIN_BRN) student21
        FROM STD_REGISTRATION_INFO a,
             divisions b,
             districts c,
             thanas d,
             institutes e
       WHERE     A.EIIN = E.EIIN(+)
             AND e.division_id = B.DIVISION_ID
             AND E.DISTRICT_ID = C.DISTRICT_ID
             AND E.THANA_ID = D.THANA_ID
    GROUP BY  e.eiin,e.institute_name_new;
;

CREATE TABLE "CRVSPROD_NEW"."FAILED_JOBS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"CONNECTION" CLOB NOT NULL ENABLE,
	"QUEUE" CLOB NOT NULL ENABLE,
	"PAYLOAD" CLOB NOT NULL ENABLE,
	"EXCEPTION" CLOB NOT NULL ENABLE,
	"FAILED_AT" TIMESTAMP (6) NOT NULL ENABLE,
	 CONSTRAINT "FAILED_JOBS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
 LOB ("CONNECTION") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT))
 LOB ("QUEUE") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT))
 LOB ("PAYLOAD") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT))
 LOB ("EXCEPTION") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."FAILED_JOBS_ID_TRG"
            before insert on FAILED_JOBS
            for each row
                begin
            if :new.ID is null then
                select failed_jobs_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."FAILED_JOBS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."FAILED_JOBS_ID_PK" ON "CRVSPROD_NEW"."FAILED_JOBS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000203353C00005$$" ON "CRVSPROD_NEW"."FAILED_JOBS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000203353C00004$$" ON "CRVSPROD_NEW"."FAILED_JOBS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000203353C00003$$" ON "CRVSPROD_NEW"."FAILED_JOBS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000203353C00002$$" ON "CRVSPROD_NEW"."FAILED_JOBS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
;

CREATE TABLE "CRVSPROD_NEW"."GEOGRAPHICAL_AREA"
   (	"GEOGRAPHICAL_STATUS" NUMBER(19,0) NOT NULL ENABLE,
	"DETAILS" VARCHAR2(100),
	"DETAILS_BN" VARCHAR2(150),
	"UNIV_AREA" CHAR(255),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "GEOGRAPHI_AR_GEOGRAPHI_STA_PK" PRIMARY KEY ("GEOGRAPHICAL_STATUS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION DEFERRED
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."GEOGRAPHICAL_AREA_GEOGRAPHICAL"
            before insert on GEOGRAPHICAL_AREA
            for each row
                begin
            if :new.GEOGRAPHICAL_STATUS is null then
                select geographical_area_GEOGRAPHICAL.nextval into :new.GEOGRAPHICAL_STATUS from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."GEOGRAPHICAL_AREA_GEOGRAPHICAL" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."GEOGRAPHI_AR_GEOGRAPHI_STA_PK" ON "CRVSPROD_NEW"."GEOGRAPHICAL_AREA" ("GEOGRAPHICAL_STATUS")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."INSTITUTES"
   (	"INSTITUTE_ID" NUMBER(19,0) NOT NULL ENABLE,
	"EIIN" VARCHAR2(6) NOT NULL ENABLE,
	"INSTITUTE_NAME" VARCHAR2(255),
	"INSTITUTE_NAME_NEW" VARCHAR2(255),
	"INSTITUTE_NAME_BANGLA" VARCHAR2(400),
	"LOCATION" VARCHAR2(255),
	"E_MAIL" VARCHAR2(150),
	"PASSWORD" VARCHAR2(255) NOT NULL ENABLE,
	"INSTITUTE_TYPE_ID" VARCHAR2(3),
	"EDUCATION_LEVEL_ID" VARCHAR2(3),
	"USER_ROLES" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"STD_ID_CARD_GENERATE_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"INS_ID_CARD_GENERATE_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"DIVISION_ID" VARCHAR2(6),
	"DISTRICT_ID" VARCHAR2(6),
	"THANA_ID" VARCHAR2(10),
	"UNION_ID" VARCHAR2(30),
	"MAUZA_ID" VARCHAR2(12),
	"ESTABLISH_DATE" VARCHAR2(50),
	"INSTITUTE_CODE" VARCHAR2(15),
	"MANAGEMENT" VARCHAR2(50),
	"FOR_WHOM" VARCHAR2(50),
	"STAT2000" VARCHAR2(50),
	"SHIFT_NO" VARCHAR2(50),
	"RECOGNITION" VARCHAR2(50),
	"MPO_STATUS" VARCHAR2(50),
	"MPO_CODE_SCHOOL" VARCHAR2(30),
	"GEOGRAPHICAL_STATUS" VARCHAR2(3),
	"GEO_CODE" VARCHAR2(15),
	"POST_OFFICE" VARCHAR2(50),
	"SCHOOL_CODE" VARCHAR2(10),
	"DAG_NO" VARCHAR2(10),
	"TECHNICAL_BRANCH_MPO_STATUS" VARCHAR2(3),
	"LAST_UPDATED_TIMESTAMP" VARCHAR2(50),
	"YEAR" VARCHAR2(50),
	"SCRIPT_STATUS" VARCHAR2(10),
	"STP_CODE" VARCHAR2(50),
	"CASE_YN" VARCHAR2(10),
	"CASE_MONTH" VARCHAR2(15),
	"NEAREST_ADMIN_UNIT_DISTANT" VARCHAR2(10),
	"NEAREST_ADMIN_UNIT" VARCHAR2(10),
	"COMMERCE_GROUP" VARCHAR2(2),
	"SCIENCE_GROUP" VARCHAR2(2),
	"ARTS_GROUP" VARCHAR2(2),
	"HIGHREC" VARCHAR2(2),
	"MOBPHONE" VARCHAR2(50),
	"UNI_CODE_SCHOOL" VARCHAR2(50),
	"BOARD_CODE" VARCHAR2(10),
	"POLICE_STATION_DISTANCE_KM" VARCHAR2(10),
	"TELEPHONE" VARCHAR2(50),
	"AREA_STATUS1" VARCHAR2(50),
	"CONSTITUENCY" VARCHAR2(50),
	"ENGLISH_VER_YN" VARCHAR2(2),
	"VERIFIED_STATUS" VARCHAR2(40),
	"FAX" VARCHAR2(50),
	"STAT" VARCHAR2(50),
	"EDUCATION_LEVEL_ID_LOWEST" VARCHAR2(50),
	"NATIONALIZATION_DATE" VARCHAR2(50),
	"COLLEGE_CODE" VARCHAR2(10),
	"WEB_SITE" VARCHAR2(255),
	"CUTDATE" VARCHAR2(100),
	"UPLOAD_HABU" VARCHAR2(100),
	"NOOF_UPDATE" VARCHAR2(100),
	"UNIV_EDUCATION_LEVEL_ID" VARCHAR2(100),
	"MEMBER_FEMALE" VARCHAR2(100),
	"MEMBER_TOTAL" VARCHAR2(50),
	"COMMITTEE_TYPE" VARCHAR2(50),
	"SAMISTER_NUM" VARCHAR2(50),
	"UNIV_EDU_TYPE" VARCHAR2(50),
	"UNIV_DEPT_NO" VARCHAR2(50),
	"UNIV_ANUSHAD_NO" VARCHAR2(50),
	"UNIV_INST_NO" VARCHAR2(50),
	"UNIV_BRANCH_NO" VARCHAR2(50),
	"SAMISTER_MONTH" VARCHAR2(50),
	"SAMISTER_DAY" VARCHAR2(50),
	"PERMITTED_DATE" VARCHAR2(50),
	"FORGINE_UNIV_ATTATH_YN" VARCHAR2(50),
	"POST_CODE" VARCHAR2(100),
	"UNIVERSITY_CODE" VARCHAR2(255),
	"TECHNICAL_BRANCH_TYPE" VARCHAR2(3),
	"MPO_CODE_COLLEGE" VARCHAR2(20),
	"MPO_CODE_TECHNICAL" VARCHAR2(20),
	"MPO_CODE_MADRASAH" VARCHAR2(20),
	"STARTING_CLASS" VARCHAR2(5),
	"HIFJUL_GROUP" VARCHAR2(2),
	"MOJJABID_GROUP" VARCHAR2(2),
	"ARTS_COLLEGE" VARCHAR2(2),
	"SCIENCE_COLLEGE" VARCHAR2(2),
	"COMMERCE_COLLEGE" VARCHAR2(2),
	"ESTABLISH_DATE_VOC" VARCHAR2(50),
	"ESTABLISH_DATE_BM" VARCHAR2(50),
	"TECHNICAL_BRANCH_TYPE_BM" VARCHAR2(2),
	"STOP" VARCHAR2(50),
	"SOCIAL_SCIENCE_GROUP" VARCHAR2(2),
	"MPO_YN" VARCHAR2(1),
	"ARTS_GROUP_COL" VARCHAR2(50),
	"SCIENCE_GROUP_COL" VARCHAR2(50),
	"COMMERCE_GROUP_COL" VARCHAR2(50),
	"RECOGNITION_COL" VARCHAR2(50),
	"UNI_CODE_COLLEGE" VARCHAR2(50),
	"UNI_CODE_MADRASAH" VARCHAR2(50),
	"MPO_CODE_BM" VARCHAR2(15),
	"POLICE_STATION_DISTANCE_MTR" VARCHAR2(50),
	"NATIONAL_UNIVERSITY_CODE" VARCHAR2(50),
	"TECHNICAL_CODE" VARCHAR2(50),
	"ESTABLISH_DATE_HSCVOC" VARCHAR2(50),
	"ESTABLISH_DATE_COLLEGE" VARCHAR2(50),
	"ESTABLISH_DATE_DIPLOMA" VARCHAR2(50),
	"TECHNICAL_BRANCH_TYPE_HSCVOC" VARCHAR2(50),
	"TECHNICAL_BRANCH_BOTH" VARCHAR2(50),
	"CONSTITUTE_NO" VARCHAR2(50),
	"TEACH_TIME" VARCHAR2(50),
	"ESTABLISH_DATE_AGRI_DIPLOMA" VARCHAR2(50),
	"CASE_SUBJECT" VARCHAR2(50),
	"AREA_STATUS" VARCHAR2(50),
	"TEIIN" VARCHAR2(50),
	"GOVT_PRIMARY_STATUS" VARCHAR2(50),
	"THANA_NAME_NEW" VARCHAR2(150),
	"MAUZA_NAME_NEW" VARCHAR2(150),
	"UNION_NAME_NEW" VARCHAR2(150),
	"VERIFIED_BY" VARCHAR2(50),
	"FINAL_UPDATED_BY" VARCHAR2(50),
	"ENTRY_TIMESTAMP" VARCHAR2(50),
	"TOTAL_STUDENTS" VARCHAR2(20) DEFAULT '0',
	"UID_GENERATE_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	 CONSTRAINT "INSTITUTES_INSTITUTE_ID_PK" PRIMARY KEY ("INSTITUTE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."INSTITUTES_INSTITUTE_ID_TRG"
            before insert on "INSTITUTES"
            for each row
                begin
            if :new.INSTITUTE_ID is null then
                select institutes_INSTITUTE_ID_seq.nextval into :new.INSTITUTE_ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."INSTITUTES_INSTITUTE_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."INSTITUTES_INSTITUTE_ID_PK" ON "CRVSPROD_NEW"."INSTITUTES" ("INSTITUTE_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE INDEX "CRVSPROD_NEW"."IDX_INS_EIIN" ON "CRVSPROD_NEW"."INSTITUTES" ("EIIN")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;
  CREATE INDEX "CRVSPROD_NEW"."IDX_INS_INSTITUTE_TYPE_ID" ON "CRVSPROD_NEW"."INSTITUTES" ("INSTITUTE_TYPE_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;
  CREATE INDEX "CRVSPROD_NEW"."IDX_INS_DIVISION_ID" ON "CRVSPROD_NEW"."INSTITUTES" ("DIVISION_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;
  CREATE INDEX "CRVSPROD_NEW"."IDX_INS_DISTRICT_ID" ON "CRVSPROD_NEW"."INSTITUTES" ("DISTRICT_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;
  CREATE INDEX "CRVSPROD_NEW"."IDX_INS_THANA_ID" ON "CRVSPROD_NEW"."INSTITUTES" ("THANA_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;

COMMENT ON COLUMN CRVSPROD_NEW.INSTITUTES.USER_ROLES IS '1=institute,2=teacher';
COMMENT ON COLUMN CRVSPROD_NEW.INSTITUTES.STD_ID_CARD_GENERATE_STATUS IS '0=not generate, 1=on progress, 2= successfully generate, 3 = error';
COMMENT ON COLUMN CRVSPROD_NEW.INSTITUTES.INS_ID_CARD_GENERATE_STATUS IS '1=ID CARD GENERATE,0=ID CARD Not GENERATE';
COMMENT ON COLUMN CRVSPROD_NEW.INSTITUTES.UID_GENERATE_STATUS IS '1=complete,0=Pending, 2=on progress';

CREATE TABLE "CRVSPROD_NEW"."INSTITUTES_TYPES"
   (	"INSTITUTE_TYPE_ID" NUMBER(19,0) NOT NULL ENABLE,
	"INSTITUTE_TYPE_NAME" VARCHAR2(200),
	"ENTERED_BY" VARCHAR2(20),
	"LAST_UPDATED_BY" VARCHAR2(20),
	"ENTRY_TIMESTAMP" TIMESTAMP (6),
	"LAST_UPDATED_TIMESTAMP" TIMESTAMP (6),
	 CONSTRAINT "INSTITUT_TYP_INSTITU_TY_ID_PK" PRIMARY KEY ("INSTITUTE_TYPE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."INSTITUTES_TYPES_INSTITUTE_TYP"
            before insert on INSTITUTES_TYPES
            for each row
                begin
            if :new.INSTITUTE_TYPE_ID is null then
                select institutes_types_INSTITUTE_TYP.nextval into :new.INSTITUTE_TYPE_ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."INSTITUTES_TYPES_INSTITUTE_TYP" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."INSTITUT_TYP_INSTITU_TY_ID_PK" ON "CRVSPROD_NEW"."INSTITUTES_TYPES" ("INSTITUTE_TYPE_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."INSTITUTES_USER"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"TEACHER_ID" VARCHAR2(11),
	"EIIN" VARCHAR2(255) NOT NULL ENABLE,
	"NAME" VARCHAR2(150) NOT NULL ENABLE,
	"EMAIL" VARCHAR2(30) NOT NULL ENABLE,
	"PASSWORD" VARCHAR2(255) NOT NULL ENABLE,
	"PHONE" VARCHAR2(11) NOT NULL ENABLE,
	"USER_ROLES" NUMBER(3,0) NOT NULL ENABLE,
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"NID" VARCHAR2(20),
	 CONSTRAINT "INSTITUTES_USER_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE,
	 CONSTRAINT "INSTITUTES_USER_TEACHER_ID_UK" UNIQUE ("TEACHER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE,
	 CONSTRAINT "INSTITUTES_USER_EMAIL_UK" UNIQUE ("EMAIL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."INSTITUTES_USER_ID_TRG"
            before insert on INSTITUTES_USER
            for each row
                begin
            if :new.ID is null then
                select institutes_user_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."INSTITUTES_USER_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."INSTITUTES_USER_ID_PK" ON "CRVSPROD_NEW"."INSTITUTES_USER" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."INSTITUTES_USER_TEACHER_ID_UK" ON "CRVSPROD_NEW"."INSTITUTES_USER" ("TEACHER_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."INSTITUTES_USER_EMAIL_UK" ON "CRVSPROD_NEW"."INSTITUTES_USER" ("EMAIL")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

COMMENT ON COLUMN CRVSPROD_NEW.INSTITUTES_USER.USER_ROLES IS '1=institute,2=teacher';

CREATE TABLE "CRVSPROD_NEW"."INSTITUTE_TEACHERS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255) NOT NULL ENABLE,
	"PHONE" VARCHAR2(15) NOT NULL ENABLE,
	"NID" VARCHAR2(20) NOT NULL ENABLE,
	"STATUS" CHAR(1) DEFAULT '1' NOT NULL ENABLE,
	"TEACHER_TYPE" VARCHAR2(15) DEFAULT 'TEACHER' NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"EIIN" NUMBER(6,0),
	 CONSTRAINT "INSTITUTE_TEACHERS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."INSTITUTE_TEACHERS_ID_TRG"
    BEFORE INSERT ON INSTITUTE_TEACHERS
    FOR EACH ROW
BEGIN
    SELECT INSTITUTE_TEACHERS_ID_SEQ.NEXTVAL
    INTO   :new.ID
    FROM   dual;
END;
/
ALTER TRIGGER "CRVSPROD_NEW"."INSTITUTE_TEACHERS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."INSTITUTE_TEACHERS_ID_PK" ON "CRVSPROD_NEW"."INSTITUTE_TEACHERS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

COMMENT ON COLUMN CRVSPROD_NEW.INSTITUTE_TEACHERS.TEACHER_TYPE IS 'Teacher & Headmaster';

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."INSTITUTE_TEACHERS_SHYLET" ("ID", "NAME", "PHONE", "NID", "STATUS", "TEACHER_TYPE", "CREATED_AT", "UPDATED_AT", "EIIN") AS
  SELECT
	SAD."ID",SAD."NAME",SAD."PHONE",SAD."NID",SAD."STATUS",SAD."TEACHER_TYPE",SAD."CREATED_AT",SAD."UPDATED_AT",SAD."EIIN"
FROM
	INSTITUTE_TEACHERS SAD,
	INSTITUTES
WHERE
	SAD.EIIN = INSTITUTES.EIIN
	AND INSTITUTES.DIVISION_ID = 60;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."INSTITUTE_USERS" ("EIIN", "USERNAME", "PASSWORD", "ID", "USER_ROLES", "NAME") AS
  (SELECT INSTITUTES_USER.EIIN as EIIN , INSTITUTES_USER.EMAIL as USERNAME, INSTITUTES_USER.PASSWORD,INSTITUTES_USER.ID AS ID,INSTITUTES_USER.USER_ROLES, INSTITUTES_USER.NAME AS NAME
    FROM INSTITUTES_USER)
    union all
( SELECT INSTITUTES.EIIN, INSTITUTES.EIIN AS USERNAME, INSTITUTES.PASSWORD, INSTITUTES.INSTITUTE_ID AS ID, INSTITUTES.USER_ROLES, INSTITUTES.INSTITUTE_NAME_NEW AS NAME FROM INSTITUTES );
;

CREATE TABLE "CRVSPROD_NEW"."JOBS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"QUEUE" VARCHAR2(255) NOT NULL ENABLE,
	"PAYLOAD" CLOB NOT NULL ENABLE,
	"ATTEMPTS" NUMBER(3,0) NOT NULL ENABLE,
	"RESERVED_AT" NUMBER(10,0),
	"AVAILABLE_AT" NUMBER(10,0) NOT NULL ENABLE,
	"CREATED_AT" NUMBER(10,0) NOT NULL ENABLE,
	 CONSTRAINT "JOBS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
 LOB ("PAYLOAD") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."JOBS_ID_TRG"
            before insert on JOBS
            for each row
                begin
            if :new.ID is null then
                select jobs_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."JOBS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."JOBS_ID_PK" ON "CRVSPROD_NEW"."JOBS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000152672C00003$$" ON "CRVSPROD_NEW"."JOBS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE INDEX "CRVSPROD_NEW"."JOBS_QUEUE_INDEX" ON "CRVSPROD_NEW"."JOBS" ("QUEUE")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."LOOKUP_AREA_STATUS1"
   (	"AREA_STATUS1" NUMBER(19,0) NOT NULL ENABLE,
	"DETAILS" VARCHAR2(255),
	"DETAILS_BN" VARCHAR2(255),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "LOOKU_ARE_STATUS_ARE_STATUS_PK" PRIMARY KEY ("AREA_STATUS1")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION DEFERRED
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."LOOKUP_AREA_STATUS1_AREA_STATU"
            before insert on LOOKUP_AREA_STATUS1
            for each row
                begin
            if :new.AREA_STATUS1 is null then
                select lookup_area_status1_AREA_STATU.nextval into :new.AREA_STATUS1 from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."LOOKUP_AREA_STATUS1_AREA_STATU" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."LOOKU_ARE_STATUS_ARE_STATUS_PK" ON "CRVSPROD_NEW"."LOOKUP_AREA_STATUS1" ("AREA_STATUS1")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."MANAGEMENTS"
   (	"MANAGEMENT" NUMBER(19,0) NOT NULL ENABLE,
	"DESCRIPTION" VARCHAR2(100),
	"DESCRIPTION_BN" VARCHAR2(100),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "MANAGEMENTS_MANAGEMENT_PK" PRIMARY KEY ("MANAGEMENT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."MANAGEMENTS_MANAGEMENT_TRG"
            before insert on MANAGEMENTS
            for each row
                begin
            if :new.MANAGEMENT is null then
                select managements_MANAGEMENT_seq.nextval into :new.MANAGEMENT from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."MANAGEMENTS_MANAGEMENT_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."MANAGEMENTS_MANAGEMENT_PK" ON "CRVSPROD_NEW"."MANAGEMENTS" ("MANAGEMENT")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."MAUZAS"
   (	"MAUZA_ID" VARCHAR2(50) NOT NULL ENABLE,
	"UNION_ID" VARCHAR2(50) NOT NULL ENABLE,
	"MAUZA_ID_NEW" VARCHAR2(50),
	"UNION_ID_NEW" VARCHAR2(50),
	"MAUZA_CODE" VARCHAR2(50),
	"MAUZA_NAME" VARCHAR2(255),
	"MAUZA_NAMEB" VARCHAR2(255),
	"ENTERED_BY" VARCHAR2(50),
	"ENTRY_TIMESTAMP" DATE,
	"LAST_UPDATED_BY" VARCHAR2(50),
	"LAST_UPDATED_TIMESTAMP" DATE,
	"STATUS" VARCHAR2(50)
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE INDEX "CRVSPROD_NEW"."IDX_MAUZA_UNION_MAUZA_ID" ON "CRVSPROD_NEW"."MAUZAS" ("UNION_ID", "MAUZA_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;
;

CREATE TABLE "CRVSPROD_NEW"."MIGRATIONS"
   (	"ID" NUMBER(10,0) NOT NULL ENABLE,
	"MIGRATION" VARCHAR2(255) NOT NULL ENABLE,
	"BATCH" NUMBER(10,0) NOT NULL ENABLE,
	 CONSTRAINT "MIGRATIONS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."MIGRATIONS_ID_TRG"
            before insert on MIGRATIONS
            for each row
                begin
            if :new.ID is null then
                select migrations_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."MIGRATIONS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."MIGRATIONS_ID_PK" ON "CRVSPROD_NEW"."MIGRATIONS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."MODEL_HAS_PERMISSIONS"
   (	"PERMISSION_ID" NUMBER(19,0) NOT NULL ENABLE,
	"MODEL_TYPE" VARCHAR2(255) NOT NULL ENABLE,
	"MODEL_ID" NUMBER(19,0) NOT NULL ENABLE,
	 CONSTRAINT "MODEL_HAS_PERMISSIONS_PERMISSION_MODEL_TYPE_PRIMARY" PRIMARY KEY ("PERMISSION_ID", "MODEL_ID", "MODEL_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION DEFERRED
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  TABLESPACE "CRVSDATA" ;

ALTER TABLE "CRVSPROD_NEW"."MODEL_HAS_PERMISSIONS" ADD CONSTRAINT "MO_HA_PERMISSI_PERMISS_ID_FK" FOREIGN KEY ("PERMISSION_ID")
	  REFERENCES "CRVSPROD_NEW"."PERMISSIONS" ("ID") ON DELETE CASCADE ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."MODEL_HAS_PERMISSIONS_PERMISSION_MODEL_TYPE_PRIMARY" ON "CRVSPROD_NEW"."MODEL_HAS_PERMISSIONS" ("PERMISSION_ID", "MODEL_ID", "MODEL_TYPE")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA" ;
  CREATE INDEX "CRVSPROD_NEW"."MODEL_HAS_PERMISSIONS_MODEL_ID_MODEL_TYPE_INDEX" ON "CRVSPROD_NEW"."MODEL_HAS_PERMISSIONS" ("MODEL_ID", "MODEL_TYPE")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."MODEL_HAS_ROLES"
   (	"ROLE_ID" NUMBER(19,0) NOT NULL ENABLE,
	"MODEL_TYPE" VARCHAR2(255) NOT NULL ENABLE,
	"MODEL_ID" NUMBER(19,0) NOT NULL ENABLE,
	 CONSTRAINT "MODEL_HAS_ROLES_ROLE_MODEL_TYPE_PRIMARY" PRIMARY KEY ("ROLE_ID", "MODEL_ID", "MODEL_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

ALTER TABLE "CRVSPROD_NEW"."MODEL_HAS_ROLES" ADD CONSTRAINT "MODEL_HAS_ROLES_ROLE_ID_FK" FOREIGN KEY ("ROLE_ID")
	  REFERENCES "CRVSPROD_NEW"."ROLES" ("ID") ON DELETE CASCADE ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."MODEL_HAS_ROLES_ROLE_MODEL_TYPE_PRIMARY" ON "CRVSPROD_NEW"."MODEL_HAS_ROLES" ("ROLE_ID", "MODEL_ID", "MODEL_TYPE")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE INDEX "CRVSPROD_NEW"."MODEL_HAS_ROLES_MODEL_ID_MODEL_TYPE_INDEX" ON "CRVSPROD_NEW"."MODEL_HAS_ROLES" ("MODEL_ID", "MODEL_TYPE")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."PERMISSIONS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255) NOT NULL ENABLE,
	"GUARD_NAME" VARCHAR2(255) NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "PERMISSIONS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."PERMISSIONS_ID_TRG"
            before insert on PERMISSIONS
            for each row
                begin
            if :new.ID is null then
                select permissions_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."PERMISSIONS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."PERMISSIONS_ID_PK" ON "CRVSPROD_NEW"."PERMISSIONS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."PERMISSIONS_NAME_GUARD_NAME_UK" ON "CRVSPROD_NEW"."PERMISSIONS" (LOWER("NAME"), LOWER("GUARD_NAME"))
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."POURASAVAS"
   (	"POURA_ID" VARCHAR2(15) NOT NULL ENABLE,
	"THANA_ID" VARCHAR2(15) NOT NULL ENABLE,
	"POURA_CODE" VARCHAR2(50),
	"POURA_NAME" VARCHAR2(100),
	"POURA_NAMEB" VARCHAR2(150),
	"ENTERED_BY" VARCHAR2(50),
	"ENTRY_TIMESTAMP" DATE,
	"LAST_UPDATED_BY" VARCHAR2(50),
	"LAST_UPDATED_TIMESTAMP" DATE,
	"STATUS" VARCHAR2(50)
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE INDEX "CRVSPROD_NEW"."IDX_POURASAVAS_THANA_ID" ON "CRVSPROD_NEW"."POURASAVAS" ("THANA_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;
;

CREATE TABLE "CRVSPROD_NEW"."ROLES"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255) NOT NULL ENABLE,
	"GUARD_NAME" VARCHAR2(255) NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "ROLES_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."ROLES_ID_TRG"
            before insert on ROLES
            for each row
                begin
            if :new.ID is null then
                select roles_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."ROLES_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."ROLES_ID_PK" ON "CRVSPROD_NEW"."ROLES" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."ROLES_NAME_GUARD_NAME_UK" ON "CRVSPROD_NEW"."ROLES" (LOWER("NAME"), LOWER("GUARD_NAME"))
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."ROLE_HAS_PERMISSIONS"
   (	"PERMISSION_ID" NUMBER(19,0) NOT NULL ENABLE,
	"ROLE_ID" NUMBER(19,0) NOT NULL ENABLE,
	 CONSTRAINT "ROLE_HAS_PERMISSIONS_PERMISSION_ID_ROLE_ID_PRIMARY" PRIMARY KEY ("PERMISSION_ID", "ROLE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

ALTER TABLE "CRVSPROD_NEW"."ROLE_HAS_PERMISSIONS" ADD CONSTRAINT "RO_HA_PERMISSIO_PERMISSI_ID_FK" FOREIGN KEY ("PERMISSION_ID")
	  REFERENCES "CRVSPROD_NEW"."PERMISSIONS" ("ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "CRVSPROD_NEW"."ROLE_HAS_PERMISSIONS" ADD CONSTRAINT "ROL_HA_PERMISSION_ROL_ID_FK" FOREIGN KEY ("ROLE_ID")
	  REFERENCES "CRVSPROD_NEW"."ROLES" ("ID") ON DELETE CASCADE ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."ROLE_HAS_PERMISSIONS_PERMISSION_ID_ROLE_ID_PRIMARY" ON "CRVSPROD_NEW"."ROLE_HAS_PERMISSIONS" ("PERMISSION_ID", "ROLE_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."SESSIONS"
   (	"ID" VARCHAR2(255) NOT NULL ENABLE,
	"USER_ID" NUMBER(19,0),
	"IP_ADDRESS" VARCHAR2(45),
	"USER_AGENT" CLOB,
	"PAYLOAD" CLOB NOT NULL ENABLE,
	"LAST_ACTIVITY" NUMBER(10,0) NOT NULL ENABLE,
	 CONSTRAINT "SESSIONS_ID_UK" UNIQUE ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
 LOB ("USER_AGENT") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT))
 LOB ("PAYLOAD") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000143299C00005$$" ON "CRVSPROD_NEW"."SESSIONS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000143299C00004$$" ON "CRVSPROD_NEW"."SESSIONS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SESSIONS_ID_UK" ON "CRVSPROD_NEW"."SESSIONS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."STD_ACHIEVEMENTS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME_EN" VARCHAR2(100),
	"NAME_BN" VARCHAR2(100),
	"PARENT_ID" NUMBER(10,0),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "STD_ACHIEVEMENTS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_ACHIEVEMENTS_ID_TRG"
            before insert on STD_ACHIEVEMENTS
            for each row
                begin
            if :new.ID is null then
                select std_achievements_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_ACHIEVEMENTS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_ACHIEVEMENTS_ID_PK" ON "CRVSPROD_NEW"."STD_ACHIEVEMENTS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."STD_ATTD_WORKING_DAY"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"ATT_MONTH" NUMBER(10,0),
	"ATT_YEAR" VARCHAR2(4),
	"WORKING_DAY" NUMBER(10,0),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"EIIN" NUMBER(10,0),
	 CONSTRAINT "STD_ATTD_WORKING_DAY_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_ATTD_WORKING_DAY_ID_TRG"
            before insert on STD_ATTD_WORKING_DAY
            for each row
                begin
            if :new.ID is null then
                select std_attd_working_day_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_ATTD_WORKING_DAY_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_ATTD_WORKING_DAY_ID_PK" ON "CRVSPROD_NEW"."STD_ATTD_WORKING_DAY" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."STD_ATTD_Working_DAY_Shylet" ("ID", "ATT_MONTH", "ATT_YEAR", "WORKING_DAY", "STATUS", "CREATED_BY", "UPDATED_BY", "CREATED_AT", "UPDATED_AT", "EIIN") AS
  SELECT
	SAD."ID",
	SAD."ATT_MONTH",
	SAD."ATT_YEAR",
	SAD."WORKING_DAY",
	SAD."STATUS",
	SAD."CREATED_BY",
	SAD."UPDATED_BY",
	SAD."CREATED_AT",
	SAD."UPDATED_AT",
	SAD."EIIN"
FROM
	STD_ATTD_WORKING_DAY SAD,
	INSTITUTES
WHERE
	SAD.EIIN = INSTITUTES.EIIN
	AND INSTITUTES.DIVISION_ID = 60;
;

CREATE TABLE "CRVSPROD_NEW"."STD_ATTENDANCES_CHILD"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"SRI_ID" NUMBER(10,0) NOT NULL ENABLE,
	"SCAI_ID" NUMBER(10,0) NOT NULL ENABLE,
	"STD_CRVS_ID" VARCHAR2(16) NOT NULL ENABLE,
	"UID" VARCHAR2(10),
	"ATTENDANCE_PARENT_ID" NUMBER(19,0) NOT NULL ENABLE,
	"ATTENDANCE_STATUS" CHAR(1) NOT NULL ENABLE,
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "STD_ATTENDANCES_CHILD_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_ATTENDANCES_CHILD_ID_TRG"
            before insert on STD_ATTENDANCES_CHILD
            for each row
                begin
            if :new.ID is null then
                select std_attendances_child_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_ATTENDANCES_CHILD_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_ATTENDANCES_CHILD_ID_PK" ON "CRVSPROD_NEW"."STD_ATTENDANCES_CHILD" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

COMMENT ON COLUMN CRVSPROD_NEW.STD_ATTENDANCES_CHILD.SRI_ID IS 'student table id';
COMMENT ON COLUMN CRVSPROD_NEW.STD_ATTENDANCES_CHILD.SCAI_ID IS 'student Current table id';
COMMENT ON COLUMN CRVSPROD_NEW.STD_ATTENDANCES_CHILD.STD_CRVS_ID IS 'custom generated id';
COMMENT ON COLUMN CRVSPROD_NEW.STD_ATTENDANCES_CHILD.ATTENDANCE_PARENT_ID IS 'attendance table id';

CREATE TABLE "CRVSPROD_NEW"."STD_ATTENDANCES_PARENT"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"CLASS_ID" NUMBER(3,0) NOT NULL ENABLE,
	"EIIN" VARCHAR2(6) NOT NULL ENABLE,
	"ATTENDANCE_DATE" DATE NOT NULL ENABLE,
	"YEAR" VARCHAR2(4) NOT NULL ENABLE,
	"ATTENDANCE_MONTH" VARCHAR2(2) NOT NULL ENABLE,
	"GIRLS_ATTENDANCE_COUNT" NUMBER(10,0) NOT NULL ENABLE,
	"BOYS_ATTENDANCE_COUNT" NUMBER(10,0) NOT NULL ENABLE,
	"TOTAL_ABSENT_COUNT" NUMBER(10,0) NOT NULL ENABLE,
	"TOTAL_ATTEND_COUNT" NUMBER(10,0) NOT NULL ENABLE,
	"TOTAL_STUDENT" NUMBER(10,0) NOT NULL ENABLE,
	"TOTAL_GIRLS_COUNT" NUMBER(10,0) NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"SECTION" VARCHAR2(255) DEFAULT NULL,
	 CONSTRAINT "STD_ATTENDANCES_PARENT_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_ATTENDANCES_PARENT_ID_TRG"
            before insert on STD_ATTENDANCES_PARENT
            for each row
                begin
            if :new.ID is null then
                select std_attendances_parent_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_ATTENDANCES_PARENT_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_ATTENDANCES_PARENT_ID_PK" ON "CRVSPROD_NEW"."STD_ATTENDANCES_PARENT" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."STD_AVERAGE_ATTENDANCE_DATA"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"EIIN" VARCHAR2(6),
	"SRI_ID" NUMBER(19,0) NOT NULL ENABLE,
	"SCAI_ID" NUMBER(19,0) NOT NULL ENABLE,
	"ATT_YEAR" VARCHAR2(10),
	"MONTH_ID" NUMBER(10,0),
	"WORKING_DAY" NUMBER(10,0),
	"ATTENDANCE_DAY" NUMBER(10,0),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "ST_AVERAG_ATTENDANC_DAT_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_AVERAGE_ATTENDANCE_DATA_ID"
            before insert on STD_AVERAGE_ATTENDANCE_DATA
            for each row
                begin
            if :new.ID is null then
                select std_average_attendance_data_id.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_AVERAGE_ATTENDANCE_DATA_ID" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."ST_AVERAG_ATTENDANC_DAT_ID_PK" ON "CRVSPROD_NEW"."STD_AVERAGE_ATTENDANCE_DATA" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."STD_AVERAGE_ATTENDANCE_DATA_SHYLET" ("ID", "EIIN", "SRI_ID", "SCAI_ID", "ATT_YEAR", "MONTH_ID", "WORKING_DAY", "ATTENDANCE_DAY", "STATUS", "CREATED_BY", "UPDATED_BY", "CREATED_AT", "UPDATED_AT") AS
  SELECT
	SAD."ID",SAD."EIIN",SAD."SRI_ID",SAD."SCAI_ID",SAD."ATT_YEAR",SAD."MONTH_ID",SAD."WORKING_DAY",SAD."ATTENDANCE_DAY",SAD."STATUS",SAD."CREATED_BY",SAD."UPDATED_BY",SAD."CREATED_AT",SAD."UPDATED_AT"
FROM
	STD_AVERAGE_ATTENDANCE_DATA SAD,
	INSTITUTES
WHERE
	SAD.EIIN = INSTITUTES.EIIN
	AND INSTITUTES.DIVISION_ID = 60;
;

CREATE TABLE "CRVSPROD_NEW"."STD_CATEGORYS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME_EN" VARCHAR2(100),
	"NAME_BN" VARCHAR2(100),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "STD_CATEGORYS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_CATEGORYS_ID_TRG"
            before insert on STD_CATEGORYS
            for each row
                begin
            if :new.ID is null then
                select std_categorys_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_CATEGORYS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_CATEGORYS_ID_PK" ON "CRVSPROD_NEW"."STD_CATEGORYS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."STD_CLASSES"
   (	"ID" NUMBER(10,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255) NOT NULL ENABLE,
	"STATUS" VARCHAR2(255) DEFAULT '1' NOT NULL ENABLE,
	"PRIORITY_BY" NUMBER(10,0),
	"PARENT_ID" NUMBER(10,0),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"NAME_BN" VARCHAR2(255)
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."STD_CURRENT_ACADEMIC_INFO"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"SRI_ID" NUMBER(19,0) NOT NULL ENABLE,
	"STD_CLASS_ID" NUMBER(10,0) NOT NULL ENABLE,
	"ACADEMIC_YEAR" VARCHAR2(4) NOT NULL ENABLE,
	"EIIN" VARCHAR2(6) NOT NULL ENABLE,
	"UID" VARCHAR2(10),
	"SHIFT_ID" NUMBER(10,0),
	"STD_SECTION" VARCHAR2(10),
	"CLASS_GROUP_ID" NUMBER(19,0),
	"ADMISSION_CLASS" NUMBER(3,0),
	"REG_NO" VARCHAR2(20),
	"ACADEMIC_ROLL_NO" VARCHAR2(10),
	"ADMISSION_DATE" DATE,
	"VERSIONS_ID" NUMBER(3,0),
	"SCHOLARSHIPS" NUMBER(3,0),
	"MERIT_STIPEND" NUMBER(3,0),
	"OTHER_SCHOLARSHIPS" NUMBER(3,0),
	"TRANSFER_IN" NUMBER(3,0),
	"REPEATER_ID" NUMBER(3,0),
	"HOBBY_ID_1" NUMBER(3,0),
	"HOBBY_ID_2" NUMBER(3,0),
	"HOBBY_ID_3" NUMBER(3,0),
	"HOBBY_ID_4" NUMBER(3,0),
	"HOBBY_ID_5" NUMBER(3,0),
	"HOBBY_ID_6" NUMBER(3,0),
	"HOBBY_ID_7" NUMBER(3,0),
	"HOBBY_ID_8" NUMBER(3,0),
	"HOBBY_ID_9" NUMBER(3,0),
	"HOBBY_ID_10" NUMBER(3,0),
	"HOBBY_ID_11" NUMBER(3,0),
	"HOBBY_ID_12" NUMBER(3,0),
	"HOBBY_ID_13" NUMBER(3,0),
	"HOBBY_ID_14" NUMBER(3,0),
	"HOBBY_ID_15" NUMBER(3,0),
	"COCURRICULAR_ID_1" NUMBER(3,0),
	"COCURRICULAR_ID_2" NUMBER(3,0),
	"COCURRICULAR_ID_3" NUMBER(3,0),
	"COCURRICULAR_ID_4" NUMBER(3,0),
	"COCURRICULAR_ID_5" NUMBER(3,0),
	"COCURRICULAR_ID_6" NUMBER(3,0),
	"COCURRICULAR_ID_7" NUMBER(3,0),
	"COCURRICULAR_ID_8" NUMBER(3,0),
	"COCURRICULAR_ID_9" NUMBER(3,0),
	"COCURRICULAR_ID_10" NUMBER(3,0),
	"COCURRICULAR_ID_11" NUMBER(3,0),
	"COCURRICULAR_ID_12" NUMBER(3,0),
	"COCURRICULAR_ID_13" NUMBER(3,0),
	"COCURRICULAR_ID_14" NUMBER(3,0),
	"COCURRICULAR_ID_15" NUMBER(3,0),
	"COCURRICULAR_ID_16" NUMBER(3,0),
	"COCURRICULAR_ID_17" NUMBER(3,0),
	"COCURRICULAR_ID_18" NUMBER(3,0),
	"COCURRICULAR_ID_19" NUMBER(3,0),
	"COCURRICULAR_ID_20" NUMBER(3,0),
	"COCURRICULAR_ID_21" NUMBER(3,0),
	"COCURRICULAR_ID_22" NUMBER(3,0),
	"COCURRICULAR_ID_23" NUMBER(3,0),
	"COCURRICULAR_ID_24" NUMBER(3,0),
	"COCURRICULAR_ID_25" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_1" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_2" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_3" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_4" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_5" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_6" NUMBER(3,0),
	"LEVEL_1_ACHIEVEMENT_7" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_1" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_2" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_3" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_4" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_5" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_6" NUMBER(3,0),
	"LEVEL_2_ACHIEVEMENT_7" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_1" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_2" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_3" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_4" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_5" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_6" NUMBER(3,0),
	"LEVEL_3_ACHIEVEMENT_7" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_1" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_2" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_3" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_4" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_5" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_6" NUMBER(3,0),
	"LEVEL_1_PARTICIPATION_ID_7" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_1" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_2" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_3" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_4" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_5" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_6" NUMBER(3,0),
	"LEVEL_2_PARTICIPATION_ID_7" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_1" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_2" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_3" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_4" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_5" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_6" NUMBER(3,0),
	"LEVEL_3_PARTICIPATION_ID_7" NUMBER(3,0),
	"STD_CATEGORY_1" NUMBER(3,0),
	"STD_CATEGORY_2" NUMBER(3,0),
	"STD_CATEGORY_3" NUMBER(3,0),
	"STD_CATEGORY_4" NUMBER(3,0),
	"SUBJECT_RESULT_TOTAL_GPA" VARCHAR2(5),
	"STUDENT_SIG_DATE" DATE,
	"CLASS_TEACHER_SIG_DATE" DATE,
	"CLASS_TEACHER_NAME" VARCHAR2(150),
	"CLASS_TEACHER_MOBILE_NO" VARCHAR2(11),
	"CLASS_TEACHER_NID" NUMBER(19,0),
	"HEAD_TEACHER_SIG_DATE" DATE,
	"HEAD_TEACHER_NAME" VARCHAR2(150),
	"HEAD_TEACHER_MOBILE_NO" VARCHAR2(11),
	"HEAD_TEACHER_NID_NO" NUMBER(19,0),
	"HEAD_TEC_CET_STATUS" NUMBER(3,0),
	"MIGRATION_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"ACTIVE_STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"PROMOTION_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"BACK_ENTRY" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"DIVISION_ID" VARCHAR2(6),
	"DISTRICT_ID" VARCHAR2(6),
	"THANA_ID" VARCHAR2(10 CHAR),
	"UNION_ID" VARCHAR2(30),
	 CONSTRAINT "ST_CURREN_ACADEMI_INF_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_CURRENT_ACADEMIC_INFO_ID_T"
            before insert on STD_CURRENT_ACADEMIC_INFO
            for each row
                begin
            if :new.ID is null then
                select std_current_academic_info_id_s.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_CURRENT_ACADEMIC_INFO_ID_T" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."ST_CURREN_ACADEMI_INF_ID_PK" ON "CRVSPROD_NEW"."STD_CURRENT_ACADEMIC_INFO" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE INDEX "CRVSPROD_NEW"."IDX_STD_CURRENT_AC_INFO_EIIN" ON "CRVSPROD_NEW"."STD_CURRENT_ACADEMIC_INFO" ("SRI_ID", "EIIN", "ACADEMIC_YEAR")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;

COMMENT ON COLUMN CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO.SRI_ID IS 'student table column id';
COMMENT ON COLUMN CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO.SCHOLARSHIPS IS '1=yes,2=no';
COMMENT ON COLUMN CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO.MERIT_STIPEND IS '1=yes,2=no';
COMMENT ON COLUMN CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO.OTHER_SCHOLARSHIPS IS '1=yes,2=no';
COMMENT ON COLUMN CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO.TRANSFER_IN IS '1=yes,2=no';
COMMENT ON COLUMN CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO.REPEATER_ID IS '1=yes,2=no';
COMMENT ON COLUMN CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO.HEAD_TEC_CET_STATUS IS '1=no,2=yes';
COMMENT ON COLUMN CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO.MIGRATION_STATUS IS '0=no,1=yes';
COMMENT ON COLUMN CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO.ACTIVE_STATUS IS '1=active,0=dropout';
COMMENT ON COLUMN CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO.PROMOTION_STATUS IS '1=yes,0=no';
COMMENT ON COLUMN CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO.STATUS IS '1=active,0=inactive';
COMMENT ON COLUMN CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO.BACK_ENTRY IS '1=back entry,0=regular
';

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."STD_CURRENT_ACADEMIC_SHYLET" ("ID", "SRI_ID", "STD_CLASS_ID", "ACADEMIC_YEAR", "EIIN", "UID", "SHIFT_ID", "STD_SECTION", "CLASS_GROUP_ID", "ADMISSION_CLASS", "REG_NO", "ACADEMIC_ROLL_NO", "ADMISSION_DATE", "VERSIONS_ID", "SCHOLARSHIPS", "MERIT_STIPEND", "OTHER_SCHOLARSHIPS", "TRANSFER_IN", "REPEATER_ID", "HOBBY_ID_1", "HOBBY_ID_2", "HOBBY_ID_3", "HOBBY_ID_4", "HOBBY_ID_5", "HOBBY_ID_6", "HOBBY_ID_7", "HOBBY_ID_8", "HOBBY_ID_9", "HOBBY_ID_10", "HOBBY_ID_11", "HOBBY_ID_12", "HOBBY_ID_13", "HOBBY_ID_14", "HOBBY_ID_15", "COCURRICULAR_ID_1", "COCURRICULAR_ID_2", "COCURRICULAR_ID_3", "COCURRICULAR_ID_4", "COCURRICULAR_ID_5", "COCURRICULAR_ID_6", "COCURRICULAR_ID_7", "COCURRICULAR_ID_8", "COCURRICULAR_ID_9", "COCURRICULAR_ID_10", "COCURRICULAR_ID_11", "COCURRICULAR_ID_12", "COCURRICULAR_ID_13", "COCURRICULAR_ID_14", "COCURRICULAR_ID_15", "COCURRICULAR_ID_16", "COCURRICULAR_ID_17", "COCURRICULAR_ID_18", "COCURRICULAR_ID_19", "COCURRICULAR_ID_20", "COCURRICULAR_ID_21", "COCURRICULAR_ID_22", "COCURRICULAR_ID_23", "COCURRICULAR_ID_24", "COCURRICULAR_ID_25", "LEVEL_1_ACHIEVEMENT_1", "LEVEL_1_ACHIEVEMENT_2", "LEVEL_1_ACHIEVEMENT_3", "LEVEL_1_ACHIEVEMENT_4", "LEVEL_1_ACHIEVEMENT_5", "LEVEL_1_ACHIEVEMENT_6", "LEVEL_1_ACHIEVEMENT_7", "LEVEL_2_ACHIEVEMENT_1", "LEVEL_2_ACHIEVEMENT_2", "LEVEL_2_ACHIEVEMENT_3", "LEVEL_2_ACHIEVEMENT_4", "LEVEL_2_ACHIEVEMENT_5", "LEVEL_2_ACHIEVEMENT_6", "LEVEL_2_ACHIEVEMENT_7", "LEVEL_3_ACHIEVEMENT_1", "LEVEL_3_ACHIEVEMENT_2", "LEVEL_3_ACHIEVEMENT_3", "LEVEL_3_ACHIEVEMENT_4", "LEVEL_3_ACHIEVEMENT_5", "LEVEL_3_ACHIEVEMENT_6", "LEVEL_3_ACHIEVEMENT_7", "LEVEL_1_PARTICIPATION_ID_1", "LEVEL_1_PARTICIPATION_ID_2", "LEVEL_1_PARTICIPATION_ID_3", "LEVEL_1_PARTICIPATION_ID_4", "LEVEL_1_PARTICIPATION_ID_5", "LEVEL_1_PARTICIPATION_ID_6", "LEVEL_1_PARTICIPATION_ID_7", "LEVEL_2_PARTICIPATION_ID_1", "LEVEL_2_PARTICIPATION_ID_2", "LEVEL_2_PARTICIPATION_ID_3", "LEVEL_2_PARTICIPATION_ID_4", "LEVEL_2_PARTICIPATION_ID_5", "LEVEL_2_PARTICIPATION_ID_6", "LEVEL_2_PARTICIPATION_ID_7", "LEVEL_3_PARTICIPATION_ID_1", "LEVEL_3_PARTICIPATION_ID_2", "LEVEL_3_PARTICIPATION_ID_3", "LEVEL_3_PARTICIPATION_ID_4", "LEVEL_3_PARTICIPATION_ID_5", "LEVEL_3_PARTICIPATION_ID_6", "LEVEL_3_PARTICIPATION_ID_7", "STD_CATEGORY_1", "STD_CATEGORY_2", "STD_CATEGORY_3", "STD_CATEGORY_4", "SUBJECT_RESULT_TOTAL_GPA", "STUDENT_SIG_DATE", "CLASS_TEACHER_SIG_DATE", "CLASS_TEACHER_NAME", "CLASS_TEACHER_MOBILE_NO", "CLASS_TEACHER_NID", "HEAD_TEACHER_SIG_DATE", "HEAD_TEACHER_NAME", "HEAD_TEACHER_MOBILE_NO", "HEAD_TEACHER_NID_NO", "HEAD_TEC_CET_STATUS", "MIGRATION_STATUS", "ACTIVE_STATUS", "PROMOTION_STATUS", "STATUS", "CREATED_BY", "UPDATED_BY", "CREATED_AT", "UPDATED_AT") AS
  SELECT
	CA."ID",
	CA."SRI_ID",
	CA."STD_CLASS_ID",
	CA."ACADEMIC_YEAR",
	CA."EIIN",
	CA."UID",
	CA."SHIFT_ID",
	CA."STD_SECTION",
	CA."CLASS_GROUP_ID",
	CA."ADMISSION_CLASS",
	CA."REG_NO",
	CA."ACADEMIC_ROLL_NO",
	CA."ADMISSION_DATE",
	CA."VERSIONS_ID",
	CA."SCHOLARSHIPS",
	CA."MERIT_STIPEND",
	CA."OTHER_SCHOLARSHIPS",
	CA."TRANSFER_IN",
	CA."REPEATER_ID",
	CA."HOBBY_ID_1",
	CA."HOBBY_ID_2",
	CA."HOBBY_ID_3",
	CA."HOBBY_ID_4",
	CA."HOBBY_ID_5",
	CA."HOBBY_ID_6",
	CA."HOBBY_ID_7",
	CA."HOBBY_ID_8",
	CA."HOBBY_ID_9",
	CA."HOBBY_ID_10",
	CA."HOBBY_ID_11",
	CA."HOBBY_ID_12",
	CA."HOBBY_ID_13",
	CA."HOBBY_ID_14",
	CA."HOBBY_ID_15",
	CA."COCURRICULAR_ID_1",
	CA."COCURRICULAR_ID_2",
	CA."COCURRICULAR_ID_3",
	CA."COCURRICULAR_ID_4",
	CA."COCURRICULAR_ID_5",
	CA."COCURRICULAR_ID_6",
	CA."COCURRICULAR_ID_7",
	CA."COCURRICULAR_ID_8",
	CA."COCURRICULAR_ID_9",
	CA."COCURRICULAR_ID_10",
	CA."COCURRICULAR_ID_11",
	CA."COCURRICULAR_ID_12",
	CA."COCURRICULAR_ID_13",
	CA."COCURRICULAR_ID_14",
	CA."COCURRICULAR_ID_15",
	CA."COCURRICULAR_ID_16",
	CA."COCURRICULAR_ID_17",
	CA."COCURRICULAR_ID_18",
	CA."COCURRICULAR_ID_19",
	CA."COCURRICULAR_ID_20",
	CA."COCURRICULAR_ID_21",
	CA."COCURRICULAR_ID_22",
	CA."COCURRICULAR_ID_23",
	CA."COCURRICULAR_ID_24",
	CA."COCURRICULAR_ID_25",
	CA."LEVEL_1_ACHIEVEMENT_1",
	CA."LEVEL_1_ACHIEVEMENT_2",
	CA."LEVEL_1_ACHIEVEMENT_3",
	CA."LEVEL_1_ACHIEVEMENT_4",
	CA."LEVEL_1_ACHIEVEMENT_5",
	CA."LEVEL_1_ACHIEVEMENT_6",
	CA."LEVEL_1_ACHIEVEMENT_7",
	CA."LEVEL_2_ACHIEVEMENT_1",
	CA."LEVEL_2_ACHIEVEMENT_2",
	CA."LEVEL_2_ACHIEVEMENT_3",
	CA."LEVEL_2_ACHIEVEMENT_4",
	CA."LEVEL_2_ACHIEVEMENT_5",
	CA."LEVEL_2_ACHIEVEMENT_6",
	CA."LEVEL_2_ACHIEVEMENT_7",
	CA."LEVEL_3_ACHIEVEMENT_1",
	CA."LEVEL_3_ACHIEVEMENT_2",
	CA."LEVEL_3_ACHIEVEMENT_3",
	CA."LEVEL_3_ACHIEVEMENT_4",
	CA."LEVEL_3_ACHIEVEMENT_5",
	CA."LEVEL_3_ACHIEVEMENT_6",
	CA."LEVEL_3_ACHIEVEMENT_7",
	CA."LEVEL_1_PARTICIPATION_ID_1",
	CA."LEVEL_1_PARTICIPATION_ID_2",
	CA."LEVEL_1_PARTICIPATION_ID_3",
	CA."LEVEL_1_PARTICIPATION_ID_4",
	CA."LEVEL_1_PARTICIPATION_ID_5",
	CA."LEVEL_1_PARTICIPATION_ID_6",
	CA."LEVEL_1_PARTICIPATION_ID_7",
	CA."LEVEL_2_PARTICIPATION_ID_1",
	CA."LEVEL_2_PARTICIPATION_ID_2",
	CA."LEVEL_2_PARTICIPATION_ID_3",
	CA."LEVEL_2_PARTICIPATION_ID_4",
	CA."LEVEL_2_PARTICIPATION_ID_5",
	CA."LEVEL_2_PARTICIPATION_ID_6",
	CA."LEVEL_2_PARTICIPATION_ID_7",
	CA."LEVEL_3_PARTICIPATION_ID_1",
	CA."LEVEL_3_PARTICIPATION_ID_2",
	CA."LEVEL_3_PARTICIPATION_ID_3",
	CA."LEVEL_3_PARTICIPATION_ID_4",
	CA."LEVEL_3_PARTICIPATION_ID_5",
	CA."LEVEL_3_PARTICIPATION_ID_6",
	CA."LEVEL_3_PARTICIPATION_ID_7",
	CA."STD_CATEGORY_1",
	CA."STD_CATEGORY_2",
	CA."STD_CATEGORY_3",
	CA."STD_CATEGORY_4",
	CA."SUBJECT_RESULT_TOTAL_GPA",
	CA."STUDENT_SIG_DATE",
	CA."CLASS_TEACHER_SIG_DATE",
	CA."CLASS_TEACHER_NAME",
	CA."CLASS_TEACHER_MOBILE_NO",
	CA."CLASS_TEACHER_NID",
	CA."HEAD_TEACHER_SIG_DATE",
	CA."HEAD_TEACHER_NAME",
	CA."HEAD_TEACHER_MOBILE_NO",
	CA."HEAD_TEACHER_NID_NO",
	CA."HEAD_TEC_CET_STATUS",
	CA."MIGRATION_STATUS",
	CA."ACTIVE_STATUS",
	CA."PROMOTION_STATUS",
	CA."STATUS",
	CA."CREATED_BY",
	CA."UPDATED_BY",
	CA."CREATED_AT",
	CA."UPDATED_AT"
FROM
	STD_CURRENT_ACADEMIC_INFO CA
	INNER JOIN INSTITUTES ON CA.EIIN = INSTITUTES.EIIN
WHERE
	CA.EIIN = INSTITUTES.EIIN
	AND INSTITUTES.DIVISION_ID = 60
ORDER BY
	CA.ID ASC;
;

CREATE TABLE "CRVSPROD_NEW"."STD_EXAMS"
   (	"ID" NUMBER(10,0) NOT NULL ENABLE,
	"CLASS_ID" NUMBER(10,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(250),
	"EXAM_TYPE" NUMBER(3,0),
	"BLOCK_TYPE" NUMBER(3,0),
	"CONFLICT_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"PRE_CONFLICT_EXAM_ID" NUMBER(10,0),
	"STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6)
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

COMMENT ON COLUMN CRVSPROD_NEW.STD_EXAMS.ID IS 'G=1,M=2,G+M=3,GV=4,MV=5,GV+MV=6';
COMMENT ON COLUMN CRVSPROD_NEW.STD_EXAMS.EXAM_TYPE IS '1= public,0= barshik';
COMMENT ON COLUMN CRVSPROD_NEW.STD_EXAMS.BLOCK_TYPE IS '1= subject wise exam,2= Previous wise exam';
COMMENT ON COLUMN CRVSPROD_NEW.STD_EXAMS.CONFLICT_STATUS IS '0 = No same exam like, 1 = same exam found';
COMMENT ON COLUMN CRVSPROD_NEW.STD_EXAMS.PRE_CONFLICT_EXAM_ID IS 'if old ten than id will be ssc exam';
COMMENT ON COLUMN CRVSPROD_NEW.STD_EXAMS.STATUS IS '0=active,1=inactive';

CREATE TABLE "CRVSPROD_NEW"."STD_EXAM_DETAILS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"EXAM_ID" NUMBER(10,0) NOT NULL ENABLE,
	"INSTITUTE_TYPE_ID" NUMBER(10,0) NOT NULL ENABLE,
	"TOTAL_COMPULSORY" NUMBER(10,0),
	"TOTAL_ELECTIVE" NUMBER(10,0),
	"TOTAL_OPTIONAL" NUMBER(10,0),
	"AC_GROUP_ID" NUMBER(10,0),
	"PARENT_EXAM_ID" CLOB,
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "STD_EXAM_DETAILS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
 LOB ("PARENT_EXAM_ID") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_EXAM_DETAILS_ID_TRG"
            before insert on STD_EXAM_DETAILS
            for each row
                begin
            if :new.ID is null then
                select std_exam_details_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_EXAM_DETAILS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_EXAM_DETAILS_ID_PK" ON "CRVSPROD_NEW"."STD_EXAM_DETAILS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000143312C00008$$" ON "CRVSPROD_NEW"."STD_EXAM_DETAILS" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
;

CREATE TABLE "CRVSPROD_NEW"."STD_EXTRA_CO_CURRICULAR_EXAM"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME_EN" VARCHAR2(100),
	"NAME_BN" VARCHAR2(100),
	"STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "ST_EXTR_CO_CURRICULA_EXA_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_EXTRA_CO_CURRICULAR_EXAM_I"
            before insert on STD_EXTRA_CO_CURRICULAR_EXAM
            for each row
                begin
            if :new.ID is null then
                select std_extra_co_curricular_exam_i.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_EXTRA_CO_CURRICULAR_EXAM_I" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."ST_EXTR_CO_CURRICULA_EXA_ID_PK" ON "CRVSPROD_NEW"."STD_EXTRA_CO_CURRICULAR_EXAM" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

COMMENT ON COLUMN CRVSPROD_NEW.STD_EXTRA_CO_CURRICULAR_EXAM.STATUS IS 'all=0,male=1,female=2';

CREATE TABLE "CRVSPROD_NEW"."STD_GRADING_SYSTEMS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"GRADE" VARCHAR2(255) DEFAULT 'F' NOT NULL ENABLE,
	"GRADE_POINT" NUMBER(8,1) DEFAULT '0' NOT NULL ENABLE,
	"N_MIN" NUMBER(10,0) DEFAULT '0' NOT NULL ENABLE,
	"N_MAX" NUMBER(10,0) DEFAULT '0' NOT NULL ENABLE,
	"STATUS" CHAR(1) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "STD_GRADING_SYSTEMS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_GRADING_SYSTEMS_ID_TRG"
            before insert on STD_GRADING_SYSTEMS
            for each row
                begin
            if :new.ID is null then
                select std_grading_systems_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_GRADING_SYSTEMS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_GRADING_SYSTEMS_ID_PK" ON "CRVSPROD_NEW"."STD_GRADING_SYSTEMS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

COMMENT ON COLUMN CRVSPROD_NEW.STD_GRADING_SYSTEMS.GRADE IS 'A+, A, A-, B, C, D, F';
COMMENT ON COLUMN CRVSPROD_NEW.STD_GRADING_SYSTEMS.GRADE_POINT IS 'grade A+ = 5';

CREATE TABLE "CRVSPROD_NEW"."STD_HOBBYS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME_EN" VARCHAR2(100),
	"NAME_BN" VARCHAR2(100),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "STD_HOBBYS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_HOBBYS_ID_TRG"
            before insert on STD_HOBBYS
            for each row
                begin
            if :new.ID is null then
                select std_hobbys_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_HOBBYS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_HOBBYS_ID_PK" ON "CRVSPROD_NEW"."STD_HOBBYS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."STD_MIGRATION"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"SRI_ID" NUMBER(19,0) NOT NULL ENABLE,
	"SCAI_ID" NUMBER(19,0) NOT NULL ENABLE,
	"CLASS_ID" NUMBER(10,0) NOT NULL ENABLE,
	"TARGET_EIIN" VARCHAR2(6) NOT NULL ENABLE,
	"CURRENT_EIIN" VARCHAR2(6) NOT NULL ENABLE,
	"REQUEST_BY" VARCHAR2(20),
	"APPROVE_BY" VARCHAR2(20),
	"REQUEST_AT" DATE,
	"APPROVE_AT" DATE,
	"STATUS" VARCHAR2(1) DEFAULT 'P' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"REQUEST_REMARK" CLOB,
	"APPROVE_REMARK" CLOB,
	"MIGRATION_TRACKING_CODE" VARCHAR2(255),
	"PROMOTED_CLASS_ID" NUMBER(10,0),
	 CONSTRAINT "STD_MIGRATION_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
 LOB ("REQUEST_REMARK") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT))
 LOB ("APPROVE_REMARK") STORE AS SECUREFILE (
  TABLESPACE "CRVSDATA" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_MIGRATION_ID_TRG"
            before insert on STD_MIGRATION
            for each row
                begin
            if :new.ID is null then
                select std_migration_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_MIGRATION_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_MIGRATION_ID_PK" ON "CRVSPROD_NEW"."STD_MIGRATION" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000143292C00017$$" ON "CRVSPROD_NEW"."STD_MIGRATION" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."SYS_IL0000143292C00016$$" ON "CRVSPROD_NEW"."STD_MIGRATION" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"
  PARALLEL (DEGREE 0 INSTANCES 0) ;

COMMENT ON COLUMN CRVSPROD_NEW.STD_MIGRATION.STATUS IS 'P=pending,Y=yes,N=no';

CREATE TABLE "CRVSPROD_NEW"."STD_PARENT_OCCUPATIONS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"GROUP_NAME_BN" VARCHAR2(400),
	"GROUP_NAME_EN" VARCHAR2(200),
	"PARENT_ID" NUMBER(10,0) DEFAULT '0' NOT NULL ENABLE,
	"MAJOR_CODE" VARCHAR2(255),
	"SUB_MAJOR_CODE" VARCHAR2(255),
	"MINOR_CODE" VARCHAR2(255),
	"UNIT_CODE" VARCHAR2(255),
	"GROUP" VARCHAR2(255),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "STD_PARENT_OCCUPATIONS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_PARENT_OCCUPATIONS_ID_TRG"
            before insert on STD_PARENT_OCCUPATIONS
            for each row
                begin
            if :new.ID is null then
                select std_parent_occupations_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_PARENT_OCCUPATIONS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_PARENT_OCCUPATIONS_ID_PK" ON "CRVSPROD_NEW"."STD_PARENT_OCCUPATIONS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."STD_PARTICIPATIONS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME_EN" VARCHAR2(100),
	"NAME_BN" VARCHAR2(100),
	"PARENT_ID" NUMBER(10,0),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "STD_PARTICIPATIONS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_PARTICIPATIONS_ID_TRG"
            before insert on STD_PARTICIPATIONS
            for each row
                begin
            if :new.ID is null then
                select std_participations_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_PARTICIPATIONS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_PARTICIPATIONS_ID_PK" ON "CRVSPROD_NEW"."STD_PARTICIPATIONS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."STD_PREVIOUS_EXAM_RESULTS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"SRI_ID" NUMBER(19,0) NOT NULL ENABLE,
	"PREVIOUS_EXAM_ID" NUMBER(10,0) NOT NULL ENABLE,
	"PREVIOUS_EXAM_ROLL" VARCHAR2(20),
	"PREVIOUS_INS_EIIN" VARCHAR2(6),
	"PREVIOUS_INS_NAME" VARCHAR2(150),
	"PREVIOUS_EXAM_BORD_ID" NUMBER(10,0),
	"PREVIOUS_EXAM_GPA" VARCHAR2(20),
	"PREVIOUS_EXAM_YEAR" VARCHAR2(4),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "ST_PREVIOU_EXA_RESULT_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_PREVIOUS_EXAM_RESULTS_ID_T"
            before insert on STD_PREVIOUS_EXAM_RESULTS
            for each row
                begin
            if :new.ID is null then
                select std_previous_exam_results_id_s.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_PREVIOUS_EXAM_RESULTS_ID_T" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."ST_PREVIOU_EXA_RESULT_ID_PK" ON "CRVSPROD_NEW"."STD_PREVIOUS_EXAM_RESULTS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."STD_PREVIOUS_EXAM_RESULTS_SHYLET" ("ID", "SRI_ID", "PREVIOUS_EXAM_ID", "PREVIOUS_EXAM_ROLL", "PREVIOUS_INS_EIIN", "PREVIOUS_INS_NAME", "PREVIOUS_EXAM_BORD_ID", "PREVIOUS_EXAM_GPA", "PREVIOUS_EXAM_YEAR", "STATUS", "CREATED_BY", "UPDATED_BY", "CREATED_AT", "UPDATED_AT") AS
  SELECT
	SPR."ID",
	SPR."SRI_ID",
	SPR."PREVIOUS_EXAM_ID",
	SPR."PREVIOUS_EXAM_ROLL",
	SPR."PREVIOUS_INS_EIIN",
	SPR."PREVIOUS_INS_NAME",
	SPR."PREVIOUS_EXAM_BORD_ID",
	SPR."PREVIOUS_EXAM_GPA",
	SPR."PREVIOUS_EXAM_YEAR",
	SPR."STATUS",
	SPR."CREATED_BY",
	SPR."UPDATED_BY",
	SPR."CREATED_AT",
	SPR."UPDATED_AT"
FROM
	STD_PREVIOUS_EXAM_RESULTS SPR,
	STD_REG_INFO_SHYLET CA

WHERE
	CA.ID = SPR.SRI_ID
ORDER BY
	CA.ID ASC;
;

CREATE TABLE "CRVSPROD_NEW"."STD_REGISTRATION_INFO"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"EIIN" VARCHAR2(6) NOT NULL ENABLE,
	"REGISTRATION_YEAR" VARCHAR2(4),
	"STD_CRVS_ID" VARCHAR2(15),
	"UID" VARCHAR2(10),
	"FULLNAME_BANGLA" VARCHAR2(150),
	"FULLNAME_ENGLISH" VARCHAR2(100),
	"BIN_BRN" VARCHAR2(17),
	"DOB" DATE,
	"GENDER" NUMBER(10,0),
	"NATIONALITY" NUMBER(3,0),
	"OTHER_NATIONALITY" VARCHAR2(20),
	"RELIGION" VARCHAR2(2),
	"REGISTER_CLASS" NUMBER(3,0),
	"ACADEMIC_ROLL_NO" VARCHAR2(10),
	"MARITAL_STATUS" VARCHAR2(1),
	"IS_DISABILITY" VARCHAR2(2),
	"DISABILITYTYPE" VARCHAR2(2),
	"BLOOD_GROUP" VARCHAR2(1),
	"SMALL_ETHNIC_GROUP" VARCHAR2(2),
	"SMALL_ETHNIC_GROUP_NAME" NUMBER(10,0),
	"BIRTHPLACE" VARCHAR2(15),
	"MOTHER_NID" VARCHAR2(17),
	"MOTHER_UBRN" VARCHAR2(17),
	"MOTHER_DATE_OF_BIRTH" DATE,
	"MOTHERNAME_BANGLA" VARCHAR2(150),
	"MOTHERNAME_ENGLISH" VARCHAR2(150),
	"MOTHER_MOBILE_NO" VARCHAR2(11),
	"MOTHER_PROFESSION" VARCHAR2(30),
	"MOTHER_DEATH_DATE" VARCHAR2(4),
	"FATHER_NID" VARCHAR2(17),
	"FATHER_UBRN" VARCHAR2(17),
	"FATHER_DATE_OF_BIRTH" DATE,
	"FATHERNAME_BANGLA" VARCHAR2(150),
	"FATHERNAME_ENGLISH" VARCHAR2(150),
	"FATHER_MOBILE_NO" VARCHAR2(11),
	"FATHER_PROFESSION" VARCHAR2(30),
	"FATHER_DEATH_DATE" VARCHAR2(4),
	"PRESENTDIVISIONID" VARCHAR2(35),
	"PRESENTDISTRICTID" VARCHAR2(35),
	"PRESENTTHANAID" VARCHAR2(35),
	"PRESENT_CITY_CORPORATION" VARCHAR2(35),
	"PRESENTUNIONID" VARCHAR2(35),
	"PRESENTAREAID" VARCHAR2(35),
	"PRESENT_ADDRESS" VARCHAR2(150),
	"PRESENTHOUSEHOLDNO" VARCHAR2(255),
	"PRESENT_POST_OFFICE" VARCHAR2(150),
	"PRESENTPOSTCODE" VARCHAR2(20),
	"PERMANENETDIVISIONID" VARCHAR2(35),
	"PERMANENTDISTTICTID" VARCHAR2(35),
	"PERMANENTTHANAID" VARCHAR2(35),
	"PERMANENT_CITY_CORPORATION" VARCHAR2(150),
	"PERMANENTUNIONID" VARCHAR2(35),
	"PERMANENTAREAID" VARCHAR2(35),
	"PERMANENT_ADDRESS" VARCHAR2(150),
	"PERMANENTHOUSEHOLDNO" VARCHAR2(150),
	"PERMANENT_POST_OFFICE" VARCHAR2(100),
	"PERMANENTPOSTCODE" VARCHAR2(100),
	"GUARDIAN_NID" VARCHAR2(17),
	"GUARDIAN_NAME" VARCHAR2(150),
	"GUARDIAN_DATE_OF_BIRTH" DATE,
	"GUARDIAN_PROFESSION" VARCHAR2(30),
	"GUARDIAN_SIG_DATE" VARCHAR2(30),
	"RELATIONSHIP_WITH_GUARDIAN" NUMBER(10,0),
	"GUARDIAN_MOBILE" VARCHAR2(11),
	"CERTIFICATION_STATUS" NUMBER(3,0),
	"ID_CARD_GENERATE_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"IMAGE_FOLDER_PATH" VARCHAR2(255) NOT NULL ENABLE,
	"STD_PROFILE_IMAGE" VARCHAR2(100),
	"FM_NID_FOUND_STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"STD_BIRTH_REG_NO_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"UID_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"MOTHER_NID_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"FATHER_NID_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"GUARDIAN_NID_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"TEMP_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"TAB_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"BRN_FATHER_NAME_EN_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"BRN_FATHER_NAME_BN_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"BRN_MOTHER_NAME_EN_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"BRN_MOTHER_NAME_BN_STATUS" NUMBER(3,0) DEFAULT '0' NOT NULL ENABLE,
	"IS_CLICKED_BOARD_RESPONSE_CONFIRM" CHAR(1) DEFAULT '0' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"ORG_NAME_BANGLA" VARCHAR2(255),
	"ORG_NAME_ENGLISH" VARCHAR2(255),
	"WRITE_BIRTH_PLACE" VARCHAR2(255),
	"CRVS_MOTHER_NAME_BN" VARCHAR2(255),
	"CRVS_MOTHER_NAME_EN" VARCHAR2(255),
	"CRVS_FATHER_NAME_BN" VARCHAR2(255),
	"CRVS_FATHER_NAME_EN" VARCHAR2(255),
	"TEACHER_ID" NUMBER(11,0),
	"HEADMASTER_ID" NUMBER(11,0),
	"IS_FM_NID_DUPLICATE" NUMBER(11,0) DEFAULT '0',
	"IS_EIGHTEEN" NUMBER(11,0) DEFAULT '0',
	"ID_CARD_PATH" VARCHAR2(255),
	 CONSTRAINT "STD_REGISTRATION_INFO_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_REGISTRATION_INFO_ID_TRG"
            before insert on STD_REGISTRATION_INFO
            for each row
                begin
            if :new.ID is null then
                select std_registration_info_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_REGISTRATION_INFO_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_REGISTRATION_INFO_ID_PK" ON "CRVSPROD_NEW"."STD_REGISTRATION_INFO" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE INDEX "CRVSPROD_NEW"."IDX_STD_REGISTRATION_INFO_EIIN" ON "CRVSPROD_NEW"."STD_REGISTRATION_INFO" ("EIIN")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;

COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.NATIONALITY IS '1=বাংলাদেশি,2=অন্যান্য';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.RELIGION IS '1=ইসলাম,2=হিন্দু,3=বৌদ্ধ,4=খ্রিষ্টান,5=Not a believer,6=Refuse to disclose,7=অন্যান্য';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.REGISTER_CLASS IS '6=৬ষ্ঠ,7=৭ম,8=৮ম,9=৯ম,5=10ম ,11=১১শ,12=১২শ';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.MARITAL_STATUS IS '1=অবিবাহিত ,2=বিবাহিত ,3=বিধবা / বিপত্নীক,4=স্বামী-স্ত্রী পৃথক বসবাস ,5=তালাকপ্রাপ্ত / বিবাহ বিচ্ছেদ';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.IS_DISABILITY IS '1=yes,0=no';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.DISABILITYTYPE IS '1= বাক প্রতিবন্ধী ,2= দৃষ্টি প্রতিবন্ধী ,3= শ্রবন প্রতিবন্ধী,4= শারীরিক প্রতিবন্ধী,5= মানসিক প্রতিবন্ধী,6= সমস্যা নেই ';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.BLOOD_GROUP IS '1=A+ ,2=A-,3=B+,4=B-,5=AB+,6=AB-,7=O+ ,8=O-';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.SMALL_ETHNIC_GROUP IS '1=yes,0=no';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.SMALL_ETHNIC_GROUP_NAME IS '1=সাওতাল,2=চাকমা,3=গারো,4=হাজং,5=চাক,6=কুকি,7=খেয়া,8=বম,9=মারমা,10=ত্রিপুরা,11=খাসিয়া,12=মনিপুরী,13=অন্যান্য,';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.RELATIONSHIP_WITH_GUARDIAN IS '1=দাদা ,2=দাদি,3=ভাই ,4=বোন ,5= চাচা ,6=নানা ,7=নানী ,8=মামা,9=ফুফু ,10=খালা ,11=চাচাতো ভাই,12=মামাতো ভাই,13=চাচাতো বোন,14=মামাতো বোন,15=আইনগত';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.CERTIFICATION_STATUS IS 'yes=2,no=1';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.ID_CARD_GENERATE_STATUS IS '0=not generate id card,1=generated id card';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.FM_NID_FOUND_STATUS IS '0=not found,1=found';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.STD_BIRTH_REG_NO_STATUS IS '0=pending,1=Verified,2=invalid';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.UID_STATUS IS '0=pending,1=Verified,2=invalid';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.MOTHER_NID_STATUS IS '0=pending,1=Verified,2=invalid';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.FATHER_NID_STATUS IS '0=pending,1=Verified,2=invalid';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.GUARDIAN_NID_STATUS IS '0=pending,1=Verified,2=invalid';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.TEMP_STATUS IS '1=for next operation,0=not ready yet';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.STATUS IS '0=pending,1=Verified,2=invalid response,3=Mother and Father NID not equal to 17 or 10 digit,4=ORG name bangla and ORG name english null,5=invalid BRN';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.BRN_FATHER_NAME_EN_STATUS IS '0=pending; 1 = verified';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.BRN_FATHER_NAME_BN_STATUS IS '0=pending; 1 = verified';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.BRN_MOTHER_NAME_EN_STATUS IS '0=pending; 1 = verified';
COMMENT ON COLUMN CRVSPROD_NEW.STD_REGISTRATION_INFO.BRN_MOTHER_NAME_BN_STATUS IS '0=pending; 1 = verified';

CREATE TABLE "CRVSPROD_NEW"."STD_REGISTRATION_INFO_2ND"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"EIIN" VARCHAR2(6) NOT NULL ENABLE,
	"REGISTRATION_YEAR" VARCHAR2(4),
	"STD_CRVS_ID" VARCHAR2(15),
	"UID" VARCHAR2(10),
	"FULLNAME_BANGLA" VARCHAR2(150),
	"FULLNAME_ENGLISH" VARCHAR2(100),
	"BIN_BRN" VARCHAR2(17),
	"DOB" DATE,
	"GENDER" NUMBER(10,0),
	"NATIONALITY" NUMBER(3,0),
	"OTHER_NATIONALITY" VARCHAR2(20),
	"RELIGION" VARCHAR2(2),
	"REGISTER_CLASS" NUMBER(3,0),
	"ACADEMIC_ROLL_NO" VARCHAR2(10),
	"MARITAL_STATUS" VARCHAR2(1),
	"IS_DISABILITY" VARCHAR2(2),
	"DISABILITYTYPE" VARCHAR2(2),
	"BLOOD_GROUP" VARCHAR2(1),
	"SMALL_ETHNIC_GROUP" VARCHAR2(2),
	"SMALL_ETHNIC_GROUP_NAME" NUMBER(10,0),
	"BIRTHPLACE" VARCHAR2(15),
	"MOTHER_NID" VARCHAR2(17),
	"MOTHER_UBRN" VARCHAR2(17),
	"MOTHER_DATE_OF_BIRTH" DATE,
	"MOTHERNAME_BANGLA" VARCHAR2(150),
	"MOTHERNAME_ENGLISH" VARCHAR2(150),
	"MOTHER_MOBILE_NO" VARCHAR2(11),
	"MOTHER_PROFESSION" VARCHAR2(30),
	"MOTHER_DEATH_DATE" VARCHAR2(4),
	"FATHER_NID" VARCHAR2(17),
	"FATHER_UBRN" VARCHAR2(17),
	"FATHER_DATE_OF_BIRTH" DATE,
	"FATHERNAME_BANGLA" VARCHAR2(150),
	"FATHERNAME_ENGLISH" VARCHAR2(150),
	"FATHER_MOBILE_NO" VARCHAR2(11),
	"FATHER_PROFESSION" VARCHAR2(30),
	"FATHER_DEATH_DATE" VARCHAR2(4),
	"PRESENTDIVISIONID" VARCHAR2(35),
	"PRESENTDISTRICTID" VARCHAR2(35),
	"PRESENTTHANAID" VARCHAR2(35),
	"PRESENT_CITY_CORPORATION" VARCHAR2(35),
	"PRESENTUNIONID" VARCHAR2(35),
	"PRESENTAREAID" VARCHAR2(35),
	"PRESENT_ADDRESS" VARCHAR2(150),
	"PRESENTHOUSEHOLDNO" VARCHAR2(255),
	"PRESENT_POST_OFFICE" VARCHAR2(150),
	"PRESENTPOSTCODE" VARCHAR2(20),
	"PERMANENETDIVISIONID" VARCHAR2(35),
	"PERMANENTDISTTICTID" VARCHAR2(35),
	"PERMANENTTHANAID" VARCHAR2(35),
	"PERMANENT_CITY_CORPORATION" VARCHAR2(150),
	"PERMANENTUNIONID" VARCHAR2(35),
	"PERMANENTAREAID" VARCHAR2(35),
	"PERMANENT_ADDRESS" VARCHAR2(150),
	"PERMANENTHOUSEHOLDNO" VARCHAR2(150),
	"PERMANENT_POST_OFFICE" VARCHAR2(100),
	"PERMANENTPOSTCODE" VARCHAR2(100),
	"GUARDIAN_NID" VARCHAR2(17),
	"GUARDIAN_NAME" VARCHAR2(150),
	"GUARDIAN_DATE_OF_BIRTH" DATE,
	"GUARDIAN_PROFESSION" VARCHAR2(30),
	"GUARDIAN_SIG_DATE" VARCHAR2(30),
	"RELATIONSHIP_WITH_GUARDIAN" NUMBER(10,0),
	"GUARDIAN_MOBILE" VARCHAR2(11),
	"CERTIFICATION_STATUS" NUMBER(3,0),
	"ID_CARD_GENERATE_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"IMAGE_FOLDER_PATH" VARCHAR2(255) NOT NULL ENABLE,
	"STD_PROFILE_IMAGE" VARCHAR2(100),
	"FM_NID_FOUND_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"STD_BIRTH_REG_NO_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"UID_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"MOTHER_NID_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"FATHER_NID_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"GUARDIAN_NID_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"TEMP_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"TAB_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"BRN_FATHER_NAME_EN_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"BRN_FATHER_NAME_BN_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"BRN_MOTHER_NAME_EN_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"BRN_MOTHER_NAME_BN_STATUS" NUMBER(3,0) NOT NULL ENABLE,
	"IS_CLICKED_BOARD_RESPONSE_CONFIRM" CHAR(1) NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"ORG_NAME_BANGLA" VARCHAR2(255),
	"ORG_NAME_ENGLISH" VARCHAR2(255),
	"WRITE_BIRTH_PLACE" VARCHAR2(255),
	"CRVS_MOTHER_NAME_BN" VARCHAR2(255),
	"CRVS_MOTHER_NAME_EN" VARCHAR2(255),
	"CRVS_FATHER_NAME_BN" VARCHAR2(255),
	"CRVS_FATHER_NAME_EN" VARCHAR2(255),
	"TEACHER_ID" NUMBER(11,0),
	"HEADMASTER_ID" NUMBER(11,0),
	"IS_FM_NID_DUPLICATE" NUMBER(11,0),
	"IS_EIGHTEEN" NUMBER(11,0)
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."STD_REG_INFO_SHYLET" ("ID", "EIIN", "REGISTRATION_YEAR", "STD_CRVS_ID", "UID", "FULLNAME_BANGLA", "FULLNAME_ENGLISH", "BIN_BRN", "DOB", "GENDER", "NATIONALITY", "OTHER_NATIONALITY", "RELIGION", "REGISTER_CLASS", "ACADEMIC_ROLL_NO", "MARITAL_STATUS", "IS_DISABILITY", "DISABILITYTYPE", "BLOOD_GROUP", "SMALL_ETHNIC_GROUP", "SMALL_ETHNIC_GROUP_NAME", "BIRTHPLACE", "MOTHER_NID", "MOTHER_UBRN", "MOTHER_DATE_OF_BIRTH", "MOTHERNAME_BANGLA", "MOTHERNAME_ENGLISH", "MOTHER_MOBILE_NO", "MOTHER_PROFESSION", "MOTHER_DEATH_DATE", "FATHER_NID", "FATHER_UBRN", "FATHER_DATE_OF_BIRTH", "FATHERNAME_BANGLA", "FATHERNAME_ENGLISH", "FATHER_MOBILE_NO", "FATHER_PROFESSION", "FATHER_DEATH_DATE", "PRESENTDIVISIONID", "PRESENTDISTRICTID", "PRESENTTHANAID", "PRESENT_CITY_CORPORATION", "PRESENTUNIONID", "PRESENTAREAID", "PRESENT_ADDRESS", "PRESENTHOUSEHOLDNO", "PRESENT_POST_OFFICE", "PRESENTPOSTCODE", "PERMANENETDIVISIONID", "PERMANENTDISTTICTID", "PERMANENTTHANAID", "PERMANENT_CITY_CORPORATION", "PERMANENTUNIONID", "PERMANENTAREAID", "PERMANENT_ADDRESS", "PERMANENTHOUSEHOLDNO", "PERMANENT_POST_OFFICE", "PERMANENTPOSTCODE", "GUARDIAN_NID", "GUARDIAN_NAME", "GUARDIAN_DATE_OF_BIRTH", "GUARDIAN_PROFESSION", "GUARDIAN_SIG_DATE", "RELATIONSHIP_WITH_GUARDIAN", "GUARDIAN_MOBILE", "CERTIFICATION_STATUS", "ID_CARD_GENERATE_STATUS", "IMAGE_FOLDER_PATH", "STD_PROFILE_IMAGE", "FM_NID_FOUND_STATUS", "STD_BIRTH_REG_NO_STATUS", "UID_STATUS", "MOTHER_NID_STATUS", "FATHER_NID_STATUS", "GUARDIAN_NID_STATUS", "TEMP_STATUS", "TAB_STATUS", "STATUS", "BRN_FATHER_NAME_EN_STATUS", "BRN_FATHER_NAME_BN_STATUS", "BRN_MOTHER_NAME_EN_STATUS", "BRN_MOTHER_NAME_BN_STATUS", "IS_CLICKED_BOARD_RESPONSE_CONFIRM", "CREATED_BY", "UPDATED_BY", "CREATED_AT", "UPDATED_AT", "ORG_NAME_BANGLA", "ORG_NAME_ENGLISH", "WRITE_BIRTH_PLACE", "CRVS_MOTHER_NAME_BN", "CRVS_MOTHER_NAME_EN", "CRVS_FATHER_NAME_BN", "CRVS_FATHER_NAME_EN", "TEACHER_ID", "HEADMASTER_ID", "IS_FM_NID_DUPLICATE", "IS_EIGHTEEN") AS
  SELECT
	A.ID,
	A.EIIN,
	A.REGISTRATION_YEAR,
	A.STD_CRVS_ID,
	A."UID",
	A.FULLNAME_BANGLA,
	A.FULLNAME_ENGLISH,
	A.BIN_BRN,
	A.DOB,
	A.GENDER,
	A.NATIONALITY,
	A.OTHER_NATIONALITY,
	A.RELIGION,
	A.REGISTER_CLASS,
	A.ACADEMIC_ROLL_NO,
	A.MARITAL_STATUS,
	A.IS_DISABILITY,
	A.DISABILITYTYPE,
	A.BLOOD_GROUP,
	A.SMALL_ETHNIC_GROUP,
	A.SMALL_ETHNIC_GROUP_NAME,
	A.BIRTHPLACE,
	A.MOTHER_NID,
	A.MOTHER_UBRN,
	A.MOTHER_DATE_OF_BIRTH,
	A.MOTHERNAME_BANGLA,
	A.MOTHERNAME_ENGLISH,
	A.MOTHER_MOBILE_NO,
	A.MOTHER_PROFESSION,
	A.MOTHER_DEATH_DATE,
	A.FATHER_NID,
	A.FATHER_UBRN,
	A.FATHER_DATE_OF_BIRTH,
	A.FATHERNAME_BANGLA,
	A.FATHERNAME_ENGLISH,
	A.FATHER_MOBILE_NO,
	A.FATHER_PROFESSION,
	A.FATHER_DEATH_DATE,
	A.PRESENTDIVISIONID,
	A.PRESENTDISTRICTID,
	A.PRESENTTHANAID,
	A.PRESENT_CITY_CORPORATION,
	A.PRESENTUNIONID,
	A.PRESENTAREAID,
	A.PRESENT_ADDRESS,
	A.PRESENTHOUSEHOLDNO,
	A.PRESENT_POST_OFFICE,
	A.PRESENTPOSTCODE,
	A.PERMANENETDIVISIONID,
	A.PERMANENTDISTTICTID,
	A.PERMANENTTHANAID,
	A.PERMANENT_CITY_CORPORATION,
	A.PERMANENTUNIONID,
	A.PERMANENTAREAID,
	A.PERMANENT_ADDRESS,
	A.PERMANENTHOUSEHOLDNO,
	A.PERMANENT_POST_OFFICE,
	A.PERMANENTPOSTCODE,
	A.GUARDIAN_NID,
	A.GUARDIAN_NAME,
	A.GUARDIAN_DATE_OF_BIRTH,
	A.GUARDIAN_PROFESSION,
	A.GUARDIAN_SIG_DATE,
	A.RELATIONSHIP_WITH_GUARDIAN,
	A.GUARDIAN_MOBILE,
	A.CERTIFICATION_STATUS,
	A.ID_CARD_GENERATE_STATUS,
	A.IMAGE_FOLDER_PATH,
	A.STD_PROFILE_IMAGE,
	A.FM_NID_FOUND_STATUS,
	A.STD_BIRTH_REG_NO_STATUS,
	A.UID_STATUS,
	A.MOTHER_NID_STATUS,
	A.FATHER_NID_STATUS,
	A.GUARDIAN_NID_STATUS,
	A.TEMP_STATUS,
	A.TAB_STATUS,
	A.STATUS,
	A.BRN_FATHER_NAME_EN_STATUS,
	A.BRN_FATHER_NAME_BN_STATUS,
	A.BRN_MOTHER_NAME_EN_STATUS,
	A.BRN_MOTHER_NAME_BN_STATUS,
	A.IS_CLICKED_BOARD_RESPONSE_CONFIRM,
	A.CREATED_BY,
	A.UPDATED_BY,
	A.CREATED_AT,
	A.UPDATED_AT,
	A.ORG_NAME_BANGLA,
	A.ORG_NAME_ENGLISH,
	A.WRITE_BIRTH_PLACE,
	A.CRVS_MOTHER_NAME_BN,
	A.CRVS_MOTHER_NAME_EN,
	A.CRVS_FATHER_NAME_BN,
	A.CRVS_FATHER_NAME_EN,
	A.TEACHER_ID,
	A.HEADMASTER_ID,
	A.IS_FM_NID_DUPLICATE,
	A.IS_EIGHTEEN
FROM
	STD_REGISTRATION_INFO A
INNER JOIN INSTITUTES ON A.EIIN = INSTITUTES.EIIN
WHERE
	A.EIIN = INSTITUTES.EIIN
	AND INSTITUTES.DIVISION_ID = 60
ORDER BY
	A.ID ASC;
;

CREATE TABLE "CRVSPROD_NEW"."STD_SUBJECT_WISE_RESULTS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"SCAI_ID" NUMBER(19,0) NOT NULL ENABLE,
	"CLASS_ID" NUMBER(10,0) NOT NULL ENABLE,
	"TOTAL_NUMBER" VARCHAR2(3),
	"GRADE_POINTS" VARCHAR2(5),
	"EXAM_YEAR" VARCHAR2(4),
	"SUBJECT_ID" NUMBER(10,0),
	"OPTIONAL_SUBJECT_STATUS" NUMBER(3,0),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "STD_SUBJECT_WISE_RESULTS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STD_SUBJECT_WISE_RESULTS_ID_TR"
            before insert on STD_SUBJECT_WISE_RESULTS
            for each row
                begin
            if :new.ID is null then
                select std_subject_wise_results_id_se.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STD_SUBJECT_WISE_RESULTS_ID_TR" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."STD_SUBJECT_WISE_RESULTS_ID_PK" ON "CRVSPROD_NEW"."STD_SUBJECT_WISE_RESULTS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
;

CREATE TABLE "CRVSPROD_NEW"."STUDENT_ID_CARD_JOBS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"USER_ID" VARCHAR2(255) NOT NULL ENABLE,
	"GENERATE_TYPE" VARCHAR2(255) NOT NULL ENABLE,
	"ENTRY_DATE" DATE,
	"DIVISION_ID" NUMBER(10,0),
	"DISTRICT_ID" NUMBER(10,0),
	"THANA_ID" NUMBER(10,0),
	"UNION_ID" NUMBER(10,0),
	"EIIN" NUMBER(10,0),
	"STD_CLASS_ID" NUMBER(10,0),
	"TOTAL_PROCESS" NUMBER(10,0) DEFAULT '0' NOT NULL ENABLE,
	"PROCESS_COMPLETED" NUMBER(10,0) DEFAULT '0' NOT NULL ENABLE,
	"STATUS" VARCHAR2(5) DEFAULT 'a' NOT NULL ENABLE,
	"IS_COMPLETE" CHAR(1) DEFAULT '0' NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	"ACADEMIC_YEAR" VARCHAR2(4),
	"STUDENT_ID" VARCHAR2(4000)
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."STUDENT_ID_CARD_JOBS_ID_TRG" BEFORE INSERT ON "CRVSPROD_NEW"."STUDENT_ID_CARD_JOBS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select student_id_card_jobs_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."STUDENT_ID_CARD_JOBS_ID_TRG" ENABLE;
;

CREATE TABLE "CRVSPROD_NEW"."SUBJECTS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"CLASS_ID" NUMBER(10,0),
	"NAME" VARCHAR2(150),
	"CODE" VARCHAR2(6),
	"TOTAL_MARK" VARCHAR2(3),
	"INSTITUTE_TYPE_ID" NUMBER(10,0) NOT NULL ENABLE,
	"SUBJECT_TYPE" NUMBER(10,0) DEFAULT '1' NOT NULL ENABLE,
	"GROUP_TYPE" NUMBER(10,0),
	"EXAM_ID" NUMBER(10,0),
	"SUB_GROUP" NUMBER(10,0),
	"STATUS" NUMBER(3,0) DEFAULT '1' NOT NULL ENABLE,
	"CREATED_BY" VARCHAR2(255),
	"UPDATED_BY" VARCHAR2(255),
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "SUBJECTS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."SUBJECTS_ID_TRG"
            before insert on SUBJECTS
            for each row
                begin
            if :new.ID is null then
                select subjects_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."SUBJECTS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."SUBJECTS_ID_PK" ON "CRVSPROD_NEW"."SUBJECTS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

COMMENT ON COLUMN CRVSPROD_NEW.SUBJECTS.SUBJECT_TYPE IS '1=আবশ্যিক বিষয় 2=ঐচ্ছিক বিষয়,3= নৈর্বাচনিক বিষয়';
COMMENT ON COLUMN CRVSPROD_NEW.SUBJECTS.GROUP_TYPE IS '1= মানবিক , 2= বিজ্ঞান , 3=ব্যবসায় শিক্ষা, 4= ইসলাম শিক্ষা , 5=গার্হস্থ্য বিজ্ঞান ,6= সংগীত ';
COMMENT ON COLUMN CRVSPROD_NEW.SUBJECTS.SUB_GROUP IS 'for option&elective subject which subject are show in same dropdown list';

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."TEST" ("THANA_ID", "DIVISION_NAME", "DISTRICT_NAME", "THANA_NAME", "EIIN", "INSTITUTE_NAME_NEW", "CREATED_BY", "ENTRY_USER_NAME", "USER_ROLES", "TOTAL_ENTRY") AS
  (SELECT B.THANA_ID,
           B.DIVISION_NAME,
           B.DISTRICT_NAME,
           B.THANA_NAME,
           A.EIIN,
           B.INSTITUTE_NAME_NEW,
           A.CREATED_BY,
           (CASE
               WHEN C.NAME IS NULL THEN 'Head of the Institution-Admin'
               ELSE C.NAME
            END)
              || ' ('||A.CREATED_BY||')' ENTRY_USER_NAME,
           (CASE WHEN C.USER_ROLES IS NULL THEN 1 ELSE C.USER_ROLES END)
              USER_ROLES,
           total_entry
      FROM (  SELECT A.EIIN, A.CREATED_BY, COUNT (A.BIN_BRN) total_entry
                FROM STD_REGISTRATION_INFO a
                WHERE  TO_CHAR (A.CREATED_AT, 'YYYY-MM-DD') BETWEEN '2022-01-01'  AND '2022-05-31'
            GROUP BY A.EIIN, A.CREATED_BY) A,
           (SELECT U.ID,
                   U.EIIN,
                   U.NAME,
                   U.USER_ROLES
              FROM INSTITUTES_USER U) C,
           (SELECT DD.DIVISION_NAME,
                   I.DISTRICT_ID,
                   D.DISTRICT_NAME,
                   I.THANA_ID,
                   T.THANA_NAME,
                   I.EIIN,
                   I.INSTITUTE_NAME_NEW
              FROM INSTITUTES I,
                   DISTRICTS D,
                   THANAS T,
                   DIVISIONS DD
             WHERE     I.DIVISION_ID = DD.DIVISION_ID(+)
                   AND I.DISTRICT_ID = D.DISTRICT_ID(+)
                   AND I.THANA_ID = T.THANA_ID(+)
                   AND I.STOP IS NULL) B
     WHERE     A.CREATED_BY = C.ID(+)
           AND A.EIIN = C.EIIN(+)
           AND A.EIIN = B.EIIN(+));
;

CREATE TABLE "CRVSPROD_NEW"."THANAS"
   (	"THANA_ID" VARCHAR2(15) NOT NULL ENABLE,
	"DISTRICT_ID" VARCHAR2(15) NOT NULL ENABLE,
	"THANA_ID_NEW" NUMBER(10,0),
	"THANA_CODE" VARCHAR2(50),
	"THANA_NAME" VARCHAR2(100),
	"THANA_NAMEB" VARCHAR2(150),
	"AREA_STATUS" VARCHAR2(50),
	"DISTRICT_HQ" VARCHAR2(50),
	"M_STATUS" VARCHAR2(50),
	"SEQEAP" VARCHAR2(50),
	"POP07" VARCHAR2(50),
	"SEAT_NO" VARCHAR2(50),
	"DURGAM" VARCHAR2(50),
	"STAT" VARCHAR2(50),
	"MPO_APP_NOT_THANA" NUMBER(10,0),
	"UICTTRCE" NUMBER(10,0),
	"UITRCE_SUPPORT_THANA" NUMBER(10,0),
	"UICT_SUPPORT_THANA" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE INDEX "CRVSPROD_NEW"."IDX_THANA_DISTRICT_THANA_ID" ON "CRVSPROD_NEW"."THANAS" ("THANA_ID", "DISTRICT_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."THANAWISE_ENTRY" ("DIVISION_NAME", "DISTRICT_NAME", "THANA_NAME", "STUDENT20", "STUDENT21") AS
  (  SELECT c.division_name,
             d.district_name,
             e.thana_name,
             SUM (NVL (b.total_students, 0)) student20,
             SUM (NVL (a.student21, 0)) student21
        FROM ENTERED_STUDENT a,
             institutes b,
             divisions c,
             districts d,
             thanas e
       WHERE     b.eiin = a.eiin(+)
             AND b.division_id = c.DIVISION_ID(+)
             AND b.DISTRICT_ID = d.DISTRICT_ID(+)
             AND b.THANA_ID = e.THANA_ID(+)
    GROUP BY c.division_name, d.district_name, e.thana_name);
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."UIDLIST" ("DIVISION_NAME", "DISTRICT_NAME", "THANA_NAME", "EIIN", "INSTITUTE_NAME_NEW", "UID", "BIN_BRN", "FULLNAME_BANGLA", "FULLNAME_ENGLISH", "MOTHERNAME_BANGLA", "MOTHERNAME_ENGLISH", "FATHERNAME_BANGLA", "FATHERNAME_ENGLISH", "CREATED_AT") AS
  SELECT c.division_name,
           d.district_name,
           e.thana_name,
           A.EIIN,
           F.INSTITUTE_NAME_NEW,
           A."UID",
           A.BIN_BRN,
           A.FULLNAME_BANGLA,
           A.FULLNAME_ENGLISH,
           A.MOTHERNAME_BANGLA,
           A.MOTHERNAME_ENGLISH,
           A.FATHERNAME_BANGLA,
           A.FATHERNAME_ENGLISH,
					 o.CREATED_AT
      FROM STD_REGISTRATION_INFO A,
           institutes b,
           divisions c,
           districts d,
           thanas e,
					 ARC_ORG_VERIFICATIONS o,
           INSTITUTES F
     WHERE     A."UID" <> '107'
           AND b.eiin = a.eiin(+)
           AND A.EIIN=F.EIIN
           AND b.division_id = c.DIVISION_ID(+)
           AND b.DISTRICT_ID = d.DISTRICT_ID(+)
           AND b.THANA_ID = e.THANA_ID(+)
					 AND o.RES_UBRN = A.BIN_BRN
			ORDER BY o.id DESC;
;

CREATE TABLE "CRVSPROD_NEW"."UNIONS"
   (	"UNION_ID" VARCHAR2(15) NOT NULL ENABLE,
	"THANA_ID" VARCHAR2(15) NOT NULL ENABLE,
	"UNION_ID_NEW" VARCHAR2(50),
	"THANA_ID_NEW" VARCHAR2(50),
	"UNION_CODE" VARCHAR2(50),
	"UNION_NAME" VARCHAR2(100),
	"UNION_NAMEB" VARCHAR2(150),
	"ENTERED_BY" VARCHAR2(50),
	"ENTRY_TIMESTAMP" DATE,
	"SIDR_STATUS" VARCHAR2(50),
	"LAST_UPDATED_BY" VARCHAR2(50),
	"LAST_UPDATED_TIMESTAMP" DATE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE INDEX "CRVSPROD_NEW"."IDX_UNION_THANA_UNION_ID" ON "CRVSPROD_NEW"."UNIONS" ("THANA_ID", "UNION_ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSIDX" ;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."UPZILAWISE_BIIL_PAYMENT" ("EIIN", "INSTITUTE_NAME_NEW", "ID", "USER_ROLES", "DIVISION_NAME", "DISTRICT_NAME", "THANA_NAME", "TOTAL_ENTRY", "ENTRY_USER_NAME") AS
  (SELECT "INSTITUTE_USERS"."EIIN",
           "INSTITUTES"."INSTITUTE_NAME_NEW",
           "INSTITUTE_USERS"."ID",
           "INSTITUTE_USERS"."USER_ROLES",
           "DIVISIONS"."DIVISION_NAME",
           "DISTRICTS"."DISTRICT_NAME",
           "THANAS"."THANA_NAME",
           (SELECT COUNT (in_reg_info.ID)
              FROM    STD_CURRENT_ACADEMIC_INFO in_curr_info
                   JOIN
                      STD_REGISTRATION_INFO in_reg_info
                   ON in_reg_info.id = in_curr_info.SRI_ID
             WHERE     in_reg_info.EIIN = institute_users.eiin
                   AND in_reg_info.created_by = institute_users.id
                   AND in_curr_info.ACADEMIC_YEAR = 2021
                   AND TO_CHAR (in_reg_info.CREATED_AT, 'YYYY-MM-DD') BETWEEN '2022-01-01'
                                                                          AND '2022-05-31')
              AS total_entry,
           (CASE
               WHEN institute_users.user_roles = 2
               THEN
                  (SELECT name || ' ( ' || id || ' ) '
                     FROM institutes_user
                    WHERE eiin = institute_users.eiin
                          AND id = institute_users.id                                       FETCH FIRST 1 ROWS ONLY
) ELSE 'Head of the Institution-Admin (' || institute_users.id || ' )'
END
) AS entry_user_name
FROM
"INSTITUTE_USERS"
INNER JOIN "INSTITUTES" ON "INSTITUTES"."EIIN" = "INSTITUTE_USERS"."EIIN"
INNER JOIN "DIVISIONS" ON "DIVISIONS"."DIVISION_ID" = "INSTITUTES"."DIVISION_ID"
INNER JOIN "DISTRICTS" ON "DISTRICTS"."DISTRICT_ID" = "INSTITUTES"."DISTRICT_ID"
INNER JOIN "THANAS" ON "THANAS"."THANA_ID" = "INSTITUTES"."THANA_ID");
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."UPZILAWISE_BIIL_PAYMENT1ST" ("THANA_ID", "DIVISION_NAME", "DISTRICT_NAME", "THANA_NAME", "EIIN", "INSTITUTE_NAME_NEW", "CREATED_BY", "ENTRY_USER_NAME", "USER_ROLES", "TOTAL_ENTRY") AS
  (SELECT B.THANA_ID,
           B.DIVISION_NAME,
           B.DISTRICT_NAME,
           B.THANA_NAME,
           A.EIIN,
           B.INSTITUTE_NAME_NEW,
           A.CREATED_BY,
           (CASE
               WHEN C.NAME IS NULL THEN 'Head of the Institution-Admin'
               ELSE C.NAME
            END)
              || ' ('||A.CREATED_BY||')' ENTRY_USER_NAME,
           (CASE WHEN C.USER_ROLES IS NULL THEN 1 ELSE C.USER_ROLES END)
              USER_ROLES,
           total_entry
      FROM (  SELECT A.EIIN, A.CREATED_BY, COUNT (A.BIN_BRN) total_entry
                FROM STD_REGISTRATION_INFO a
                WHERE  TO_CHAR (A.CREATED_AT, 'YYYY-MM-DD') BETWEEN '2022-01-01'  AND '2022-05-31'
            GROUP BY A.EIIN, A.CREATED_BY) A,
           (SELECT U.ID,
                   U.EIIN,
                   U.NAME,
                   U.USER_ROLES
              FROM INSTITUTES_USER U) C,
           (SELECT DD.DIVISION_NAME,
                   I.DISTRICT_ID,
                   D.DISTRICT_NAME,
                   I.THANA_ID,
                   T.THANA_NAME,
                   I.EIIN,
                   I.INSTITUTE_NAME_NEW
              FROM INSTITUTES I,
                   DISTRICTS D,
                   THANAS T,
                   DIVISIONS DD
             WHERE     I.DIVISION_ID = DD.DIVISION_ID(+)
                   AND I.DISTRICT_ID = D.DISTRICT_ID(+)
                   AND I.THANA_ID = T.THANA_ID(+)
                   AND I.STOP IS NULL) B
     WHERE     A.CREATED_BY = C.ID(+)
           AND A.EIIN = C.EIIN(+)
           AND A.EIIN = B.EIIN(+));
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."UPZILAWISE_BIIL_PAYMENT2ND" ("THANA_ID", "DIVISION_NAME", "DISTRICT_NAME", "THANA_NAME", "EIIN", "INSTITUTE_NAME_NEW", "CREATED_BY", "ENTRY_USER_NAME", "USER_ROLES", "TOTAL_ENTRY") AS
  SELECT
	B.THANA_ID,
	B.DIVISION_NAME,
	B.DISTRICT_NAME,
	B.THANA_NAME,
	A.EIIN,
	B.INSTITUTE_NAME_NEW,
	A.CREATED_BY,
	( CASE WHEN C.NAME IS NULL THEN 'Head of the Institution-Admin' ELSE C.NAME END ) || ' (' || A.CREATED_BY || ')' ENTRY_USER_NAME,
	( CASE WHEN C.USER_ROLES IS NULL THEN 1 ELSE C.USER_ROLES END ) USER_ROLES,
	total_entry
FROM
	(
	SELECT
		A.EIIN,
		A.CREATED_BY,
		COUNT( A.BIN_BRN ) total_entry
	FROM
		STD_REGISTRATION_INFO_2ND A
	WHERE
		TO_CHAR( A.CREATED_AT, 'YYYY-MM-DD' ) BETWEEN '2022-06-01'
		AND '2023-05-31'
	GROUP BY
		A.EIIN,
		A.CREATED_BY
	) A,
	( SELECT U.ID, U.EIIN, U.NAME, U.USER_ROLES FROM INSTITUTES_USER U ) C,
	(
	SELECT
		DD.DIVISION_NAME,
		I.DISTRICT_ID,
		D.DISTRICT_NAME,
		I.THANA_ID,
		T.THANA_NAME,
		I.EIIN,
		I.INSTITUTE_NAME_NEW
	FROM
		INSTITUTES I,
		DISTRICTS D,
		THANAS T,
		DIVISIONS DD
	WHERE
		I.DIVISION_ID = DD.DIVISION_ID ( + )
		AND I.DISTRICT_ID = D.DISTRICT_ID ( + )
		AND I.THANA_ID = T.THANA_ID ( + )
		AND I.STOP IS NULL
	) B
WHERE
	A.CREATED_BY = C.ID ( + )
	AND A.EIIN = C.EIIN ( + )
	AND A.EIIN = B.EIIN ( + )
	ORDER BY B.DIVISION_NAME ASC;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."UPZILAWISE_DATAENTRY_SUMMARY" ("DIVISION_ID", "DIVISION_NAME", "DISTRICT_ID", "DISTRICT_NAME", "THANA_ID", "THANA_NAME", "EIIN", "INSTITUTE_NAME_NEW", "TOTAL_STUDENTS", "ENTRY_STUDENT") AS
  SELECT  C.DIVISION_ID,C.DIVISION_NAME,D.DISTRICT_ID,D.DISTRICT_NAME,E.THANA_ID,E.THANA_NAME,A.EIIN,A.INSTITUTE_NAME_NEW,A.TOTAL_STUDENTS,COUNT(B.BIN_BRN) ENTRY_STUDENT
    FROM INSTITUTES A,STD_REGISTRATION_INFO B,DIVISIONS C,DISTRICTS D,THANAS E
WHERE A.EIIN=B.EIIN
AND A.DIVISION_ID=C.DIVISION_ID
AND A.DISTRICT_ID=D.DISTRICT_ID
AND A.THANA_ID=E.THANA_ID
GROUP BY  C.DIVISION_ID,C.DIVISION_NAME,D.DISTRICT_ID,D.DISTRICT_NAME,E.THANA_ID,E.THANA_NAME,A.EIIN,A.INSTITUTE_NAME_NEW,A.TOTAL_STUDENTS
ORDER BY  C.DIVISION_ID,C.DIVISION_NAME,D.DISTRICT_ID,D.DISTRICT_NAME,E.THANA_ID,E.THANA_NAME,A.EIIN,A.INSTITUTE_NAME_NEW;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."UPZILAWISE_DATAENTRY_SUMMARY_FINALALL" ("DIVISION_ID", "DIVISION_NAME", "DISTRICT_ID", "DISTRICT_NAME", "THANA_ID", "THANA_NAME", "EIIN", "INSTITUTE_NAME_NEW", "ENTRY_STUDENT") AS
  SELECT  C.DIVISION_ID,C.DIVISION_NAME,D.DISTRICT_ID,D.DISTRICT_NAME,E.THANA_ID,E.THANA_NAME,A.EIIN,A.INSTITUTE_NAME_NEW,COUNT(B.BIN_BRN) ENTRY_STUDENT
    FROM INSTITUTES A,STD_REGISTRATION_INFO B,DIVISIONS C,DISTRICTS D,THANAS E
WHERE A.EIIN=B.EIIN
AND A.DIVISION_ID=C.DIVISION_ID
AND A.DISTRICT_ID=D.DISTRICT_ID
AND A.THANA_ID=E.THANA_ID
GROUP BY  C.DIVISION_ID,C.DIVISION_NAME,D.DISTRICT_ID,D.DISTRICT_NAME,E.THANA_ID,E.THANA_NAME,A.EIIN,A.INSTITUTE_NAME_NEW
ORDER BY  C.DIVISION_ID,C.DIVISION_NAME,D.DISTRICT_ID,D.DISTRICT_NAME,E.THANA_ID,E.THANA_NAME,A.EIIN,A.INSTITUTE_NAME_NEW;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."UPZILAWISE_DATAENTRY_SUMMARY_UIDFINALALL" ("DIVISION_ID", "DIVISION_NAME", "DISTRICT_ID", "DISTRICT_NAME", "THANA_ID", "THANA_NAME", "EIIN", "INSTITUTE_NAME_NEW", "ENTRY_STUDENT", "UID_OBT") AS
  SELECT C.DIVISION_ID,
             C.DIVISION_NAME,
             D.DISTRICT_ID,
             D.DISTRICT_NAME,
             E.THANA_ID,
             E.THANA_NAME,
             A.EIIN,
             A.INSTITUTE_NAME_NEW,
             COUNT (B.BIN_BRN)     ENTRY_STUDENT,
             count(B."UID") uid_OBT
        FROM INSTITUTES           A,
             STD_REGISTRATION_INFO B,
             DIVISIONS            C,
             DISTRICTS            D,
             THANAS               E
       WHERE     A.EIIN = B.EIIN
             AND A.DIVISION_ID = C.DIVISION_ID
             AND A.DISTRICT_ID = D.DISTRICT_ID
             AND A.THANA_ID = E.THANA_ID
    GROUP BY C.DIVISION_ID,
             C.DIVISION_NAME,
             D.DISTRICT_ID,
             D.DISTRICT_NAME,
             E.THANA_ID,
             E.THANA_NAME,
             A.EIIN,
             A.INSTITUTE_NAME_NEW
    ORDER BY C.DIVISION_ID,
             C.DIVISION_NAME,
             D.DISTRICT_ID,
             D.DISTRICT_NAME,
             E.THANA_ID,
             E.THANA_NAME,
             A.EIIN,
             A.INSTITUTE_NAME_NEW;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "CRVSPROD_NEW"."UPZILAWISE_PAYMENT2ND_SUMMARY" ("DIVISION_NAME", "DISTRICT_NAME", "THANA_ID", "THANA_NAME", "ENTRY", "AMOUNT") AS
  (select Division_name,District_name,thana_id,Thana_name,sum(nvl(TOTAL_ENTRY,0)) ENTRY,(sum(nvl(TOTAL_ENTRY,0))*30) AMOUNT
FROM UPZILAWISE_BIIL_PAYMENT2ND
GROUP BY Division_name,District_name,thana_id,Thana_name
);
;

CREATE TABLE "CRVSPROD_NEW"."USERS"
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255) NOT NULL ENABLE,
	"USERNAME" VARCHAR2(255),
	"EMAIL" VARCHAR2(255),
	"EMAIL_VERIFIED_AT" TIMESTAMP (6),
	"PASSWORD" VARCHAR2(255) NOT NULL ENABLE,
	"REMEMBER_TOKEN" VARCHAR2(100),
	"DIVISION_ID" NUMBER(10,0),
	"DISTRICT_ID" NUMBER(10,0),
	"THANA_ID" NUMBER(10,0),
	"UNION_ID" NUMBER(10,0),
	"CREATED_BY" VARCHAR2(20),
	"UPDATED_BY" VARCHAR2(20),
	"ROLES" NUMBER(3,0) NOT NULL ENABLE,
	"CREATED_AT" TIMESTAMP (6),
	"UPDATED_AT" TIMESTAMP (6),
	 CONSTRAINT "USERS_ID_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE,
	 CONSTRAINT "USERS_USERNAME_UK" UNIQUE ("USERNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE,
	 CONSTRAINT "USERS_EMAIL_UK" UNIQUE ("EMAIL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "CRVSPROD_NEW"."USERS_ID_TRG"
            before insert on USERS
            for each row
                begin
            if :new.ID is null then
                select users_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/
ALTER TRIGGER "CRVSPROD_NEW"."USERS_ID_TRG" ENABLE;

CREATE UNIQUE INDEX "CRVSPROD_NEW"."USERS_ID_PK" ON "CRVSPROD_NEW"."USERS" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."USERS_USERNAME_UK" ON "CRVSPROD_NEW"."USERS" ("USERNAME")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;
  CREATE UNIQUE INDEX "CRVSPROD_NEW"."USERS_EMAIL_UK" ON "CRVSPROD_NEW"."USERS" ("EMAIL")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "CRVSDATA" ;

COMMENT ON COLUMN CRVSPROD_NEW.USERS.ROLES IS '1=Super Admin,2 = admin';

CREATE SEQUENCE CRVSPROD_NEW.AC_GROUPS_GROUP_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.API_CREDENTIALS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.API_EXPOSE_USERS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.ARC_NID_VERIFICATIONS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.ARC_ORG_STUDENT_RESPONSES_ID_S INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.ARC_ORG_VERIFICATIONS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.ARC_STD_AVE_ATT_DATA_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.ARC_STD_CURRENT_ACADEMIC_INFO_ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.ARC_STD_PREVIOUS_EXAM_RESULTS_ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.ARC_STD_REGISTRATION_INFO_ID_S INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.ARC_STD_SUBJECT_WISE_RESULTS_I INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.BOARDS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.CRVS_IDS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.DISTRICT_WISE_BOARDS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.EDUCATIONS_LEVELS_EDUCATION_LE INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.EDUCATION_BOARD_RESPONSES_ID_S INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.EDUCATION_DEGREES_EDUCATION_DE INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.FAILED_JOBS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.GEOGRAPHICAL_AREA_GEOGRAPHICAL INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.INSTITUTES_INSTITUTE_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.INSTITUTES_TYPES_INSTITUTE_TYP INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.INSTITUTES_USER_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.INSTITUTE_TEACHERS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.JOBS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.LOOKUP_AREA_STATUS1_AREA_STATU INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.MANAGEMENTS_MANAGEMENT_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.MIGRATIONS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.PERMISSIONS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.ROLES_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_ACHIEVEMENTS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_ATTD_WORKING_DAY_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_ATTENDANCES_CHILD_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_ATTENDANCES_PARENT_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_AVERAGE_ATTENDANCE_DATA_ID INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_CATEGORYS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_CURRENT_ACADEMIC_INFO_ID_S INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_EXAM_DETAILS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_EXTRA_CO_CURRICULAR_EXAM_I INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_GRADING_SYSTEMS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_HOBBYS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_MIGRATION_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_PARENT_OCCUPATIONS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_PARTICIPATIONS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_PREVIOUS_EXAM_RESULTS_ID_S INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_REGISTRATION_INFO_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STD_SUBJECT_WISE_RESULTS_ID_SE INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.STUDENT_ID_CARD_JOBS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.SUBJECTS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE CRVSPROD_NEW.USERS_ID_SEQ INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;