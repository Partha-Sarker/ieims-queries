

-- ----------------------------
-- Primary Key structure for table AC_GROUPS
-- ----------------------------
ALTER TABLE "CRVSPROD"."AC_GROUPS" ADD CONSTRAINT "AC_GROUPS_GROUP_ID_PK" PRIMARY KEY ("GROUP_ID");

-- ----------------------------
-- Checks structure for table AC_GROUPS
-- ----------------------------
ALTER TABLE "CRVSPROD"."AC_GROUPS" ADD CONSTRAINT "SYS_C0021916" CHECK ("GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table AC_GROUPS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."AC_GROUPS_GROUP_ID_TRG" BEFORE INSERT ON "CRVSPROD"."AC_GROUPS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.GROUP_ID is null then
                select ac_groups_GROUP_ID_seq.nextval into :new.GROUP_ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table API_CREDENTIALS
-- ----------------------------
ALTER TABLE "CRVSPROD"."API_CREDENTIALS" ADD CONSTRAINT "API_CREDENTIALS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table API_CREDENTIALS
-- ----------------------------
ALTER TABLE "CRVSPROD"."API_CREDENTIALS" ADD CONSTRAINT "AP_CREDENTIAL_ORGANIZATIO_UK" UNIQUE ("ORGANIZATION") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table API_CREDENTIALS
-- ----------------------------
ALTER TABLE "CRVSPROD"."API_CREDENTIALS" ADD CONSTRAINT "SYS_C0021923" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."API_CREDENTIALS" ADD CONSTRAINT "SYS_C0021924" CHECK ("USERNAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."API_CREDENTIALS" ADD CONSTRAINT "SYS_C0021925" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."API_CREDENTIALS" ADD CONSTRAINT "SYS_C0021926" CHECK ("ORGANIZATION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."API_CREDENTIALS" ADD CONSTRAINT "SYS_C0021927" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table API_CREDENTIALS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."API_CREDENTIALS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."API_CREDENTIALS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select api_credentials_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table API_EXPOSE_USERS
-- ----------------------------
ALTER TABLE "CRVSPROD"."API_EXPOSE_USERS" ADD CONSTRAINT "API_EXPOSE_USERS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table API_EXPOSE_USERS
-- ----------------------------
ALTER TABLE "CRVSPROD"."API_EXPOSE_USERS" ADD CONSTRAINT "SYS_C0021987" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."API_EXPOSE_USERS" ADD CONSTRAINT "SYS_C0021988" CHECK ("ORGANIZATION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."API_EXPOSE_USERS" ADD CONSTRAINT "SYS_C0021989" CHECK ("USERNAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."API_EXPOSE_USERS" ADD CONSTRAINT "SYS_C0021990" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."API_EXPOSE_USERS" ADD CONSTRAINT "SYS_C0021991" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table API_EXPOSE_USERS
-- ----------------------------
CREATE UNIQUE INDEX "CRVSPROD"."AP_EXPOS_USER_ORGANIZATIO_UK"
  ON "CRVSPROD"."API_EXPOSE_USERS" (LOWER("ORGANIZATION") ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Triggers structure for table API_EXPOSE_USERS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."API_EXPOSE_USERS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."API_EXPOSE_USERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select api_expose_users_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table ARC_NID_VERIFICATIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_NID_VERIFICATIONS" ADD CONSTRAINT "ARC_NID_VERIFICATIONS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ARC_NID_VERIFICATIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_NID_VERIFICATIONS" ADD CONSTRAINT "SYS_C0021921" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ARC_NID_VERIFICATIONS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."ARC_NID_VERIFICATIONS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."ARC_NID_VERIFICATIONS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select arc_nid_verifications_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table ARC_ORG_STUDENT_RESPONSES
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_ORG_STUDENT_RESPONSES" ADD CONSTRAINT "AR_OR_STUDEN_RESPONSE_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ARC_ORG_STUDENT_RESPONSES
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_ORG_STUDENT_RESPONSES" ADD CONSTRAINT "SYS_C0021937" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_ORG_STUDENT_RESPONSES" ADD CONSTRAINT "SYS_C0021938" CHECK ("BRN" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_ORG_STUDENT_RESPONSES" ADD CONSTRAINT "SYS_C0021939" CHECK ("DOB" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_ORG_STUDENT_RESPONSES" ADD CONSTRAINT "SYS_C0021940" CHECK ("RESPONSE_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_ORG_STUDENT_RESPONSES" ADD CONSTRAINT "SYS_C0021941" CHECK ("REQUEST_RESPONSE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ARC_ORG_STUDENT_RESPONSES
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."ARC_ORG_STUDENT_RESPONSES_ID_T" BEFORE INSERT ON "CRVSPROD"."ARC_ORG_STUDENT_RESPONSES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select arc_org_student_responses_id_s.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table ARC_ORG_VERIFICATIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_ORG_VERIFICATIONS" ADD CONSTRAINT "ARC_ORG_VERIFICATIONS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ARC_ORG_VERIFICATIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_ORG_VERIFICATIONS" ADD CONSTRAINT "SYS_C0022405" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ARC_ORG_VERIFICATIONS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."ARC_ORG_VERIFICATIONS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."ARC_ORG_VERIFICATIONS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select arc_org_verifications_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table ARC_STD_AVE_ATT_DATA
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_STD_AVE_ATT_DATA" ADD CONSTRAINT "ARC_STD_AVE_ATT_DATA_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ARC_STD_AVE_ATT_DATA
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_STD_AVE_ATT_DATA" ADD CONSTRAINT "SYS_C0021859" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_AVE_ATT_DATA" ADD CONSTRAINT "SYS_C0021860" CHECK ("SRI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_AVE_ATT_DATA" ADD CONSTRAINT "SYS_C0021861" CHECK ("SCAI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_AVE_ATT_DATA" ADD CONSTRAINT "SYS_C0021862" CHECK ("ATT_YEAR" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_AVE_ATT_DATA" ADD CONSTRAINT "SYS_C0021863" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ARC_STD_AVE_ATT_DATA
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."ARC_STD_AVE_ATT_DATA_ID_TRG" BEFORE INSERT ON "CRVSPROD"."ARC_STD_AVE_ATT_DATA" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select arc_std_ave_att_data_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table ARC_STD_CURRENT_ACADEMIC_INFO
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "AR_ST_CURREN_ACADEMI_INF_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ARC_STD_CURRENT_ACADEMIC_INFO
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021802" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021803" CHECK ("SRI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021804" CHECK ("STD_CLASS_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021805" CHECK ("ACADEMIC_YEAR" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021806" CHECK ("EIIN" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021807" CHECK ("MIGRATION_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021808" CHECK ("ACTIVE_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021809" CHECK ("PROMOTION_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021810" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ARC_STD_CURRENT_ACADEMIC_INFO
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."ARC_STD_CURRENT_ACADEMIC_INFO_" BEFORE INSERT ON "CRVSPROD"."ARC_STD_CURRENT_ACADEMIC_INFO" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select arc_std_current_academic_info_.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table ARC_STD_PREVIOUS_EXAM_RESULTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_STD_PREVIOUS_EXAM_RESULTS" ADD CONSTRAINT "AR_ST_PREVIOU_EXA_RESULT_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ARC_STD_PREVIOUS_EXAM_RESULTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_STD_PREVIOUS_EXAM_RESULTS" ADD CONSTRAINT "SYS_C0021782" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_PREVIOUS_EXAM_RESULTS" ADD CONSTRAINT "SYS_C0021783" CHECK ("SRI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_PREVIOUS_EXAM_RESULTS" ADD CONSTRAINT "SYS_C0021784" CHECK ("PREVIOUS_EXAM_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_PREVIOUS_EXAM_RESULTS" ADD CONSTRAINT "SYS_C0021785" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ARC_STD_PREVIOUS_EXAM_RESULTS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."ARC_STD_PREVIOUS_EXAM_RESULTS_" BEFORE INSERT ON "CRVSPROD"."ARC_STD_PREVIOUS_EXAM_RESULTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select arc_std_previous_exam_results_.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table ARC_STD_REGISTRATION_INFO
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_STD_REGISTRATION_INFO" ADD CONSTRAINT "AR_ST_REGISTRATIO_INF_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ARC_STD_REGISTRATION_INFO
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021721" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021722" CHECK ("EIIN" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021723" CHECK ("GUARDIAN_SIG_DAY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021724" CHECK ("ID_CARD_GENERATE_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021725" CHECK ("IMAGE_FOLDER_PATH" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021726" CHECK ("STD_BIRTH_REG_NO_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021727" CHECK ("MOTHER_NID_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021728" CHECK ("FATHER_NID_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021729" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ARC_STD_REGISTRATION_INFO
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."ARC_STD_REGISTRATION_INFO_ID_T" BEFORE INSERT ON "CRVSPROD"."ARC_STD_REGISTRATION_INFO" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select arc_std_registration_info_id_s.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table ARC_STD_SUBJECT_WISE_RESULTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_STD_SUBJECT_WISE_RESULTS" ADD CONSTRAINT "AR_ST_SUBJEC_WIS_RESULT_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ARC_STD_SUBJECT_WISE_RESULTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."ARC_STD_SUBJECT_WISE_RESULTS" ADD CONSTRAINT "SYS_C0021792" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_SUBJECT_WISE_RESULTS" ADD CONSTRAINT "SYS_C0021793" CHECK ("SCAI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_SUBJECT_WISE_RESULTS" ADD CONSTRAINT "SYS_C0021794" CHECK ("CLASS_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ARC_STD_SUBJECT_WISE_RESULTS" ADD CONSTRAINT "SYS_C0021795" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table ARC_STD_SUBJECT_WISE_RESULTS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."ARC_STD_SUBJECT_WISE_RESULTS_I" BEFORE INSERT ON "CRVSPROD"."ARC_STD_SUBJECT_WISE_RESULTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select arc_std_subject_wise_results_i.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table BOARDS
-- ----------------------------
ALTER TABLE "CRVSPROD"."BOARDS" ADD CONSTRAINT "BOARDS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table BOARDS
-- ----------------------------
ALTER TABLE "CRVSPROD"."BOARDS" ADD CONSTRAINT "SYS_C0021949" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."BOARDS" ADD CONSTRAINT "SYS_C0021950" CHECK ("BOARD_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."BOARDS" ADD CONSTRAINT "SYS_C0021951" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table BOARDS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."BOARDS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."BOARDS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select boards_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table CRVS_IDS
-- ----------------------------
ALTER TABLE "CRVSPROD"."CRVS_IDS" ADD CONSTRAINT "CRVS_IDS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table CRVS_IDS
-- ----------------------------
ALTER TABLE "CRVSPROD"."CRVS_IDS" ADD CONSTRAINT "CRVS_IDS_CRVS_ID_UK" UNIQUE ("CRVS_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table CRVS_IDS
-- ----------------------------
ALTER TABLE "CRVSPROD"."CRVS_IDS" ADD CONSTRAINT "SYS_C0021943" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."CRVS_IDS" ADD CONSTRAINT "SYS_C0021944" CHECK ("CRVS_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."CRVS_IDS" ADD CONSTRAINT "SYS_C0021945" CHECK ("BOARD_CODE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."CRVS_IDS" ADD CONSTRAINT "SYS_C0021946" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table CRVS_IDS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."CRVS_IDS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."CRVS_IDS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select crvs_ids_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Checks structure for table DISTRICTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."DISTRICTS" ADD CONSTRAINT "SYS_C0021824" CHECK ("DISTRICT_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."DISTRICTS" ADD CONSTRAINT "SYS_C0021825" CHECK ("DIVISION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."DISTRICTS" ADD CONSTRAINT "SYS_C0021826" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table DISTRICTS
-- ----------------------------
CREATE INDEX "CRVSPROD"."IDX_DIS_DIVISION_DISTRICT_ID"
  ON "CRVSPROD"."DISTRICTS" ("DIVISION_ID" ASC, "DISTRICT_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table DISTRICT_WISE_BOARDS
-- ----------------------------
ALTER TABLE "CRVSPROD"."DISTRICT_WISE_BOARDS" ADD CONSTRAINT "DISTRICT_WISE_BOARDS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table DISTRICT_WISE_BOARDS
-- ----------------------------
ALTER TABLE "CRVSPROD"."DISTRICT_WISE_BOARDS" ADD CONSTRAINT "SYS_C0021953" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."DISTRICT_WISE_BOARDS" ADD CONSTRAINT "SYS_C0021954" CHECK ("DIVISION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."DISTRICT_WISE_BOARDS" ADD CONSTRAINT "SYS_C0021955" CHECK ("DISTRICT_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."DISTRICT_WISE_BOARDS" ADD CONSTRAINT "SYS_C0021956" CHECK ("BOARD_CODE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table DISTRICT_WISE_BOARDS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."DISTRICT_WISE_BOARDS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."DISTRICT_WISE_BOARDS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select district_wise_boards_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Checks structure for table DIVISIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."DIVISIONS" ADD CONSTRAINT "SYS_C0021822" CHECK ("DIVISION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."DIVISIONS" ADD CONSTRAINT "SYS_C0021823" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table DIVISIONS
-- ----------------------------
CREATE INDEX "CRVSPROD"."IDX_DIV_DIVISION_ID"
  ON "CRVSPROD"."DIVISIONS" ("DIVISION_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table EDUCATIONS_LEVELS
-- ----------------------------
ALTER TABLE "CRVSPROD"."EDUCATIONS_LEVELS" ADD CONSTRAINT "EDUCATI_LEV_EDUCAT_LE_ID_PK" PRIMARY KEY ("EDUCATION_LEVEL_ID");

-- ----------------------------
-- Checks structure for table EDUCATIONS_LEVELS
-- ----------------------------
ALTER TABLE "CRVSPROD"."EDUCATIONS_LEVELS" ADD CONSTRAINT "SYS_C0021904" CHECK ("EDUCATION_LEVEL_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."EDUCATIONS_LEVELS" ADD CONSTRAINT "SYS_C0021905" CHECK ("EDUCATION_LEVEL_CODE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."EDUCATIONS_LEVELS" ADD CONSTRAINT "SYS_C0021906" CHECK ("ENTRY_TIMESTAMP" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."EDUCATIONS_LEVELS" ADD CONSTRAINT "SYS_C0021907" CHECK ("LAST_UPDATED_TIMESTAMP" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."EDUCATIONS_LEVELS" ADD CONSTRAINT "SYS_C0021908" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table EDUCATIONS_LEVELS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."EDUCATIONS_LEVELS_EDUCATION_LE" BEFORE INSERT ON "CRVSPROD"."EDUCATIONS_LEVELS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.EDUCATION_LEVEL_ID is null then
                select educations_levels_EDUCATION_LE.nextval into :new.EDUCATION_LEVEL_ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table EDUCATION_BOARD_RESPONSES
-- ----------------------------
ALTER TABLE "CRVSPROD"."EDUCATION_BOARD_RESPONSES" ADD CONSTRAINT "EDUCATIO_BOAR_RESPONSE_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table EDUCATION_BOARD_RESPONSES
-- ----------------------------
ALTER TABLE "CRVSPROD"."EDUCATION_BOARD_RESPONSES" ADD CONSTRAINT "SYS_C0021958" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."EDUCATION_BOARD_RESPONSES" ADD CONSTRAINT "SYS_C0021959" CHECK ("REQUEST_RESPONSE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table EDUCATION_BOARD_RESPONSES
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."EDUCATION_BOARD_RESPONSES_ID_T" BEFORE INSERT ON "CRVSPROD"."EDUCATION_BOARD_RESPONSES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select education_board_responses_id_s.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table EDUCATION_DEGREES
-- ----------------------------
ALTER TABLE "CRVSPROD"."EDUCATION_DEGREES" ADD CONSTRAINT "EDUCAT_DEGR_EDUCAT_DEG_ID_PK" PRIMARY KEY ("EDUCATION_DEGREE_ID");

-- ----------------------------
-- Checks structure for table EDUCATION_DEGREES
-- ----------------------------
ALTER TABLE "CRVSPROD"."EDUCATION_DEGREES" ADD CONSTRAINT "SYS_C0021912" CHECK ("EDUCATION_DEGREE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table EDUCATION_DEGREES
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."EDUCATION_DEGREES_EDUCATION_DE" BEFORE INSERT ON "CRVSPROD"."EDUCATION_DEGREES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.EDUCATION_DEGREE_ID is null then
                select education_degrees_EDUCATION_DE.nextval into :new.EDUCATION_DEGREE_ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table FAILED_JOBS
-- ----------------------------
ALTER TABLE "CRVSPROD"."FAILED_JOBS" ADD CONSTRAINT "FAILED_JOBS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table FAILED_JOBS
-- ----------------------------
ALTER TABLE "CRVSPROD"."FAILED_JOBS" ADD CONSTRAINT "SYS_C0024930" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."FAILED_JOBS" ADD CONSTRAINT "SYS_C0024931" CHECK ("CONNECTION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."FAILED_JOBS" ADD CONSTRAINT "SYS_C0024932" CHECK ("QUEUE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."FAILED_JOBS" ADD CONSTRAINT "SYS_C0024933" CHECK ("PAYLOAD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."FAILED_JOBS" ADD CONSTRAINT "SYS_C0024934" CHECK ("EXCEPTION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."FAILED_JOBS" ADD CONSTRAINT "SYS_C0024935" CHECK ("FAILED_AT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table FAILED_JOBS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."FAILED_JOBS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."FAILED_JOBS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select failed_jobs_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table GEOGRAPHICAL_AREA
-- ----------------------------
ALTER TABLE "CRVSPROD"."GEOGRAPHICAL_AREA" ADD CONSTRAINT "GEOGRAPHI_AR_GEOGRAPHI_STA_PK" PRIMARY KEY ("GEOGRAPHICAL_STATUS");

-- ----------------------------
-- Checks structure for table GEOGRAPHICAL_AREA
-- ----------------------------
ALTER TABLE "CRVSPROD"."GEOGRAPHICAL_AREA" ADD CONSTRAINT "SYS_C0021914" CHECK ("GEOGRAPHICAL_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table GEOGRAPHICAL_AREA
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."GEOGRAPHICAL_AREA_GEOGRAPHICAL" BEFORE INSERT ON "CRVSPROD"."GEOGRAPHICAL_AREA" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.GEOGRAPHICAL_STATUS is null then
                select geographical_area_GEOGRAPHICAL.nextval into :new.GEOGRAPHICAL_STATUS from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table INSTITUTES
-- ----------------------------
ALTER TABLE "CRVSPROD"."INSTITUTES" ADD CONSTRAINT "INSTITUTES_INSTITUTE_ID_PK" PRIMARY KEY ("INSTITUTE_ID");

-- ----------------------------
-- Checks structure for table INSTITUTES
-- ----------------------------
ALTER TABLE "CRVSPROD"."INSTITUTES" ADD CONSTRAINT "SYS_C0021835" CHECK ("INSTITUTE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES" ADD CONSTRAINT "SYS_C0021836" CHECK ("EIIN" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES" ADD CONSTRAINT "SYS_C0021837" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES" ADD CONSTRAINT "SYS_C0021838" CHECK ("USER_ROLES" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES" ADD CONSTRAINT "SYS_C0021839" CHECK ("STD_ID_CARD_GENERATE_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES" ADD CONSTRAINT "SYS_C0021840" CHECK ("INS_ID_CARD_GENERATE_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table INSTITUTES
-- ----------------------------
CREATE INDEX "CRVSPROD"."IDX_INS_DISTRICT_ID"
  ON "CRVSPROD"."INSTITUTES" ("DISTRICT_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;
CREATE INDEX "CRVSPROD"."IDX_INS_DIVISION_ID"
  ON "CRVSPROD"."INSTITUTES" ("DIVISION_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;
CREATE INDEX "CRVSPROD"."IDX_INS_EIIN"
  ON "CRVSPROD"."INSTITUTES" ("EIIN" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;
CREATE INDEX "CRVSPROD"."IDX_INS_INSTITUTE_TYPE_ID"
  ON "CRVSPROD"."INSTITUTES" ("INSTITUTE_TYPE_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;
CREATE INDEX "CRVSPROD"."IDX_INS_THANA_ID"
  ON "CRVSPROD"."INSTITUTES" ("THANA_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Triggers structure for table INSTITUTES
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."INSTITUTES_INSTITUTE_ID_TRG" BEFORE INSERT ON "CRVSPROD"."INSTITUTES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.INSTITUTE_ID is null then
                select institutes_INSTITUTE_ID_seq.nextval into :new.INSTITUTE_ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table INSTITUTES_TYPES
-- ----------------------------
ALTER TABLE "CRVSPROD"."INSTITUTES_TYPES" ADD CONSTRAINT "INSTITUT_TYP_INSTITU_TY_ID_PK" PRIMARY KEY ("INSTITUTE_TYPE_ID");

-- ----------------------------
-- Checks structure for table INSTITUTES_TYPES
-- ----------------------------
ALTER TABLE "CRVSPROD"."INSTITUTES_TYPES" ADD CONSTRAINT "SYS_C0021910" CHECK ("INSTITUTE_TYPE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table INSTITUTES_TYPES
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."INSTITUTES_TYPES_INSTITUTE_TYP" BEFORE INSERT ON "CRVSPROD"."INSTITUTES_TYPES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.INSTITUTE_TYPE_ID is null then
                select institutes_types_INSTITUTE_TYP.nextval into :new.INSTITUTE_TYPE_ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table INSTITUTES_USER
-- ----------------------------
ALTER TABLE "CRVSPROD"."INSTITUTES_USER" ADD CONSTRAINT "INSTITUTES_USER_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table INSTITUTES_USER
-- ----------------------------
ALTER TABLE "CRVSPROD"."INSTITUTES_USER" ADD CONSTRAINT "INSTITUTES_USER_EMAIL_UK" UNIQUE ("EMAIL") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES_USER" ADD CONSTRAINT "INSTITUTES_USER_TEACHER_ID_UK" UNIQUE ("TEACHER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table INSTITUTES_USER
-- ----------------------------
ALTER TABLE "CRVSPROD"."INSTITUTES_USER" ADD CONSTRAINT "SYS_C0021750" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES_USER" ADD CONSTRAINT "SYS_C0021751" CHECK ("EIIN" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES_USER" ADD CONSTRAINT "SYS_C0021752" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES_USER" ADD CONSTRAINT "SYS_C0021753" CHECK ("EMAIL" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES_USER" ADD CONSTRAINT "SYS_C0021754" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES_USER" ADD CONSTRAINT "SYS_C0021755" CHECK ("PHONE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES_USER" ADD CONSTRAINT "SYS_C0021756" CHECK ("USER_ROLES" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTES_USER" ADD CONSTRAINT "SYS_C0021757" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table INSTITUTES_USER
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."INSTITUTES_USER_ID_TRG" BEFORE INSERT ON "CRVSPROD"."INSTITUTES_USER" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select institutes_user_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table INSTITUTE_TEACHERS
-- ----------------------------
ALTER TABLE "CRVSPROD"."INSTITUTE_TEACHERS" ADD CONSTRAINT "INSTITUTE_TEACHERS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table INSTITUTE_TEACHERS
-- ----------------------------
ALTER TABLE "CRVSPROD"."INSTITUTE_TEACHERS" ADD CONSTRAINT "SYS_C0024297" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTE_TEACHERS" ADD CONSTRAINT "SYS_C0024298" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTE_TEACHERS" ADD CONSTRAINT "SYS_C0024299" CHECK ("PHONE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTE_TEACHERS" ADD CONSTRAINT "SYS_C0024300" CHECK ("NID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTE_TEACHERS" ADD CONSTRAINT "SYS_C0024301" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."INSTITUTE_TEACHERS" ADD CONSTRAINT "SYS_C0024302" CHECK ("TEACHER_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table INSTITUTE_TEACHERS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."INSTITUTE_TEACHERS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."INSTITUTE_TEACHERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
BEGIN
    SELECT INSTITUTE_TEACHERS_ID_SEQ.NEXTVAL
    INTO   :new.ID
    FROM   dual;
END;
/

-- ----------------------------
-- Primary Key structure for table JOBS
-- ----------------------------
ALTER TABLE "CRVSPROD"."JOBS" ADD CONSTRAINT "JOBS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table JOBS
-- ----------------------------
ALTER TABLE "CRVSPROD"."JOBS" ADD CONSTRAINT "SYS_C0022407" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."JOBS" ADD CONSTRAINT "SYS_C0022408" CHECK ("QUEUE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."JOBS" ADD CONSTRAINT "SYS_C0022409" CHECK ("PAYLOAD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."JOBS" ADD CONSTRAINT "SYS_C0022410" CHECK ("ATTEMPTS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."JOBS" ADD CONSTRAINT "SYS_C0022411" CHECK ("AVAILABLE_AT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."JOBS" ADD CONSTRAINT "SYS_C0022412" CHECK ("CREATED_AT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table JOBS
-- ----------------------------
CREATE INDEX "CRVSPROD"."JOBS_QUEUE_INDEX"
  ON "CRVSPROD"."JOBS" ("QUEUE" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Triggers structure for table JOBS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."JOBS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."JOBS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select jobs_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table LOOKUP_AREA_STATUS1
-- ----------------------------
ALTER TABLE "CRVSPROD"."LOOKUP_AREA_STATUS1" ADD CONSTRAINT "LOOKU_ARE_STATUS_ARE_STATUS_PK" PRIMARY KEY ("AREA_STATUS1");

-- ----------------------------
-- Checks structure for table LOOKUP_AREA_STATUS1
-- ----------------------------
ALTER TABLE "CRVSPROD"."LOOKUP_AREA_STATUS1" ADD CONSTRAINT "SYS_C0021918" CHECK ("AREA_STATUS1" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."LOOKUP_AREA_STATUS1" ADD CONSTRAINT "SYS_C0021919" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table LOOKUP_AREA_STATUS1
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."LOOKUP_AREA_STATUS1_AREA_STATU" BEFORE INSERT ON "CRVSPROD"."LOOKUP_AREA_STATUS1" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.AREA_STATUS1 is null then
                select lookup_area_status1_AREA_STATU.nextval into :new.AREA_STATUS1 from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table MANAGEMENTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."MANAGEMENTS" ADD CONSTRAINT "MANAGEMENTS_MANAGEMENT_PK" PRIMARY KEY ("MANAGEMENT");

-- ----------------------------
-- Checks structure for table MANAGEMENTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."MANAGEMENTS" ADD CONSTRAINT "SYS_C0021901" CHECK ("MANAGEMENT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."MANAGEMENTS" ADD CONSTRAINT "SYS_C0021902" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table MANAGEMENTS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."MANAGEMENTS_MANAGEMENT_TRG" BEFORE INSERT ON "CRVSPROD"."MANAGEMENTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.MANAGEMENT is null then
                select managements_MANAGEMENT_seq.nextval into :new.MANAGEMENT from dual;
            end if;
            end;
/

-- ----------------------------
-- Checks structure for table MAUZAS
-- ----------------------------
ALTER TABLE "CRVSPROD"."MAUZAS" ADD CONSTRAINT "SYS_C0021831" CHECK ("MAUZA_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."MAUZAS" ADD CONSTRAINT "SYS_C0021832" CHECK ("UNION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table MAUZAS
-- ----------------------------
CREATE INDEX "CRVSPROD"."IDX_MAUZA_UNION_MAUZA_ID"
  ON "CRVSPROD"."MAUZAS" ("UNION_ID" ASC, "MAUZA_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table MIGRATIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."MIGRATIONS" ADD CONSTRAINT "MIGRATIONS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MIGRATIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."MIGRATIONS" ADD CONSTRAINT "SYS_C0021710" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."MIGRATIONS" ADD CONSTRAINT "SYS_C0021711" CHECK ("MIGRATION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."MIGRATIONS" ADD CONSTRAINT "SYS_C0021712" CHECK ("BATCH" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table MIGRATIONS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."MIGRATIONS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."MIGRATIONS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select migrations_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table MODEL_HAS_PERMISSIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."MODEL_HAS_PERMISSIONS" ADD CONSTRAINT "MODEL_HAS_PERMISSIONS_PERMISSION_MODEL_TYPE_PRIMARY" PRIMARY KEY ("PERMISSION_ID", "MODEL_ID", "MODEL_TYPE");

-- ----------------------------
-- Checks structure for table MODEL_HAS_PERMISSIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."MODEL_HAS_PERMISSIONS" ADD CONSTRAINT "SYS_C0021969" CHECK ("PERMISSION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."MODEL_HAS_PERMISSIONS" ADD CONSTRAINT "SYS_C0021970" CHECK ("MODEL_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."MODEL_HAS_PERMISSIONS" ADD CONSTRAINT "SYS_C0021971" CHECK ("MODEL_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table MODEL_HAS_PERMISSIONS
-- ----------------------------
CREATE INDEX "CRVSPROD"."MODEL_HAS_PERMISSIONS_MODEL_ID_MODEL_TYPE_INDEX"
  ON "CRVSPROD"."MODEL_HAS_PERMISSIONS" ("MODEL_ID" ASC, "MODEL_TYPE" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table MODEL_HAS_ROLES
-- ----------------------------
ALTER TABLE "CRVSPROD"."MODEL_HAS_ROLES" ADD CONSTRAINT "MODEL_HAS_ROLES_ROLE_MODEL_TYPE_PRIMARY" PRIMARY KEY ("ROLE_ID", "MODEL_ID", "MODEL_TYPE");

-- ----------------------------
-- Checks structure for table MODEL_HAS_ROLES
-- ----------------------------
ALTER TABLE "CRVSPROD"."MODEL_HAS_ROLES" ADD CONSTRAINT "SYS_C0021974" CHECK ("ROLE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."MODEL_HAS_ROLES" ADD CONSTRAINT "SYS_C0021975" CHECK ("MODEL_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."MODEL_HAS_ROLES" ADD CONSTRAINT "SYS_C0021976" CHECK ("MODEL_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table MODEL_HAS_ROLES
-- ----------------------------
CREATE INDEX "CRVSPROD"."MODEL_HAS_ROLES_MODEL_ID_MODEL_TYPE_INDEX"
  ON "CRVSPROD"."MODEL_HAS_ROLES" ("MODEL_ID" ASC, "MODEL_TYPE" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table PERMISSIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."PERMISSIONS" ADD CONSTRAINT "PERMISSIONS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table PERMISSIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."PERMISSIONS" ADD CONSTRAINT "SYS_C0021961" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."PERMISSIONS" ADD CONSTRAINT "SYS_C0021962" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."PERMISSIONS" ADD CONSTRAINT "SYS_C0021963" CHECK ("GUARD_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table PERMISSIONS
-- ----------------------------
CREATE UNIQUE INDEX "CRVSPROD"."PERMISSIONS_NAME_GUARD_NAME_UK"
  ON "CRVSPROD"."PERMISSIONS" (LOWER("NAME") ASC, LOWER("GUARD_NAME") ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Triggers structure for table PERMISSIONS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."PERMISSIONS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."PERMISSIONS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select permissions_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Checks structure for table POURASAVAS
-- ----------------------------
ALTER TABLE "CRVSPROD"."POURASAVAS" ADD CONSTRAINT "SYS_C0021833" CHECK ("POURA_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."POURASAVAS" ADD CONSTRAINT "SYS_C0021834" CHECK ("THANA_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table POURASAVAS
-- ----------------------------
CREATE INDEX "CRVSPROD"."IDX_POURASAVAS_THANA_ID"
  ON "CRVSPROD"."POURASAVAS" ("THANA_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table ROLES
-- ----------------------------
ALTER TABLE "CRVSPROD"."ROLES" ADD CONSTRAINT "ROLES_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table ROLES
-- ----------------------------
ALTER TABLE "CRVSPROD"."ROLES" ADD CONSTRAINT "SYS_C0021965" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ROLES" ADD CONSTRAINT "SYS_C0021966" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ROLES" ADD CONSTRAINT "SYS_C0021967" CHECK ("GUARD_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ROLES
-- ----------------------------
CREATE UNIQUE INDEX "CRVSPROD"."ROLES_NAME_GUARD_NAME_UK"
  ON "CRVSPROD"."ROLES" (LOWER("NAME") ASC, LOWER("GUARD_NAME") ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Triggers structure for table ROLES
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."ROLES_ID_TRG" BEFORE INSERT ON "CRVSPROD"."ROLES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select roles_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table ROLE_HAS_PERMISSIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."ROLE_HAS_PERMISSIONS" ADD CONSTRAINT "ROLE_HAS_PERMISSIONS_PERMISSION_ID_ROLE_ID_PRIMARY" PRIMARY KEY ("PERMISSION_ID", "ROLE_ID");

-- ----------------------------
-- Checks structure for table ROLE_HAS_PERMISSIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."ROLE_HAS_PERMISSIONS" ADD CONSTRAINT "SYS_C0021979" CHECK ("PERMISSION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ROLE_HAS_PERMISSIONS" ADD CONSTRAINT "SYS_C0021980" CHECK ("ROLE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Uniques structure for table SESSIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."SESSIONS" ADD CONSTRAINT "SESSIONS_ID_UK" UNIQUE ("ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table SESSIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."SESSIONS" ADD CONSTRAINT "SYS_C0021855" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."SESSIONS" ADD CONSTRAINT "SYS_C0021856" CHECK ("PAYLOAD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."SESSIONS" ADD CONSTRAINT "SYS_C0021857" CHECK ("LAST_ACTIVITY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table STD_ACHIEVEMENTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_ACHIEVEMENTS" ADD CONSTRAINT "STD_ACHIEVEMENTS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_ACHIEVEMENTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_ACHIEVEMENTS" ADD CONSTRAINT "SYS_C0021898" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ACHIEVEMENTS" ADD CONSTRAINT "SYS_C0021899" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_ACHIEVEMENTS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_ACHIEVEMENTS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."STD_ACHIEVEMENTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_achievements_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_ATTD_WORKING_DAY
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_ATTD_WORKING_DAY" ADD CONSTRAINT "STD_ATTD_WORKING_DAY_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_ATTD_WORKING_DAY
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_ATTD_WORKING_DAY" ADD CONSTRAINT "SYS_C0021879" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTD_WORKING_DAY" ADD CONSTRAINT "SYS_C0021880" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_ATTD_WORKING_DAY
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_ATTD_WORKING_DAY_ID_TRG" BEFORE INSERT ON "CRVSPROD"."STD_ATTD_WORKING_DAY" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_attd_working_day_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_ATTENDANCES_CHILD
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_CHILD" ADD CONSTRAINT "STD_ATTENDANCES_CHILD_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_ATTENDANCES_CHILD
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_CHILD" ADD CONSTRAINT "SYS_C0021774" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_CHILD" ADD CONSTRAINT "SYS_C0021775" CHECK ("SRI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_CHILD" ADD CONSTRAINT "SYS_C0021776" CHECK ("SCAI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_CHILD" ADD CONSTRAINT "SYS_C0021777" CHECK ("STD_CRVS_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_CHILD" ADD CONSTRAINT "SYS_C0021778" CHECK ("ATTENDANCE_PARENT_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_CHILD" ADD CONSTRAINT "SYS_C0021779" CHECK ("ATTENDANCE_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_CHILD" ADD CONSTRAINT "SYS_C0021780" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_ATTENDANCES_CHILD
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_ATTENDANCES_CHILD_ID_TRG" BEFORE INSERT ON "CRVSPROD"."STD_ATTENDANCES_CHILD" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_attendances_child_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_ATTENDANCES_PARENT
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "STD_ATTENDANCES_PARENT_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_ATTENDANCES_PARENT
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "SYS_C0021761" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "SYS_C0021762" CHECK ("CLASS_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "SYS_C0021763" CHECK ("EIIN" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "SYS_C0021764" CHECK ("ATTENDANCE_DATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "SYS_C0021765" CHECK ("YEAR" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "SYS_C0021766" CHECK ("ATTENDANCE_MONTH" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "SYS_C0021767" CHECK ("GIRLS_ATTENDANCE_COUNT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "SYS_C0021768" CHECK ("BOYS_ATTENDANCE_COUNT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "SYS_C0021769" CHECK ("TOTAL_ABSENT_COUNT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "SYS_C0021770" CHECK ("TOTAL_ATTEND_COUNT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "SYS_C0021771" CHECK ("TOTAL_STUDENT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_ATTENDANCES_PARENT" ADD CONSTRAINT "SYS_C0021772" CHECK ("TOTAL_GIRLS_COUNT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_ATTENDANCES_PARENT
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_ATTENDANCES_PARENT_ID_TRG" BEFORE INSERT ON "CRVSPROD"."STD_ATTENDANCES_PARENT" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_attendances_parent_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_AVERAGE_ATTENDANCE_DATA
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_AVERAGE_ATTENDANCE_DATA" ADD CONSTRAINT "ST_AVERAG_ATTENDANC_DAT_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_AVERAGE_ATTENDANCE_DATA
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_AVERAGE_ATTENDANCE_DATA" ADD CONSTRAINT "SYS_C0021865" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_AVERAGE_ATTENDANCE_DATA" ADD CONSTRAINT "SYS_C0021866" CHECK ("SRI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_AVERAGE_ATTENDANCE_DATA" ADD CONSTRAINT "SYS_C0021867" CHECK ("SCAI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_AVERAGE_ATTENDANCE_DATA" ADD CONSTRAINT "SYS_C0021868" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_AVERAGE_ATTENDANCE_DATA
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_AVERAGE_ATTENDANCE_DATA_ID" BEFORE INSERT ON "CRVSPROD"."STD_AVERAGE_ATTENDANCE_DATA" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_average_attendance_data_id.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_CATEGORYS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_CATEGORYS" ADD CONSTRAINT "STD_CATEGORYS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_CATEGORYS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_CATEGORYS" ADD CONSTRAINT "SYS_C0021889" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_CATEGORYS" ADD CONSTRAINT "SYS_C0021890" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_CATEGORYS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_CATEGORYS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."STD_CATEGORYS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_categorys_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Checks structure for table STD_CLASSES
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_CLASSES" ADD CONSTRAINT "SYS_C0021984" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_CLASSES" ADD CONSTRAINT "SYS_C0021985" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_CLASSES" ADD CONSTRAINT "SYS_C0021986" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table STD_CURRENT_ACADEMIC_INFO
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "ST_CURREN_ACADEMI_INF_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_CURRENT_ACADEMIC_INFO
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021812" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021813" CHECK ("SRI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021814" CHECK ("STD_CLASS_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021815" CHECK ("ACADEMIC_YEAR" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021816" CHECK ("EIIN" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021817" CHECK ("MIGRATION_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021818" CHECK ("ACTIVE_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021819" CHECK ("PROMOTION_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO" ADD CONSTRAINT "SYS_C0021820" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table STD_CURRENT_ACADEMIC_INFO
-- ----------------------------
CREATE INDEX "CRVSPROD"."IDX_STD_CURRENT_AC_INFO_EIIN"
  ON "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO" ("SRI_ID" ASC, "EIIN" ASC, "ACADEMIC_YEAR" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Triggers structure for table STD_CURRENT_ACADEMIC_INFO
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO_ID_T" BEFORE INSERT ON "CRVSPROD"."STD_CURRENT_ACADEMIC_INFO" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_current_academic_info_id_s.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Checks structure for table STD_EXAMS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_EXAMS" ADD CONSTRAINT "SYS_C0021870" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_EXAMS" ADD CONSTRAINT "SYS_C0021871" CHECK ("CLASS_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_EXAMS" ADD CONSTRAINT "SYS_C0021872" CHECK ("CONFLICT_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_EXAMS" ADD CONSTRAINT "SYS_C0021873" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table STD_EXAM_DETAILS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_EXAM_DETAILS" ADD CONSTRAINT "STD_EXAM_DETAILS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_EXAM_DETAILS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_EXAM_DETAILS" ADD CONSTRAINT "SYS_C0021874" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_EXAM_DETAILS" ADD CONSTRAINT "SYS_C0021875" CHECK ("EXAM_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_EXAM_DETAILS" ADD CONSTRAINT "SYS_C0021876" CHECK ("INSTITUTE_TYPE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_EXAM_DETAILS" ADD CONSTRAINT "SYS_C0021877" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_EXAM_DETAILS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_EXAM_DETAILS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."STD_EXAM_DETAILS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_exam_details_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_EXTRA_CO_CURRICULAR_EXAM
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_EXTRA_CO_CURRICULAR_EXAM" ADD CONSTRAINT "ST_EXTR_CO_CURRICULA_EXA_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_EXTRA_CO_CURRICULAR_EXAM
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_EXTRA_CO_CURRICULAR_EXAM" ADD CONSTRAINT "SYS_C0021886" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_EXTRA_CO_CURRICULAR_EXAM" ADD CONSTRAINT "SYS_C0021887" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_EXTRA_CO_CURRICULAR_EXAM
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_EXTRA_CO_CURRICULAR_EXAM_I" BEFORE INSERT ON "CRVSPROD"."STD_EXTRA_CO_CURRICULAR_EXAM" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_extra_co_curricular_exam_i.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_GRADING_SYSTEMS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_GRADING_SYSTEMS" ADD CONSTRAINT "STD_GRADING_SYSTEMS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_GRADING_SYSTEMS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_GRADING_SYSTEMS" ADD CONSTRAINT "SYS_C0021930" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_GRADING_SYSTEMS" ADD CONSTRAINT "SYS_C0021931" CHECK ("GRADE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_GRADING_SYSTEMS" ADD CONSTRAINT "SYS_C0021932" CHECK ("GRADE_POINT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_GRADING_SYSTEMS" ADD CONSTRAINT "SYS_C0021933" CHECK ("N_MIN" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_GRADING_SYSTEMS" ADD CONSTRAINT "SYS_C0021934" CHECK ("N_MAX" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_GRADING_SYSTEMS" ADD CONSTRAINT "SYS_C0021935" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_GRADING_SYSTEMS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_GRADING_SYSTEMS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."STD_GRADING_SYSTEMS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_grading_systems_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_HOBBYS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_HOBBYS" ADD CONSTRAINT "STD_HOBBYS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_HOBBYS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_HOBBYS" ADD CONSTRAINT "SYS_C0021892" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_HOBBYS" ADD CONSTRAINT "SYS_C0021893" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_HOBBYS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_HOBBYS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."STD_HOBBYS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_hobbys_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_MIGRATION
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_MIGRATION" ADD CONSTRAINT "STD_MIGRATION_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_MIGRATION
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_MIGRATION" ADD CONSTRAINT "SYS_C0021847" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_MIGRATION" ADD CONSTRAINT "SYS_C0021848" CHECK ("SRI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_MIGRATION" ADD CONSTRAINT "SYS_C0021849" CHECK ("SCAI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_MIGRATION" ADD CONSTRAINT "SYS_C0021850" CHECK ("CLASS_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_MIGRATION" ADD CONSTRAINT "SYS_C0021851" CHECK ("TARGET_EIIN" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_MIGRATION" ADD CONSTRAINT "SYS_C0021852" CHECK ("CURRENT_EIIN" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_MIGRATION" ADD CONSTRAINT "SYS_C0021853" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_MIGRATION
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_MIGRATION_ID_TRG" BEFORE INSERT ON "CRVSPROD"."STD_MIGRATION" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_migration_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_PARENT_OCCUPATIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_PARENT_OCCUPATIONS" ADD CONSTRAINT "STD_PARENT_OCCUPATIONS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_PARENT_OCCUPATIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_PARENT_OCCUPATIONS" ADD CONSTRAINT "SYS_C0021882" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_PARENT_OCCUPATIONS" ADD CONSTRAINT "SYS_C0021883" CHECK ("PARENT_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_PARENT_OCCUPATIONS" ADD CONSTRAINT "SYS_C0021884" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_PARENT_OCCUPATIONS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_PARENT_OCCUPATIONS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."STD_PARENT_OCCUPATIONS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_parent_occupations_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_PARTICIPATIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_PARTICIPATIONS" ADD CONSTRAINT "STD_PARTICIPATIONS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_PARTICIPATIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_PARTICIPATIONS" ADD CONSTRAINT "SYS_C0021895" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_PARTICIPATIONS" ADD CONSTRAINT "SYS_C0021896" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_PARTICIPATIONS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_PARTICIPATIONS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."STD_PARTICIPATIONS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_participations_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_PREVIOUS_EXAM_RESULTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_PREVIOUS_EXAM_RESULTS" ADD CONSTRAINT "ST_PREVIOU_EXA_RESULT_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_PREVIOUS_EXAM_RESULTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_PREVIOUS_EXAM_RESULTS" ADD CONSTRAINT "SYS_C0021787" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_PREVIOUS_EXAM_RESULTS" ADD CONSTRAINT "SYS_C0021788" CHECK ("SRI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_PREVIOUS_EXAM_RESULTS" ADD CONSTRAINT "SYS_C0021789" CHECK ("PREVIOUS_EXAM_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_PREVIOUS_EXAM_RESULTS" ADD CONSTRAINT "SYS_C0021790" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_PREVIOUS_EXAM_RESULTS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_PREVIOUS_EXAM_RESULTS_ID_T" BEFORE INSERT ON "CRVSPROD"."STD_PREVIOUS_EXAM_RESULTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_previous_exam_results_id_s.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_REGISTRATION_INFO
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "STD_REGISTRATION_INFO_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_REGISTRATION_INFO
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021731" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021732" CHECK ("EIIN" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021733" CHECK ("ID_CARD_GENERATE_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021734" CHECK ("IMAGE_FOLDER_PATH" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021735" CHECK ("FM_NID_FOUND_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021736" CHECK ("STD_BIRTH_REG_NO_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021737" CHECK ("UID_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021738" CHECK ("MOTHER_NID_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021739" CHECK ("FATHER_NID_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021740" CHECK ("GUARDIAN_NID_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021741" CHECK ("TEMP_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021742" CHECK ("TAB_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021743" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021744" CHECK ("BRN_FATHER_NAME_EN_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021745" CHECK ("BRN_FATHER_NAME_BN_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021746" CHECK ("BRN_MOTHER_NAME_EN_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021747" CHECK ("BRN_MOTHER_NAME_BN_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_REGISTRATION_INFO" ADD CONSTRAINT "SYS_C0021748" CHECK ("IS_CLICKED_BOARD_RESPONSE_CONFIRM" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table STD_REGISTRATION_INFO
-- ----------------------------
CREATE INDEX "CRVSPROD"."IDX_STD_REGISTRATION_INFO_EIIN"
  ON "CRVSPROD"."STD_REGISTRATION_INFO" ("EIIN" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Triggers structure for table STD_REGISTRATION_INFO
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_REGISTRATION_INFO_ID_TRG" BEFORE INSERT ON "CRVSPROD"."STD_REGISTRATION_INFO" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_registration_info_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table STD_SUBJECT_WISE_RESULTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_SUBJECT_WISE_RESULTS" ADD CONSTRAINT "STD_SUBJECT_WISE_RESULTS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STD_SUBJECT_WISE_RESULTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."STD_SUBJECT_WISE_RESULTS" ADD CONSTRAINT "SYS_C0021797" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_SUBJECT_WISE_RESULTS" ADD CONSTRAINT "SYS_C0021798" CHECK ("SCAI_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_SUBJECT_WISE_RESULTS" ADD CONSTRAINT "SYS_C0021799" CHECK ("CLASS_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."STD_SUBJECT_WISE_RESULTS" ADD CONSTRAINT "SYS_C0021800" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table STD_SUBJECT_WISE_RESULTS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."STD_SUBJECT_WISE_RESULTS_ID_TR" BEFORE INSERT ON "CRVSPROD"."STD_SUBJECT_WISE_RESULTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select std_subject_wise_results_id_se.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Primary Key structure for table SUBJECTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."SUBJECTS" ADD CONSTRAINT "SUBJECTS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table SUBJECTS
-- ----------------------------
ALTER TABLE "CRVSPROD"."SUBJECTS" ADD CONSTRAINT "SYS_C0021842" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."SUBJECTS" ADD CONSTRAINT "SYS_C0021843" CHECK ("INSTITUTE_TYPE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."SUBJECTS" ADD CONSTRAINT "SYS_C0021844" CHECK ("SUBJECT_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."SUBJECTS" ADD CONSTRAINT "SYS_C0021845" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table SUBJECTS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."SUBJECTS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."SUBJECTS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select subjects_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Checks structure for table THANAS
-- ----------------------------
ALTER TABLE "CRVSPROD"."THANAS" ADD CONSTRAINT "SYS_C0021827" CHECK ("THANA_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."THANAS" ADD CONSTRAINT "SYS_C0021828" CHECK ("DISTRICT_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table THANAS
-- ----------------------------
CREATE INDEX "CRVSPROD"."IDX_THANA_DISTRICT_THANA_ID"
  ON "CRVSPROD"."THANAS" ("THANA_ID" ASC, "DISTRICT_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Checks structure for table UNIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."UNIONS" ADD CONSTRAINT "SYS_C0021829" CHECK ("UNION_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."UNIONS" ADD CONSTRAINT "SYS_C0021830" CHECK ("THANA_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table UNIONS
-- ----------------------------
CREATE INDEX "CRVSPROD"."IDX_UNION_THANA_UNION_ID"
  ON "CRVSPROD"."UNIONS" ("THANA_ID" ASC, "UNION_ID" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536
  NEXT 1048576
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
  FLASH_CACHE DEFAULT
)
   USABLE;

-- ----------------------------
-- Primary Key structure for table USERS
-- ----------------------------
ALTER TABLE "CRVSPROD"."USERS" ADD CONSTRAINT "USERS_ID_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table USERS
-- ----------------------------
ALTER TABLE "CRVSPROD"."USERS" ADD CONSTRAINT "USERS_EMAIL_UK" UNIQUE ("EMAIL") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."USERS" ADD CONSTRAINT "USERS_USERNAME_UK" UNIQUE ("USERNAME") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table USERS
-- ----------------------------
ALTER TABLE "CRVSPROD"."USERS" ADD CONSTRAINT "SYS_C0021714" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."USERS" ADD CONSTRAINT "SYS_C0021715" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."USERS" ADD CONSTRAINT "SYS_C0021716" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."USERS" ADD CONSTRAINT "SYS_C0021717" CHECK ("ROLES" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table USERS
-- ----------------------------
CREATE TRIGGER "CRVSPROD"."USERS_ID_TRG" BEFORE INSERT ON "CRVSPROD"."USERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
begin
            if :new.ID is null then
                select users_id_seq.nextval into :new.ID from dual;
            end if;
            end;
/

-- ----------------------------
-- Foreign Keys structure for table MODEL_HAS_PERMISSIONS
-- ----------------------------

-- ----------------------------
-- Foreign Keys structure for table MODEL_HAS_ROLES
-- ----------------------------

-- ----------------------------
-- Foreign Keys structure for table ROLE_HAS_PERMISSIONS
-- ----------------------------
ALTER TABLE "CRVSPROD"."ROLE_HAS_PERMISSIONS" ADD CONSTRAINT "ROL_HA_PERMISSION_ROL_ID_FK" FOREIGN KEY ("ROLE_ID") REFERENCES "CRVSPROD"."ROLES" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "CRVSPROD"."ROLE_HAS_PERMISSIONS" ADD CONSTRAINT "RO_HA_PERMISSIO_PERMISSI_ID_FK" FOREIGN KEY ("PERMISSION_ID") REFERENCES "CRVSPROD"."PERMISSIONS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;